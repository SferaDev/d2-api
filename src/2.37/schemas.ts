/* eslint-disable */

import {
    Id,
    Preset,
    FieldPresets,
    D2SchemaProperties,
    D2Access,
    D2Translation,
    D2Geometry,
    D2Style,
    D2AttributeValueGeneric,
    D2DimensionalKeywords,
    D2Expression,
    D2RelationshipConstraint,
    D2ReportingParams,
    D2Axis,
} from "../schemas/base";

export type D2AnalyticsPeriodBoundary = {
    access: D2Access;
    analyticsPeriodBoundaryType:
        | "BEFORE_START_OF_REPORTING_PERIOD"
        | "BEFORE_END_OF_REPORTING_PERIOD"
        | "AFTER_START_OF_REPORTING_PERIOD"
        | "AFTER_END_OF_REPORTING_PERIOD";
    attributeValues: D2AttributeValue[];
    boundaryTarget: string;
    code: Id;
    created: string;
    createdBy: D2User;
    displayName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    name: string;
    offsetPeriodType: string;
    offsetPeriods: number;
    publicAccess: string;
    sharing: any;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2AnalyticsTableHook = {
    access: D2Access;
    analyticsTableType:
        | "DATA_VALUE"
        | "COMPLETENESS"
        | "COMPLETENESS_TARGET"
        | "ORG_UNIT_TARGET"
        | "EVENT"
        | "ENROLLMENT"
        | "VALIDATION_RESULT";
    attributeValues: D2AttributeValue[];
    code: Id;
    created: string;
    createdBy: D2User;
    displayName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    name: string;
    phase: "RESOURCE_TABLE_POPULATED" | "ANALYTICS_TABLE_POPULATED";
    publicAccess: string;
    resourceTableType:
        | "ORG_UNIT_STRUCTURE"
        | "DATA_SET_ORG_UNIT_CATEGORY"
        | "CATEGORY_OPTION_COMBO_NAME"
        | "DATA_ELEMENT_GROUP_SET_STRUCTURE"
        | "INDICATOR_GROUP_SET_STRUCTURE"
        | "ORG_UNIT_GROUP_SET_STRUCTURE"
        | "CATEGORY_STRUCTURE"
        | "DATA_ELEMENT_STRUCTURE"
        | "PERIOD_STRUCTURE"
        | "DATE_PERIOD_STRUCTURE"
        | "DATA_ELEMENT_CATEGORY_OPTION_COMBO"
        | "DATA_APPROVAL_REMAP_LEVEL"
        | "DATA_APPROVAL_MIN_LEVEL";
    sharing: any;
    sql: string;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2Attribute = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    categoryAttribute: boolean;
    categoryOptionAttribute: boolean;
    categoryOptionComboAttribute: boolean;
    categoryOptionGroupAttribute: boolean;
    categoryOptionGroupSetAttribute: boolean;
    code: Id;
    constantAttribute: boolean;
    created: string;
    createdBy: D2User;
    dataElementAttribute: boolean;
    dataElementGroupAttribute: boolean;
    dataElementGroupSetAttribute: boolean;
    dataSetAttribute: boolean;
    description: string;
    displayDescription: string;
    displayFormName: string;
    displayName: string;
    displayShortName: string;
    documentAttribute: boolean;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    formName: string;
    href: string;
    id: Id;
    indicatorAttribute: boolean;
    indicatorGroupAttribute: boolean;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    legendSetAttribute: boolean;
    mandatory: boolean;
    name: string;
    optionAttribute: boolean;
    optionSet: D2OptionSet;
    optionSetAttribute: boolean;
    organisationUnitAttribute: boolean;
    organisationUnitGroupAttribute: boolean;
    organisationUnitGroupSetAttribute: boolean;
    programAttribute: boolean;
    programIndicatorAttribute: boolean;
    programStageAttribute: boolean;
    publicAccess: string;
    sectionAttribute: boolean;
    sharing: any;
    shortName: string;
    sortOrder: number;
    sqlViewAttribute: boolean;
    trackedEntityAttributeAttribute: boolean;
    trackedEntityTypeAttribute: boolean;
    translations: D2Translation[];
    unique: boolean;
    user: D2User;
    userAccesses: D2UserAccess[];
    userAttribute: boolean;
    userGroupAccesses: D2UserGroupAccess[];
    userGroupAttribute: boolean;
    validationRuleAttribute: boolean;
    validationRuleGroupAttribute: boolean;
    valueType:
        | "TEXT"
        | "LONG_TEXT"
        | "LETTER"
        | "PHONE_NUMBER"
        | "EMAIL"
        | "BOOLEAN"
        | "TRUE_ONLY"
        | "DATE"
        | "DATETIME"
        | "TIME"
        | "NUMBER"
        | "UNIT_INTERVAL"
        | "PERCENTAGE"
        | "INTEGER"
        | "INTEGER_POSITIVE"
        | "INTEGER_NEGATIVE"
        | "INTEGER_ZERO_OR_POSITIVE"
        | "TRACKER_ASSOCIATE"
        | "USERNAME"
        | "COORDINATE"
        | "ORGANISATION_UNIT"
        | "AGE"
        | "URL"
        | "FILE_RESOURCE"
        | "IMAGE";
};

export type D2AttributeValue = {
    attribute: D2Attribute;
    value: string;
};

export type D2Category = {
    access: D2Access;
    aggregationType:
        | "SUM"
        | "AVERAGE"
        | "AVERAGE_SUM_ORG_UNIT"
        | "LAST"
        | "LAST_AVERAGE_ORG_UNIT"
        | "LAST_IN_PERIOD"
        | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
        | "FIRST"
        | "FIRST_AVERAGE_ORG_UNIT"
        | "COUNT"
        | "STDDEV"
        | "VARIANCE"
        | "MIN"
        | "MAX"
        | "NONE"
        | "CUSTOM"
        | "DEFAULT";
    allItems: boolean;
    attributeValues: D2AttributeValue[];
    categoryCombos: D2CategoryCombo[];
    categoryOptions: D2CategoryOption[];
    code: Id;
    created: string;
    createdBy: D2User;
    dataDimension: boolean;
    dataDimensionType: "DISAGGREGATION" | "ATTRIBUTE";
    description: string;
    dimension: string;
    dimensionType:
        | "DATA_X"
        | "PROGRAM_DATA_ELEMENT"
        | "PROGRAM_ATTRIBUTE"
        | "PROGRAM_INDICATOR"
        | "DATA_COLLAPSED"
        | "CATEGORY_OPTION_COMBO"
        | "ATTRIBUTE_OPTION_COMBO"
        | "PERIOD"
        | "ORGANISATION_UNIT"
        | "CATEGORY_OPTION_GROUP_SET"
        | "DATA_ELEMENT_GROUP_SET"
        | "ORGANISATION_UNIT_GROUP_SET"
        | "ORGANISATION_UNIT_GROUP"
        | "CATEGORY"
        | "OPTION_GROUP_SET"
        | "VALIDATION_RULE"
        | "STATIC"
        | "ORGANISATION_UNIT_LEVEL";
    dimensionalKeywords: D2DimensionalKeywords;
    displayDescription: string;
    displayFormName: string;
    displayName: string;
    displayShortName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    filter: string;
    formName: string;
    href: string;
    id: Id;
    items: any[];
    lastUpdated: string;
    lastUpdatedBy: D2User;
    legendSet: D2LegendSet;
    name: string;
    programStage: D2ProgramStage;
    publicAccess: string;
    sharing: any;
    shortName: string;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2CategoryCombo = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    categories: D2Category[];
    categoryOptionCombos: D2CategoryOptionCombo[];
    code: Id;
    created: string;
    createdBy: D2User;
    dataDimensionType: "DISAGGREGATION" | "ATTRIBUTE";
    displayName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    href: string;
    id: Id;
    isDefault: boolean;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    name: string;
    publicAccess: string;
    sharing: any;
    skipTotal: boolean;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2CategoryDimension = {
    category: D2Category;
    categoryOptions: any;
};

export type D2CategoryOption = {
    access: D2Access;
    aggregationType:
        | "SUM"
        | "AVERAGE"
        | "AVERAGE_SUM_ORG_UNIT"
        | "LAST"
        | "LAST_AVERAGE_ORG_UNIT"
        | "LAST_IN_PERIOD"
        | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
        | "FIRST"
        | "FIRST_AVERAGE_ORG_UNIT"
        | "COUNT"
        | "STDDEV"
        | "VARIANCE"
        | "MIN"
        | "MAX"
        | "NONE"
        | "CUSTOM"
        | "DEFAULT";
    attributeValues: D2AttributeValue[];
    categories: D2Category[];
    categoryOptionCombos: D2CategoryOptionCombo[];
    categoryOptionGroups: D2CategoryOptionGroup[];
    code: Id;
    created: string;
    createdBy: D2User;
    description: string;
    dimensionItem: string;
    dimensionItemType:
        | "DATA_ELEMENT"
        | "DATA_ELEMENT_OPERAND"
        | "INDICATOR"
        | "REPORTING_RATE"
        | "PROGRAM_DATA_ELEMENT"
        | "PROGRAM_ATTRIBUTE"
        | "PROGRAM_INDICATOR"
        | "PERIOD"
        | "ORGANISATION_UNIT"
        | "CATEGORY_OPTION"
        | "OPTION_GROUP"
        | "DATA_ELEMENT_GROUP"
        | "ORGANISATION_UNIT_GROUP"
        | "CATEGORY_OPTION_GROUP";
    displayDescription: string;
    displayFormName: string;
    displayName: string;
    displayShortName: string;
    endDate: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    formName: string;
    href: string;
    id: Id;
    isDefault: boolean;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    legendSet: D2LegendSet;
    legendSets: D2LegendSet[];
    name: string;
    organisationUnits: D2OrganisationUnit[];
    periodOffset: number;
    publicAccess: string;
    sharing: any;
    shortName: string;
    startDate: string;
    style: D2Style;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2CategoryOptionCombo = {
    access: D2Access;
    aggregationType:
        | "SUM"
        | "AVERAGE"
        | "AVERAGE_SUM_ORG_UNIT"
        | "LAST"
        | "LAST_AVERAGE_ORG_UNIT"
        | "LAST_IN_PERIOD"
        | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
        | "FIRST"
        | "FIRST_AVERAGE_ORG_UNIT"
        | "COUNT"
        | "STDDEV"
        | "VARIANCE"
        | "MIN"
        | "MAX"
        | "NONE"
        | "CUSTOM"
        | "DEFAULT";
    attributeValues: D2AttributeValue[];
    categoryCombo: D2CategoryCombo;
    categoryOptions: D2CategoryOption[];
    code: Id;
    created: string;
    createdBy: D2User;
    description: string;
    dimensionItem: string;
    dimensionItemType:
        | "DATA_ELEMENT"
        | "DATA_ELEMENT_OPERAND"
        | "INDICATOR"
        | "REPORTING_RATE"
        | "PROGRAM_DATA_ELEMENT"
        | "PROGRAM_ATTRIBUTE"
        | "PROGRAM_INDICATOR"
        | "PERIOD"
        | "ORGANISATION_UNIT"
        | "CATEGORY_OPTION"
        | "OPTION_GROUP"
        | "DATA_ELEMENT_GROUP"
        | "ORGANISATION_UNIT_GROUP"
        | "CATEGORY_OPTION_GROUP";
    displayDescription: string;
    displayFormName: string;
    displayName: string;
    displayShortName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    formName: string;
    href: string;
    id: Id;
    ignoreApproval: boolean;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    legendSet: D2LegendSet;
    legendSets: D2LegendSet[];
    name: string;
    periodOffset: number;
    publicAccess: string;
    sharing: any;
    shortName: string;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2CategoryOptionGroup = {
    access: D2Access;
    aggregationType:
        | "SUM"
        | "AVERAGE"
        | "AVERAGE_SUM_ORG_UNIT"
        | "LAST"
        | "LAST_AVERAGE_ORG_UNIT"
        | "LAST_IN_PERIOD"
        | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
        | "FIRST"
        | "FIRST_AVERAGE_ORG_UNIT"
        | "COUNT"
        | "STDDEV"
        | "VARIANCE"
        | "MIN"
        | "MAX"
        | "NONE"
        | "CUSTOM"
        | "DEFAULT";
    attributeValues: D2AttributeValue[];
    categoryOptions: D2CategoryOption[];
    code: Id;
    created: string;
    createdBy: D2User;
    dataDimensionType: "DISAGGREGATION" | "ATTRIBUTE";
    description: string;
    dimensionItem: string;
    dimensionItemType:
        | "DATA_ELEMENT"
        | "DATA_ELEMENT_OPERAND"
        | "INDICATOR"
        | "REPORTING_RATE"
        | "PROGRAM_DATA_ELEMENT"
        | "PROGRAM_ATTRIBUTE"
        | "PROGRAM_INDICATOR"
        | "PERIOD"
        | "ORGANISATION_UNIT"
        | "CATEGORY_OPTION"
        | "OPTION_GROUP"
        | "DATA_ELEMENT_GROUP"
        | "ORGANISATION_UNIT_GROUP"
        | "CATEGORY_OPTION_GROUP";
    displayDescription: string;
    displayFormName: string;
    displayName: string;
    displayShortName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    formName: string;
    groupSets: D2CategoryOptionGroupSet[];
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    legendSet: D2LegendSet;
    legendSets: D2LegendSet[];
    name: string;
    periodOffset: number;
    publicAccess: string;
    sharing: any;
    shortName: string;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2CategoryOptionGroupSet = {
    access: D2Access;
    aggregationType:
        | "SUM"
        | "AVERAGE"
        | "AVERAGE_SUM_ORG_UNIT"
        | "LAST"
        | "LAST_AVERAGE_ORG_UNIT"
        | "LAST_IN_PERIOD"
        | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
        | "FIRST"
        | "FIRST_AVERAGE_ORG_UNIT"
        | "COUNT"
        | "STDDEV"
        | "VARIANCE"
        | "MIN"
        | "MAX"
        | "NONE"
        | "CUSTOM"
        | "DEFAULT";
    allItems: boolean;
    attributeValues: D2AttributeValue[];
    categoryOptionGroups: D2CategoryOptionGroup[];
    code: Id;
    created: string;
    createdBy: D2User;
    dataDimension: boolean;
    dataDimensionType: "DISAGGREGATION" | "ATTRIBUTE";
    description: string;
    dimension: string;
    dimensionType:
        | "DATA_X"
        | "PROGRAM_DATA_ELEMENT"
        | "PROGRAM_ATTRIBUTE"
        | "PROGRAM_INDICATOR"
        | "DATA_COLLAPSED"
        | "CATEGORY_OPTION_COMBO"
        | "ATTRIBUTE_OPTION_COMBO"
        | "PERIOD"
        | "ORGANISATION_UNIT"
        | "CATEGORY_OPTION_GROUP_SET"
        | "DATA_ELEMENT_GROUP_SET"
        | "ORGANISATION_UNIT_GROUP_SET"
        | "ORGANISATION_UNIT_GROUP"
        | "CATEGORY"
        | "OPTION_GROUP_SET"
        | "VALIDATION_RULE"
        | "STATIC"
        | "ORGANISATION_UNIT_LEVEL";
    dimensionalKeywords: D2DimensionalKeywords;
    displayDescription: string;
    displayFormName: string;
    displayName: string;
    displayShortName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    filter: string;
    formName: string;
    href: string;
    id: Id;
    items: any[];
    lastUpdated: string;
    lastUpdatedBy: D2User;
    legendSet: D2LegendSet;
    name: string;
    programStage: D2ProgramStage;
    publicAccess: string;
    sharing: any;
    shortName: string;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2CategoryOptionGroupSetDimension = {
    categoryOptionGroupSet: D2CategoryOptionGroupSet;
    categoryOptionGroups: any;
};

export type D2Chart = {
    access: D2Access;
    aggregationType:
        | "SUM"
        | "AVERAGE"
        | "AVERAGE_SUM_ORG_UNIT"
        | "LAST"
        | "LAST_AVERAGE_ORG_UNIT"
        | "LAST_IN_PERIOD"
        | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
        | "FIRST"
        | "FIRST_AVERAGE_ORG_UNIT"
        | "COUNT"
        | "STDDEV"
        | "VARIANCE"
        | "MIN"
        | "MAX"
        | "NONE"
        | "CUSTOM"
        | "DEFAULT";
    attributeDimensions: any[];
    attributeValues: D2AttributeValue[];
    baseLineLabel: string;
    baseLineValue: number;
    category: string;
    categoryDimensions: D2CategoryDimension[];
    categoryOptionGroupSetDimensions: D2CategoryOptionGroupSetDimension[];
    code: Id;
    columns: any[];
    completedOnly: boolean;
    created: string;
    createdBy: D2User;
    cumulativeValues: boolean;
    dataDimensionItems: any[];
    dataElementDimensions: D2TrackedEntityDataElementDimension[];
    dataElementGroupSetDimensions: D2DataElementGroupSetDimension[];
    description: string;
    digitGroupSeparator: "COMMA" | "SPACE" | "NONE";
    displayBaseLineLabel: string;
    displayDescription: string;
    displayDomainAxisLabel: string;
    displayFormName: string;
    displayName: string;
    displayRangeAxisLabel: string;
    displayShortName: string;
    displaySubtitle: string;
    displayTargetLineLabel: string;
    displayTitle: string;
    domainAxisLabel: string;
    endDate: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    filterDimensions: string[];
    filters: any[];
    formName: string;
    hideEmptyRowItems: "NONE" | "BEFORE_FIRST" | "AFTER_LAST" | "BEFORE_FIRST_AFTER_LAST" | "ALL";
    hideLegend: boolean;
    hideSubtitle: boolean;
    hideTitle: boolean;
    href: string;
    id: Id;
    interpretations: D2Interpretation[];
    itemOrganisationUnitGroups: D2OrganisationUnitGroup[];
    lastUpdated: string;
    lastUpdatedBy: D2User;
    legendDisplayStrategy: "FIXED" | "BY_DATA_ITEM";
    legendSet: D2LegendSet;
    name: string;
    noSpaceBetweenColumns: boolean;
    orgUnitField: string;
    organisationUnitGroupSetDimensions: D2OrganisationUnitGroupSetDimension[];
    organisationUnitLevels: number[];
    organisationUnits: D2OrganisationUnit[];
    parentGraphMap: D2Map;
    percentStackedValues: boolean;
    periods: any[];
    programIndicatorDimensions: D2TrackedEntityProgramIndicatorDimension[];
    publicAccess: string;
    rangeAxisDecimals: number;
    rangeAxisLabel: string;
    rangeAxisMaxValue: number;
    rangeAxisMinValue: number;
    rangeAxisSteps: number;
    regressionType: "NONE" | "LINEAR" | "POLYNOMIAL" | "LOESS";
    relativePeriods: any;
    rows: any[];
    series: string;
    seriesItems: any[];
    sharing: any;
    shortName: string;
    showData: boolean;
    sortOrder: number;
    startDate: string;
    subscribed: boolean;
    subscribers: string[];
    subtitle: string;
    targetLineLabel: string;
    targetLineValue: number;
    timeField: string;
    title: string;
    topLimit: number;
    translations: D2Translation[];
    type:
        | "COLUMN"
        | "STACKED_COLUMN"
        | "BAR"
        | "STACKED_BAR"
        | "STACKED_AREA"
        | "LINE"
        | "AREA"
        | "PIE"
        | "RADAR"
        | "GAUGE"
        | "YEAR_OVER_YEAR_LINE"
        | "YEAR_OVER_YEAR_COLUMN"
        | "SINGLE_VALUE"
        | "SCATTER"
        | "BUBBLE";
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
    userOrgUnitType: "DATA_CAPTURE" | "DATA_OUTPUT" | "TEI_SEARCH";
    userOrganisationUnit: boolean;
    userOrganisationUnitChildren: boolean;
    userOrganisationUnitGrandChildren: boolean;
    yearlySeries: string[];
};

export type D2Constant = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    code: Id;
    created: string;
    createdBy: D2User;
    description: string;
    displayDescription: string;
    displayFormName: string;
    displayName: string;
    displayShortName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    formName: string;
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    name: string;
    publicAccess: string;
    sharing: any;
    shortName: string;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
    value: number;
};

export type D2Dashboard = {
    access: D2Access;
    allowedFilters: string[];
    attributeValues: D2AttributeValue[];
    code: Id;
    created: string;
    createdBy: D2User;
    dashboardItems: D2DashboardItem[];
    description: string;
    displayDescription: string;
    displayFormName: string;
    displayName: string;
    displayShortName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    formName: string;
    href: string;
    id: Id;
    itemCount: number;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    name: string;
    publicAccess: string;
    restrictFilters: boolean;
    sharing: any;
    shortName: string;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2DashboardItem = {
    access: D2Access;
    appKey: string;
    attributeValues: D2AttributeValue[];
    chart: D2Chart;
    code: Id;
    contentCount: number;
    created: string;
    createdBy: D2User;
    displayName: string;
    eventChart: D2EventChart;
    eventReport: D2EventReport;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    height: number;
    href: string;
    id: Id;
    interpretationCount: number;
    interpretationLikeCount: number;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    map: D2Map;
    messages: boolean;
    name: string;
    publicAccess: string;
    reportTable: D2ReportTable;
    reports: D2Report[];
    resources: D2Document[];
    shape: "NORMAL" | "DOUBLE_WIDTH" | "FULL_WIDTH";
    sharing: any;
    text: string;
    translations: D2Translation[];
    type:
        | "VISUALIZATION"
        | "CHART"
        | "EVENT_CHART"
        | "MAP"
        | "REPORT_TABLE"
        | "EVENT_REPORT"
        | "USERS"
        | "REPORTS"
        | "RESOURCES"
        | "TEXT"
        | "MESSAGES"
        | "APP";
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
    users: D2User[];
    visualization: D2Visualization;
    width: number;
    x: number;
    y: number;
};

export type D2DataApprovalLevel = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    categoryOptionGroupSet: D2CategoryOptionGroupSet;
    code: Id;
    created: string;
    createdBy: D2User;
    displayName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    level: number;
    name: string;
    orgUnitLevel: number;
    orgUnitLevelName: string;
    publicAccess: string;
    sharing: any;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2DataApprovalWorkflow = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    categoryCombo: D2CategoryCombo;
    code: Id;
    created: string;
    createdBy: D2User;
    dataApprovalLevels: D2DataApprovalLevel[];
    dataSets: D2DataSet[];
    displayName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    name: string;
    periodType: string;
    publicAccess: string;
    sharing: any;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2DataElement = {
    access: D2Access;
    aggregationLevels: number[];
    aggregationType:
        | "SUM"
        | "AVERAGE"
        | "AVERAGE_SUM_ORG_UNIT"
        | "LAST"
        | "LAST_AVERAGE_ORG_UNIT"
        | "LAST_IN_PERIOD"
        | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
        | "FIRST"
        | "FIRST_AVERAGE_ORG_UNIT"
        | "COUNT"
        | "STDDEV"
        | "VARIANCE"
        | "MIN"
        | "MAX"
        | "NONE"
        | "CUSTOM"
        | "DEFAULT";
    attributeValues: D2AttributeValue[];
    categoryCombo: D2CategoryCombo;
    code: Id;
    commentOptionSet: D2OptionSet;
    created: string;
    createdBy: D2User;
    dataElementGroups: D2DataElementGroup[];
    dataSetElements: D2DataSetElement[];
    description: string;
    dimensionItem: string;
    dimensionItemType:
        | "DATA_ELEMENT"
        | "DATA_ELEMENT_OPERAND"
        | "INDICATOR"
        | "REPORTING_RATE"
        | "PROGRAM_DATA_ELEMENT"
        | "PROGRAM_ATTRIBUTE"
        | "PROGRAM_INDICATOR"
        | "PERIOD"
        | "ORGANISATION_UNIT"
        | "CATEGORY_OPTION"
        | "OPTION_GROUP"
        | "DATA_ELEMENT_GROUP"
        | "ORGANISATION_UNIT_GROUP"
        | "CATEGORY_OPTION_GROUP";
    displayDescription: string;
    displayFormName: string;
    displayName: string;
    displayShortName: string;
    domainType: "AGGREGATE" | "TRACKER";
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    fieldMask: string;
    formName: string;
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    legendSet: D2LegendSet;
    legendSets: D2LegendSet[];
    name: string;
    optionSet: D2OptionSet;
    optionSetValue: boolean;
    periodOffset: number;
    publicAccess: string;
    sharing: any;
    shortName: string;
    style: D2Style;
    translations: D2Translation[];
    url: string;
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
    valueType:
        | "TEXT"
        | "LONG_TEXT"
        | "LETTER"
        | "PHONE_NUMBER"
        | "EMAIL"
        | "BOOLEAN"
        | "TRUE_ONLY"
        | "DATE"
        | "DATETIME"
        | "TIME"
        | "NUMBER"
        | "UNIT_INTERVAL"
        | "PERCENTAGE"
        | "INTEGER"
        | "INTEGER_POSITIVE"
        | "INTEGER_NEGATIVE"
        | "INTEGER_ZERO_OR_POSITIVE"
        | "TRACKER_ASSOCIATE"
        | "USERNAME"
        | "COORDINATE"
        | "ORGANISATION_UNIT"
        | "AGE"
        | "URL"
        | "FILE_RESOURCE"
        | "IMAGE";
    valueTypeOptions: any;
    zeroIsSignificant: boolean;
};

export type D2DataElementGroup = {
    access: D2Access;
    aggregationType:
        | "SUM"
        | "AVERAGE"
        | "AVERAGE_SUM_ORG_UNIT"
        | "LAST"
        | "LAST_AVERAGE_ORG_UNIT"
        | "LAST_IN_PERIOD"
        | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
        | "FIRST"
        | "FIRST_AVERAGE_ORG_UNIT"
        | "COUNT"
        | "STDDEV"
        | "VARIANCE"
        | "MIN"
        | "MAX"
        | "NONE"
        | "CUSTOM"
        | "DEFAULT";
    attributeValues: D2AttributeValue[];
    code: Id;
    created: string;
    createdBy: D2User;
    dataElements: D2DataElement[];
    description: string;
    dimensionItem: string;
    dimensionItemType:
        | "DATA_ELEMENT"
        | "DATA_ELEMENT_OPERAND"
        | "INDICATOR"
        | "REPORTING_RATE"
        | "PROGRAM_DATA_ELEMENT"
        | "PROGRAM_ATTRIBUTE"
        | "PROGRAM_INDICATOR"
        | "PERIOD"
        | "ORGANISATION_UNIT"
        | "CATEGORY_OPTION"
        | "OPTION_GROUP"
        | "DATA_ELEMENT_GROUP"
        | "ORGANISATION_UNIT_GROUP"
        | "CATEGORY_OPTION_GROUP";
    displayDescription: string;
    displayFormName: string;
    displayName: string;
    displayShortName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    formName: string;
    groupSets: D2DataElementGroupSet[];
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    legendSet: D2LegendSet;
    legendSets: D2LegendSet[];
    name: string;
    periodOffset: number;
    publicAccess: string;
    sharing: any;
    shortName: string;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2DataElementGroupSet = {
    access: D2Access;
    aggregationType:
        | "SUM"
        | "AVERAGE"
        | "AVERAGE_SUM_ORG_UNIT"
        | "LAST"
        | "LAST_AVERAGE_ORG_UNIT"
        | "LAST_IN_PERIOD"
        | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
        | "FIRST"
        | "FIRST_AVERAGE_ORG_UNIT"
        | "COUNT"
        | "STDDEV"
        | "VARIANCE"
        | "MIN"
        | "MAX"
        | "NONE"
        | "CUSTOM"
        | "DEFAULT";
    allItems: boolean;
    attributeValues: D2AttributeValue[];
    code: Id;
    compulsory: boolean;
    created: string;
    createdBy: D2User;
    dataDimension: boolean;
    dataDimensionType: "DISAGGREGATION" | "ATTRIBUTE";
    dataElementGroups: D2DataElementGroup[];
    description: string;
    dimension: string;
    dimensionType:
        | "DATA_X"
        | "PROGRAM_DATA_ELEMENT"
        | "PROGRAM_ATTRIBUTE"
        | "PROGRAM_INDICATOR"
        | "DATA_COLLAPSED"
        | "CATEGORY_OPTION_COMBO"
        | "ATTRIBUTE_OPTION_COMBO"
        | "PERIOD"
        | "ORGANISATION_UNIT"
        | "CATEGORY_OPTION_GROUP_SET"
        | "DATA_ELEMENT_GROUP_SET"
        | "ORGANISATION_UNIT_GROUP_SET"
        | "ORGANISATION_UNIT_GROUP"
        | "CATEGORY"
        | "OPTION_GROUP_SET"
        | "VALIDATION_RULE"
        | "STATIC"
        | "ORGANISATION_UNIT_LEVEL";
    dimensionalKeywords: D2DimensionalKeywords;
    displayDescription: string;
    displayFormName: string;
    displayName: string;
    displayShortName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    filter: string;
    formName: string;
    href: string;
    id: Id;
    items: any[];
    lastUpdated: string;
    lastUpdatedBy: D2User;
    legendSet: D2LegendSet;
    name: string;
    programStage: D2ProgramStage;
    publicAccess: string;
    sharing: any;
    shortName: string;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2DataElementGroupSetDimension = {
    dataElementGroupSet: D2DataElementGroupSet;
    dataElementGroups: any;
};

export type D2DataElementOperand = {
    access: D2Access;
    aggregationType:
        | "SUM"
        | "AVERAGE"
        | "AVERAGE_SUM_ORG_UNIT"
        | "LAST"
        | "LAST_AVERAGE_ORG_UNIT"
        | "LAST_IN_PERIOD"
        | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
        | "FIRST"
        | "FIRST_AVERAGE_ORG_UNIT"
        | "COUNT"
        | "STDDEV"
        | "VARIANCE"
        | "MIN"
        | "MAX"
        | "NONE"
        | "CUSTOM"
        | "DEFAULT";
    attributeOptionCombo: D2CategoryOptionCombo;
    attributeValues: D2AttributeValue[];
    categoryOptionCombo: D2CategoryOptionCombo;
    code: Id;
    created: string;
    createdBy: D2User;
    dataElement: D2DataElement;
    description: string;
    dimensionItem: string;
    dimensionItemType:
        | "DATA_ELEMENT"
        | "DATA_ELEMENT_OPERAND"
        | "INDICATOR"
        | "REPORTING_RATE"
        | "PROGRAM_DATA_ELEMENT"
        | "PROGRAM_ATTRIBUTE"
        | "PROGRAM_INDICATOR"
        | "PERIOD"
        | "ORGANISATION_UNIT"
        | "CATEGORY_OPTION"
        | "OPTION_GROUP"
        | "DATA_ELEMENT_GROUP"
        | "ORGANISATION_UNIT_GROUP"
        | "CATEGORY_OPTION_GROUP";
    displayDescription: string;
    displayFormName: string;
    displayName: string;
    displayShortName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    formName: string;
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    legendSet: D2LegendSet;
    legendSets: D2LegendSet[];
    name: string;
    periodOffset: number;
    publicAccess: string;
    sharing: any;
    shortName: string;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2DataEntryForm = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    code: Id;
    created: string;
    createdBy: D2User;
    displayName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    format: number;
    href: string;
    htmlCode: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    name: string;
    publicAccess: string;
    sharing: any;
    style: "COMFORTABLE" | "NORMAL" | "COMPACT" | "NONE";
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2DataInputPeriod = {
    closingDate: string;
    openingDate: string;
    period: any;
};

export type D2DataSet = {
    access: D2Access;
    aggregationType:
        | "SUM"
        | "AVERAGE"
        | "AVERAGE_SUM_ORG_UNIT"
        | "LAST"
        | "LAST_AVERAGE_ORG_UNIT"
        | "LAST_IN_PERIOD"
        | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
        | "FIRST"
        | "FIRST_AVERAGE_ORG_UNIT"
        | "COUNT"
        | "STDDEV"
        | "VARIANCE"
        | "MIN"
        | "MAX"
        | "NONE"
        | "CUSTOM"
        | "DEFAULT";
    attributeValues: D2AttributeValue[];
    categoryCombo: D2CategoryCombo;
    code: Id;
    compulsoryDataElementOperands: D2DataElementOperand[];
    compulsoryFieldsCompleteOnly: boolean;
    created: string;
    createdBy: D2User;
    dataElementDecoration: boolean;
    dataEntryForm: D2DataEntryForm;
    dataInputPeriods: D2DataInputPeriod[];
    dataSetElements: D2DataSetElement[];
    description: string;
    dimensionItem: string;
    dimensionItemType:
        | "DATA_ELEMENT"
        | "DATA_ELEMENT_OPERAND"
        | "INDICATOR"
        | "REPORTING_RATE"
        | "PROGRAM_DATA_ELEMENT"
        | "PROGRAM_ATTRIBUTE"
        | "PROGRAM_INDICATOR"
        | "PERIOD"
        | "ORGANISATION_UNIT"
        | "CATEGORY_OPTION"
        | "OPTION_GROUP"
        | "DATA_ELEMENT_GROUP"
        | "ORGANISATION_UNIT_GROUP"
        | "CATEGORY_OPTION_GROUP";
    displayDescription: string;
    displayFormName: string;
    displayName: string;
    displayShortName: string;
    expiryDays: number;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    fieldCombinationRequired: boolean;
    formName: string;
    formType: "DEFAULT" | "CUSTOM" | "SECTION" | "SECTION_MULTIORG";
    href: string;
    id: Id;
    indicators: D2Indicator[];
    interpretations: D2Interpretation[];
    lastUpdated: string;
    lastUpdatedBy: D2User;
    legendSet: D2LegendSet;
    legendSets: D2LegendSet[];
    mobile: boolean;
    name: string;
    noValueRequiresComment: boolean;
    notificationRecipients: D2UserGroup;
    notifyCompletingUser: boolean;
    openFuturePeriods: number;
    openPeriodsAfterCoEndDate: number;
    organisationUnits: D2OrganisationUnit[];
    periodOffset: number;
    periodType: string;
    publicAccess: string;
    renderAsTabs: boolean;
    renderHorizontally: boolean;
    sections: D2Section[];
    sharing: any;
    shortName: string;
    skipOffline: boolean;
    style: D2Style;
    timelyDays: number;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
    validCompleteOnly: boolean;
    version: number;
    workflow: D2DataApprovalWorkflow;
};

export type D2DataSetElement = {
    categoryCombo: D2CategoryCombo;
    dataElement: D2DataElement;
    dataSet: D2DataSet;
};

export type D2DataSetNotificationTemplate = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    code: Id;
    created: string;
    createdBy: D2User;
    dataSetNotificationTrigger: "DATA_SET_COMPLETION" | "SCHEDULED_DAYS";
    dataSets: D2DataSet[];
    deliveryChannels: never[];
    displayMessageTemplate: string;
    displayName: string;
    displaySubjectTemplate: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    messageTemplate: string;
    name: string;
    notificationRecipient: "ORGANISATION_UNIT_CONTACT" | "USER_GROUP";
    notifyParentOrganisationUnitOnly: boolean;
    notifyUsersInHierarchyOnly: boolean;
    publicAccess: string;
    recipientUserGroup: D2UserGroup;
    relativeScheduledDays: number;
    sendStrategy: "COLLECTIVE_SUMMARY" | "SINGLE_NOTIFICATION";
    sharing: any;
    subjectTemplate: string;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2Document = {
    access: D2Access;
    attachment: boolean;
    attributeValues: D2AttributeValue[];
    code: Id;
    contentType: string;
    created: string;
    createdBy: D2User;
    displayName: string;
    external: boolean;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    name: string;
    publicAccess: string;
    sharing: any;
    translations: D2Translation[];
    url: string;
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2EventChart = {
    access: D2Access;
    aggregationType:
        | "SUM"
        | "AVERAGE"
        | "AVERAGE_SUM_ORG_UNIT"
        | "LAST"
        | "LAST_AVERAGE_ORG_UNIT"
        | "LAST_IN_PERIOD"
        | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
        | "FIRST"
        | "FIRST_AVERAGE_ORG_UNIT"
        | "COUNT"
        | "STDDEV"
        | "VARIANCE"
        | "MIN"
        | "MAX"
        | "NONE"
        | "CUSTOM"
        | "DEFAULT";
    attributeDimensions: any[];
    attributeValueDimension: D2TrackedEntityAttribute;
    attributeValues: D2AttributeValue[];
    baseLineLabel: string;
    baseLineValue: number;
    categoryDimensions: D2CategoryDimension[];
    categoryOptionGroupSetDimensions: D2CategoryOptionGroupSetDimension[];
    code: Id;
    collapseDataDimensions: boolean;
    columnDimensions: string[];
    columns: any[];
    completedOnly: boolean;
    created: string;
    createdBy: D2User;
    cumulativeValues: boolean;
    dataDimensionItems: any[];
    dataElementDimensions: D2TrackedEntityDataElementDimension[];
    dataElementGroupSetDimensions: D2DataElementGroupSetDimension[];
    dataElementValueDimension: D2DataElement;
    description: string;
    digitGroupSeparator: "COMMA" | "SPACE" | "NONE";
    displayBaseLineLabel: string;
    displayDescription: string;
    displayDomainAxisLabel: string;
    displayFormName: string;
    displayName: string;
    displayRangeAxisLabel: string;
    displayShortName: string;
    displaySubtitle: string;
    displayTargetLineLabel: string;
    displayTitle: string;
    domainAxisLabel: string;
    endDate: string;
    eventStatus: "ACTIVE" | "COMPLETED" | "VISITED" | "SCHEDULE" | "OVERDUE" | "SKIPPED";
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    filterDimensions: string[];
    filters: any[];
    formName: string;
    hideEmptyRowItems: "NONE" | "BEFORE_FIRST" | "AFTER_LAST" | "BEFORE_FIRST_AFTER_LAST" | "ALL";
    hideLegend: boolean;
    hideNaData: boolean;
    hideSubtitle: boolean;
    hideTitle: boolean;
    href: string;
    id: Id;
    interpretations: D2Interpretation[];
    itemOrganisationUnitGroups: D2OrganisationUnitGroup[];
    lastUpdated: string;
    lastUpdatedBy: D2User;
    legendDisplayStrategy: "FIXED" | "BY_DATA_ITEM";
    legendSet: D2LegendSet;
    name: string;
    noSpaceBetweenColumns: boolean;
    orgUnitField: string;
    organisationUnitGroupSetDimensions: D2OrganisationUnitGroupSetDimension[];
    organisationUnitLevels: number[];
    organisationUnits: D2OrganisationUnit[];
    outputType: "EVENT" | "ENROLLMENT" | "TRACKED_ENTITY_INSTANCE";
    parentGraphMap: D2Map;
    percentStackedValues: boolean;
    periods: any[];
    program: D2Program;
    programIndicatorDimensions: D2TrackedEntityProgramIndicatorDimension[];
    programStage: D2ProgramStage;
    programStatus: "ACTIVE" | "COMPLETED" | "CANCELLED";
    publicAccess: string;
    rangeAxisDecimals: number;
    rangeAxisLabel: string;
    rangeAxisMaxValue: number;
    rangeAxisMinValue: number;
    rangeAxisSteps: number;
    regressionType: "NONE" | "LINEAR" | "POLYNOMIAL" | "LOESS";
    relativePeriods: any;
    rowDimensions: string[];
    rows: any[];
    sharing: any;
    shortName: string;
    showData: boolean;
    sortOrder: number;
    startDate: string;
    subscribed: boolean;
    subscribers: string[];
    subtitle: string;
    targetLineLabel: string;
    targetLineValue: number;
    timeField: string;
    title: string;
    topLimit: number;
    translations: D2Translation[];
    type:
        | "COLUMN"
        | "STACKED_COLUMN"
        | "BAR"
        | "STACKED_BAR"
        | "STACKED_AREA"
        | "LINE"
        | "AREA"
        | "PIE"
        | "RADAR"
        | "GAUGE"
        | "YEAR_OVER_YEAR_LINE"
        | "YEAR_OVER_YEAR_COLUMN"
        | "SINGLE_VALUE"
        | "SCATTER"
        | "BUBBLE";
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
    userOrgUnitType: "DATA_CAPTURE" | "DATA_OUTPUT" | "TEI_SEARCH";
    userOrganisationUnit: boolean;
    userOrganisationUnitChildren: boolean;
    userOrganisationUnitGrandChildren: boolean;
    value: any;
    yearlySeries: string[];
};

export type D2EventReport = {
    access: D2Access;
    aggregationType:
        | "SUM"
        | "AVERAGE"
        | "AVERAGE_SUM_ORG_UNIT"
        | "LAST"
        | "LAST_AVERAGE_ORG_UNIT"
        | "LAST_IN_PERIOD"
        | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
        | "FIRST"
        | "FIRST_AVERAGE_ORG_UNIT"
        | "COUNT"
        | "STDDEV"
        | "VARIANCE"
        | "MIN"
        | "MAX"
        | "NONE"
        | "CUSTOM"
        | "DEFAULT";
    attributeDimensions: any[];
    attributeValueDimension: D2TrackedEntityAttribute;
    attributeValues: D2AttributeValue[];
    categoryDimensions: D2CategoryDimension[];
    categoryOptionGroupSetDimensions: D2CategoryOptionGroupSetDimension[];
    code: Id;
    colSubTotals: boolean;
    colTotals: boolean;
    collapseDataDimensions: boolean;
    columnDimensions: string[];
    columns: any[];
    completedOnly: boolean;
    created: string;
    createdBy: D2User;
    dataDimensionItems: any[];
    dataElementDimensions: D2TrackedEntityDataElementDimension[];
    dataElementGroupSetDimensions: D2DataElementGroupSetDimension[];
    dataElementValueDimension: D2DataElement;
    dataType: "AGGREGATED_VALUES" | "EVENTS";
    description: string;
    digitGroupSeparator: "COMMA" | "SPACE" | "NONE";
    displayDensity: "COMFORTABLE" | "NORMAL" | "COMPACT" | "NONE";
    displayDescription: string;
    displayFormName: string;
    displayName: string;
    displayShortName: string;
    displaySubtitle: string;
    displayTitle: string;
    endDate: string;
    eventStatus: "ACTIVE" | "COMPLETED" | "VISITED" | "SCHEDULE" | "OVERDUE" | "SKIPPED";
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    filterDimensions: string[];
    filters: any[];
    fontSize: "LARGE" | "NORMAL" | "SMALL";
    formName: string;
    hideEmptyRows: boolean;
    hideNaData: boolean;
    hideSubtitle: boolean;
    hideTitle: boolean;
    href: string;
    id: Id;
    interpretations: D2Interpretation[];
    itemOrganisationUnitGroups: D2OrganisationUnitGroup[];
    lastUpdated: string;
    lastUpdatedBy: D2User;
    name: string;
    orgUnitField: string;
    organisationUnitGroupSetDimensions: D2OrganisationUnitGroupSetDimension[];
    organisationUnitLevels: number[];
    organisationUnits: D2OrganisationUnit[];
    outputType: "EVENT" | "ENROLLMENT" | "TRACKED_ENTITY_INSTANCE";
    parentGraphMap: D2Map;
    periods: any[];
    program: D2Program;
    programIndicatorDimensions: D2TrackedEntityProgramIndicatorDimension[];
    programStage: D2ProgramStage;
    programStatus: "ACTIVE" | "COMPLETED" | "CANCELLED";
    publicAccess: string;
    relativePeriods: any;
    rowDimensions: string[];
    rowSubTotals: boolean;
    rowTotals: boolean;
    rows: any[];
    sharing: any;
    shortName: string;
    showDimensionLabels: boolean;
    showHierarchy: boolean;
    sortOrder: number;
    startDate: string;
    subscribed: boolean;
    subscribers: string[];
    subtitle: string;
    timeField: string;
    title: string;
    topLimit: number;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
    userOrgUnitType: "DATA_CAPTURE" | "DATA_OUTPUT" | "TEI_SEARCH";
    userOrganisationUnit: boolean;
    userOrganisationUnitChildren: boolean;
    userOrganisationUnitGrandChildren: boolean;
    value: any;
};

export type D2Expression = {
    description: string;
    expression: string;
    missingValueStrategy: "SKIP_IF_ANY_VALUE_MISSING" | "SKIP_IF_ALL_VALUES_MISSING" | "NEVER_SKIP";
    slidingWindow: boolean;
};

export type D2ExternalFileResource = {
    access: D2Access;
    accessToken: string;
    attributeValues: D2AttributeValue[];
    code: Id;
    created: string;
    createdBy: D2User;
    displayName: string;
    expires: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    fileResource: D2FileResource;
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    name: string;
    publicAccess: string;
    sharing: any;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2ExternalMapLayer = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    attribution: string;
    code: Id;
    created: string;
    createdBy: D2User;
    displayName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    href: string;
    id: Id;
    imageFormat: "PNG" | "JPG";
    lastUpdated: string;
    lastUpdatedBy: D2User;
    layers: string;
    legendSet: D2LegendSet;
    legendSetUrl: string;
    mapLayerPosition: "BASEMAP" | "OVERLAY";
    mapService: "WMS" | "TMS" | "XYZ";
    name: string;
    publicAccess: string;
    sharing: any;
    translations: D2Translation[];
    url: string;
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2FileResource = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    code: Id;
    contentLength: string;
    contentMd5: string;
    contentType: string;
    created: string;
    createdBy: D2User;
    displayName: string;
    domain: "DATA_VALUE" | "PUSH_ANALYSIS" | "DOCUMENT" | "MESSAGE_ATTACHMENT" | "USER_AVATAR" | "ORG_UNIT";
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    hasMultipleStorageFiles: boolean;
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    name: string;
    publicAccess: string;
    sharing: any;
    storageStatus: "NONE" | "PENDING" | "FAILED" | "STORED";
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2Icon = {};

export type D2Indicator = {
    access: D2Access;
    aggregateExportAttributeOptionCombo: string;
    aggregateExportCategoryOptionCombo: string;
    aggregationType:
        | "SUM"
        | "AVERAGE"
        | "AVERAGE_SUM_ORG_UNIT"
        | "LAST"
        | "LAST_AVERAGE_ORG_UNIT"
        | "LAST_IN_PERIOD"
        | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
        | "FIRST"
        | "FIRST_AVERAGE_ORG_UNIT"
        | "COUNT"
        | "STDDEV"
        | "VARIANCE"
        | "MIN"
        | "MAX"
        | "NONE"
        | "CUSTOM"
        | "DEFAULT";
    annualized: boolean;
    attributeValues: D2AttributeValue[];
    code: Id;
    created: string;
    createdBy: D2User;
    dataSets: D2DataSet[];
    decimals: number;
    denominator: string;
    denominatorDescription: string;
    description: string;
    dimensionItem: string;
    dimensionItemType:
        | "DATA_ELEMENT"
        | "DATA_ELEMENT_OPERAND"
        | "INDICATOR"
        | "REPORTING_RATE"
        | "PROGRAM_DATA_ELEMENT"
        | "PROGRAM_ATTRIBUTE"
        | "PROGRAM_INDICATOR"
        | "PERIOD"
        | "ORGANISATION_UNIT"
        | "CATEGORY_OPTION"
        | "OPTION_GROUP"
        | "DATA_ELEMENT_GROUP"
        | "ORGANISATION_UNIT_GROUP"
        | "CATEGORY_OPTION_GROUP";
    displayDenominatorDescription: string;
    displayDescription: string;
    displayFormName: string;
    displayName: string;
    displayNumeratorDescription: string;
    displayShortName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    formName: string;
    href: string;
    id: Id;
    indicatorGroups: D2IndicatorGroup[];
    indicatorType: D2IndicatorType;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    legendSet: D2LegendSet;
    legendSets: D2LegendSet[];
    name: string;
    numerator: string;
    numeratorDescription: string;
    periodOffset: number;
    publicAccess: string;
    sharing: any;
    shortName: string;
    style: D2Style;
    translations: D2Translation[];
    url: string;
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2IndicatorGroup = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    code: Id;
    created: string;
    createdBy: D2User;
    description: string;
    displayName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    href: string;
    id: Id;
    indicatorGroupSet: D2IndicatorGroupSet;
    indicators: D2Indicator[];
    lastUpdated: string;
    lastUpdatedBy: D2User;
    name: string;
    publicAccess: string;
    sharing: any;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2IndicatorGroupSet = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    code: Id;
    compulsory: boolean;
    created: string;
    createdBy: D2User;
    description: string;
    displayName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    href: string;
    id: Id;
    indicatorGroups: D2IndicatorGroup[];
    lastUpdated: string;
    lastUpdatedBy: D2User;
    name: string;
    publicAccess: string;
    sharing: any;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2IndicatorType = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    code: Id;
    created: string;
    createdBy: D2User;
    displayName: string;
    externalAccess: boolean;
    factor: number;
    favorite: boolean;
    favorites: string[];
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    name: string;
    number: boolean;
    publicAccess: string;
    sharing: any;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2Interpretation = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    chart: D2Chart;
    code: Id;
    comments: D2InterpretationComment[];
    created: string;
    createdBy: D2User;
    dataSet: D2DataSet;
    displayName: string;
    eventChart: D2EventChart;
    eventReport: D2EventReport;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    likedBy: D2User[];
    likes: number;
    map: D2Map;
    mentions: any[];
    name: string;
    organisationUnit: D2OrganisationUnit;
    period: any;
    publicAccess: string;
    reportTable: D2ReportTable;
    sharing: any;
    text: string;
    translations: D2Translation[];
    type: "VISUALIZATION" | "REPORT_TABLE" | "CHART" | "MAP" | "EVENT_REPORT" | "EVENT_CHART" | "DATASET_REPORT";
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
    visualization: D2Visualization;
};

export type D2InterpretationComment = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    code: Id;
    created: string;
    createdBy: D2User;
    displayName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    mentions: any[];
    name: string;
    publicAccess: string;
    sharing: any;
    text: string;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2JobConfiguration = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    code: Id;
    configurable: boolean;
    created: string;
    createdBy: D2User;
    cronExpression: string;
    delay: number;
    displayName: string;
    enabled: boolean;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    href: string;
    id: Id;
    jobParameters: any;
    jobStatus: "RUNNING" | "COMPLETED" | "STOPPED" | "SCHEDULED" | "DISABLED" | "FAILED" | "NOT_STARTED";
    jobType:
        | "DATA_STATISTICS"
        | "DATA_INTEGRITY"
        | "RESOURCE_TABLE"
        | "ANALYTICS_TABLE"
        | "CONTINUOUS_ANALYTICS_TABLE"
        | "DATA_SYNC"
        | "TRACKER_PROGRAMS_DATA_SYNC"
        | "EVENT_PROGRAMS_DATA_SYNC"
        | "FILE_RESOURCE_CLEANUP"
        | "IMAGE_PROCESSING"
        | "META_DATA_SYNC"
        | "SMS_SEND"
        | "SEND_SCHEDULED_MESSAGE"
        | "PROGRAM_NOTIFICATIONS"
        | "VALIDATION_RESULTS_NOTIFICATION"
        | "CREDENTIALS_EXPIRY_ALERT"
        | "MONITORING"
        | "PUSH_ANALYSIS"
        | "PREDICTOR"
        | "DATA_SET_NOTIFICATION"
        | "REMOVE_USED_OR_EXPIRED_RESERVED_VALUES"
        | "TRACKER_IMPORT_JOB"
        | "TRACKER_IMPORT_NOTIFICATION_JOB"
        | "TRACKER_IMPORT_RULE_ENGINE_JOB"
        | "LEADER_ELECTION"
        | "LEADER_RENEWAL"
        | "COMPLETE_DATA_SET_REGISTRATION_IMPORT"
        | "DATAVALUE_IMPORT_INTERNAL"
        | "METADATA_IMPORT"
        | "DATAVALUE_IMPORT"
        | "EVENT_IMPORT"
        | "ENROLLMENT_IMPORT"
        | "TEI_IMPORT"
        | "DISABLE_INACTIVE_USERS"
        | "MOCK"
        | "GML_IMPORT"
        | "ANALYTICSTABLE_UPDATE"
        | "PROGRAM_DATA_SYNC";
    lastExecuted: string;
    lastExecutedStatus: "RUNNING" | "COMPLETED" | "STOPPED" | "SCHEDULED" | "DISABLED" | "FAILED" | "NOT_STARTED";
    lastRuntimeExecution: string;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    leaderOnlyJob: boolean;
    name: string;
    nextExecutionTime: string;
    publicAccess: string;
    schedulingType: "CRON" | "FIXED_DELAY";
    sharing: any;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
    userUid: string;
};

export type D2KeyJsonValue = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    code: Id;
    created: string;
    createdBy: D2User;
    displayName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    href: string;
    id: Id;
    key: string;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    name: string;
    namespace: string;
    publicAccess: string;
    sharing: any;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
    value: string;
};

export type D2Legend = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    code: Id;
    color: string;
    created: string;
    createdBy: D2User;
    displayName: string;
    endValue: number;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    href: string;
    id: Id;
    image: string;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    name: string;
    publicAccess: string;
    sharing: any;
    startValue: number;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2LegendSet = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    code: Id;
    created: string;
    createdBy: D2User;
    displayName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    legends: D2Legend[];
    name: string;
    publicAccess: string;
    sharing: any;
    symbolizer: string;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2Map = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    basemap: string;
    code: Id;
    created: string;
    createdBy: D2User;
    description: string;
    displayDescription: string;
    displayFormName: string;
    displayName: string;
    displayShortName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    formName: string;
    href: string;
    id: Id;
    interpretations: D2Interpretation[];
    lastUpdated: string;
    lastUpdatedBy: D2User;
    latitude: number;
    longitude: number;
    mapViews: D2MapView[];
    name: string;
    publicAccess: string;
    sharing: any;
    shortName: string;
    subscribed: boolean;
    subscribers: string[];
    title: string;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
    zoom: number;
};

export type D2MapView = {
    access: D2Access;
    aggregationType:
        | "SUM"
        | "AVERAGE"
        | "AVERAGE_SUM_ORG_UNIT"
        | "LAST"
        | "LAST_AVERAGE_ORG_UNIT"
        | "LAST_IN_PERIOD"
        | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
        | "FIRST"
        | "FIRST_AVERAGE_ORG_UNIT"
        | "COUNT"
        | "STDDEV"
        | "VARIANCE"
        | "MIN"
        | "MAX"
        | "NONE"
        | "CUSTOM"
        | "DEFAULT";
    areaRadius: number;
    attributeDimensions: any[];
    attributeValues: D2AttributeValue[];
    categoryDimensions: D2CategoryDimension[];
    categoryOptionGroupSetDimensions: D2CategoryOptionGroupSetDimension[];
    classes: number;
    code: Id;
    colorHigh: string;
    colorLow: string;
    colorScale: string;
    columnDimensions: string[];
    columns: any[];
    completedOnly: boolean;
    config: string;
    created: string;
    createdBy: D2User;
    dataDimensionItems: any[];
    dataElementDimensions: D2TrackedEntityDataElementDimension[];
    dataElementGroupSetDimensions: D2DataElementGroupSetDimension[];
    description: string;
    digitGroupSeparator: "COMMA" | "SPACE" | "NONE";
    displayDescription: string;
    displayFormName: string;
    displayName: string;
    displayShortName: string;
    displaySubtitle: string;
    displayTitle: string;
    endDate: string;
    eventClustering: boolean;
    eventCoordinateField: string;
    eventPointColor: string;
    eventPointRadius: number;
    eventStatus: "ACTIVE" | "COMPLETED" | "SCHEDULE" | "OVERDUE" | "SKIPPED";
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    filterDimensions: string[];
    filters: any[];
    followUp: boolean;
    formName: string;
    hidden: boolean;
    hideSubtitle: boolean;
    hideTitle: boolean;
    href: string;
    id: Id;
    interpretations: D2Interpretation[];
    itemOrganisationUnitGroups: D2OrganisationUnitGroup[];
    labelFontColor: string;
    labelFontSize: string;
    labelFontStyle: string;
    labelFontWeight: string;
    labels: boolean;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    layer: string;
    legendSet: D2LegendSet;
    method: number;
    name: string;
    noDataColor: string;
    opacity: number;
    orgUnitField: string;
    organisationUnitGroupSet: D2OrganisationUnitGroupSet;
    organisationUnitGroupSetDimensions: D2OrganisationUnitGroupSetDimension[];
    organisationUnitLevels: number[];
    organisationUnitSelectionMode: "SELECTED" | "CHILDREN" | "DESCENDANTS" | "ACCESSIBLE" | "CAPTURE" | "ALL";
    organisationUnits: D2OrganisationUnit[];
    parentGraph: string;
    parentGraphMap: D2Map;
    parentLevel: number;
    periods: any[];
    program: D2Program;
    programIndicatorDimensions: D2TrackedEntityProgramIndicatorDimension[];
    programStage: D2ProgramStage;
    programStatus: "ACTIVE" | "COMPLETED" | "CANCELLED";
    publicAccess: string;
    radiusHigh: number;
    radiusLow: number;
    relativePeriods: any;
    renderingStrategy: "SINGLE" | "SPLIT_BY_PERIOD" | "TIMELINE";
    rows: any[];
    sharing: any;
    shortName: string;
    sortOrder: number;
    startDate: string;
    styleDataItem: object;
    subscribed: boolean;
    subscribers: string[];
    subtitle: string;
    thematicMapType: "CHOROPLETH" | "BUBBLE";
    timeField: string;
    title: string;
    topLimit: number;
    trackedEntityType: D2TrackedEntityType;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
    userOrgUnitType: "DATA_CAPTURE" | "DATA_OUTPUT" | "TEI_SEARCH";
    userOrganisationUnit: boolean;
    userOrganisationUnitChildren: boolean;
    userOrganisationUnitGrandChildren: boolean;
};

export type D2MessageConversation = {
    access: D2Access;
    assignee: D2User;
    attributeValues: D2AttributeValue[];
    code: Id;
    created: string;
    createdBy: D2User;
    displayName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    followUp: boolean;
    href: string;
    id: Id;
    lastMessage: string;
    lastSender: D2User;
    lastSenderFirstname: string;
    lastSenderSurname: string;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    messageCount: number;
    messageType: "PRIVATE" | "SYSTEM" | "VALIDATION_RESULT" | "TICKET";
    messages: any[];
    name: string;
    priority: "NONE" | "LOW" | "MEDIUM" | "HIGH";
    publicAccess: string;
    read: boolean;
    sharing: any;
    status: "NONE" | "OPEN" | "PENDING" | "INVALID" | "SOLVED";
    subject: string;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userFirstname: string;
    userGroupAccesses: D2UserGroupAccess[];
    userMessages: any[];
    userSurname: string;
};

export type D2MetadataVersion = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    code: Id;
    created: string;
    createdBy: D2User;
    displayName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    hashCode: string;
    href: string;
    id: Id;
    importDate: string;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    name: string;
    publicAccess: string;
    sharing: any;
    translations: D2Translation[];
    type: "BEST_EFFORT" | "ATOMIC";
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2MinMaxDataElement = {
    dataElement: D2DataElement;
    generated: boolean;
    max: number;
    min: number;
    optionCombo: D2CategoryOptionCombo;
    source: D2OrganisationUnit;
};

export type D2OAuth2Client = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    cid: Id;
    code: Id;
    created: string;
    createdBy: D2User;
    displayName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    grantTypes: string[];
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    name: string;
    publicAccess: string;
    redirectUris: string[];
    secret: string;
    sharing: any;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2Option = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    code: string;
    created: string;
    createdBy: D2User;
    description: string;
    displayDescription: string;
    displayFormName: string;
    displayName: string;
    displayShortName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    formName: string;
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    name: string;
    optionSet: D2OptionSet;
    publicAccess: string;
    sharing: any;
    shortName: string;
    sortOrder: number;
    style: D2Style;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2OptionGroup = {
    access: D2Access;
    aggregationType:
        | "SUM"
        | "AVERAGE"
        | "AVERAGE_SUM_ORG_UNIT"
        | "LAST"
        | "LAST_AVERAGE_ORG_UNIT"
        | "LAST_IN_PERIOD"
        | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
        | "FIRST"
        | "FIRST_AVERAGE_ORG_UNIT"
        | "COUNT"
        | "STDDEV"
        | "VARIANCE"
        | "MIN"
        | "MAX"
        | "NONE"
        | "CUSTOM"
        | "DEFAULT";
    attributeValues: D2AttributeValue[];
    code: Id;
    created: string;
    createdBy: D2User;
    description: string;
    dimensionItem: string;
    dimensionItemType:
        | "DATA_ELEMENT"
        | "DATA_ELEMENT_OPERAND"
        | "INDICATOR"
        | "REPORTING_RATE"
        | "PROGRAM_DATA_ELEMENT"
        | "PROGRAM_ATTRIBUTE"
        | "PROGRAM_INDICATOR"
        | "PERIOD"
        | "ORGANISATION_UNIT"
        | "CATEGORY_OPTION"
        | "OPTION_GROUP"
        | "DATA_ELEMENT_GROUP"
        | "ORGANISATION_UNIT_GROUP"
        | "CATEGORY_OPTION_GROUP";
    displayDescription: string;
    displayFormName: string;
    displayName: string;
    displayShortName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    formName: string;
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    legendSet: D2LegendSet;
    legendSets: D2LegendSet[];
    name: string;
    optionSet: D2OptionSet;
    options: D2Option[];
    periodOffset: number;
    publicAccess: string;
    sharing: any;
    shortName: string;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2OptionGroupSet = {
    access: D2Access;
    aggregationType:
        | "SUM"
        | "AVERAGE"
        | "AVERAGE_SUM_ORG_UNIT"
        | "LAST"
        | "LAST_AVERAGE_ORG_UNIT"
        | "LAST_IN_PERIOD"
        | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
        | "FIRST"
        | "FIRST_AVERAGE_ORG_UNIT"
        | "COUNT"
        | "STDDEV"
        | "VARIANCE"
        | "MIN"
        | "MAX"
        | "NONE"
        | "CUSTOM"
        | "DEFAULT";
    allItems: boolean;
    attributeValues: D2AttributeValue[];
    code: Id;
    created: string;
    createdBy: D2User;
    dataDimension: boolean;
    dataDimensionType: "DISAGGREGATION" | "ATTRIBUTE";
    description: string;
    dimension: string;
    dimensionType:
        | "DATA_X"
        | "PROGRAM_DATA_ELEMENT"
        | "PROGRAM_ATTRIBUTE"
        | "PROGRAM_INDICATOR"
        | "DATA_COLLAPSED"
        | "CATEGORY_OPTION_COMBO"
        | "ATTRIBUTE_OPTION_COMBO"
        | "PERIOD"
        | "ORGANISATION_UNIT"
        | "CATEGORY_OPTION_GROUP_SET"
        | "DATA_ELEMENT_GROUP_SET"
        | "ORGANISATION_UNIT_GROUP_SET"
        | "ORGANISATION_UNIT_GROUP"
        | "CATEGORY"
        | "OPTION_GROUP_SET"
        | "VALIDATION_RULE"
        | "STATIC"
        | "ORGANISATION_UNIT_LEVEL";
    dimensionalKeywords: D2DimensionalKeywords;
    displayDescription: string;
    displayFormName: string;
    displayName: string;
    displayShortName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    filter: string;
    formName: string;
    href: string;
    id: Id;
    items: any[];
    lastUpdated: string;
    lastUpdatedBy: D2User;
    legendSet: D2LegendSet;
    name: string;
    optionGroups: D2OptionGroup[];
    optionSet: D2OptionSet;
    programStage: D2ProgramStage;
    publicAccess: string;
    sharing: any;
    shortName: string;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2OptionSet = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    code: Id;
    created: string;
    createdBy: D2User;
    displayName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    name: string;
    options: D2Option[];
    publicAccess: string;
    sharing: any;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
    valueType:
        | "TEXT"
        | "LONG_TEXT"
        | "LETTER"
        | "PHONE_NUMBER"
        | "EMAIL"
        | "BOOLEAN"
        | "TRUE_ONLY"
        | "DATE"
        | "DATETIME"
        | "TIME"
        | "NUMBER"
        | "UNIT_INTERVAL"
        | "PERCENTAGE"
        | "INTEGER"
        | "INTEGER_POSITIVE"
        | "INTEGER_NEGATIVE"
        | "INTEGER_ZERO_OR_POSITIVE"
        | "TRACKER_ASSOCIATE"
        | "USERNAME"
        | "COORDINATE"
        | "ORGANISATION_UNIT"
        | "AGE"
        | "URL"
        | "FILE_RESOURCE"
        | "IMAGE";
    version: number;
};

export type D2OrganisationUnit = {
    access: D2Access;
    address: string;
    aggregationType:
        | "SUM"
        | "AVERAGE"
        | "AVERAGE_SUM_ORG_UNIT"
        | "LAST"
        | "LAST_AVERAGE_ORG_UNIT"
        | "LAST_IN_PERIOD"
        | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
        | "FIRST"
        | "FIRST_AVERAGE_ORG_UNIT"
        | "COUNT"
        | "STDDEV"
        | "VARIANCE"
        | "MIN"
        | "MAX"
        | "NONE"
        | "CUSTOM"
        | "DEFAULT";
    ancestors: D2OrganisationUnit[];
    attributeValues: D2AttributeValue[];
    children: D2OrganisationUnit[];
    closedDate: string;
    code: Id;
    comment: string;
    contactPerson: string;
    created: string;
    createdBy: D2User;
    dataSets: D2DataSet[];
    description: string;
    dimensionItem: string;
    dimensionItemType:
        | "DATA_ELEMENT"
        | "DATA_ELEMENT_OPERAND"
        | "INDICATOR"
        | "REPORTING_RATE"
        | "PROGRAM_DATA_ELEMENT"
        | "PROGRAM_ATTRIBUTE"
        | "PROGRAM_INDICATOR"
        | "PERIOD"
        | "ORGANISATION_UNIT"
        | "CATEGORY_OPTION"
        | "OPTION_GROUP"
        | "DATA_ELEMENT_GROUP"
        | "ORGANISATION_UNIT_GROUP"
        | "CATEGORY_OPTION_GROUP";
    displayDescription: string;
    displayFormName: string;
    displayName: string;
    displayShortName: string;
    email: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    formName: string;
    geometry: any;
    href: string;
    id: Id;
    image: D2FileResource;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    leaf: boolean;
    legendSet: D2LegendSet;
    legendSets: D2LegendSet[];
    level: string;
    memberCount: number;
    name: string;
    openingDate: string;
    organisationUnitGroups: D2OrganisationUnitGroup[];
    parent: D2OrganisationUnit;
    path: string;
    periodOffset: number;
    phoneNumber: string;
    programs: D2Program[];
    publicAccess: string;
    sharing: any;
    shortName: string;
    translations: D2Translation[];
    type: string;
    url: string;
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
    users: D2User[];
};

export type D2OrganisationUnitGroup = {
    access: D2Access;
    aggregationType:
        | "SUM"
        | "AVERAGE"
        | "AVERAGE_SUM_ORG_UNIT"
        | "LAST"
        | "LAST_AVERAGE_ORG_UNIT"
        | "LAST_IN_PERIOD"
        | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
        | "FIRST"
        | "FIRST_AVERAGE_ORG_UNIT"
        | "COUNT"
        | "STDDEV"
        | "VARIANCE"
        | "MIN"
        | "MAX"
        | "NONE"
        | "CUSTOM"
        | "DEFAULT";
    attributeValues: D2AttributeValue[];
    code: Id;
    color: string;
    created: string;
    createdBy: D2User;
    description: string;
    dimensionItem: string;
    dimensionItemType:
        | "DATA_ELEMENT"
        | "DATA_ELEMENT_OPERAND"
        | "INDICATOR"
        | "REPORTING_RATE"
        | "PROGRAM_DATA_ELEMENT"
        | "PROGRAM_ATTRIBUTE"
        | "PROGRAM_INDICATOR"
        | "PERIOD"
        | "ORGANISATION_UNIT"
        | "CATEGORY_OPTION"
        | "OPTION_GROUP"
        | "DATA_ELEMENT_GROUP"
        | "ORGANISATION_UNIT_GROUP"
        | "CATEGORY_OPTION_GROUP";
    displayDescription: string;
    displayFormName: string;
    displayName: string;
    displayShortName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    featureType: "NONE" | "MULTI_POLYGON" | "POLYGON" | "POINT" | "SYMBOL";
    formName: string;
    geometry: any;
    groupSets: D2OrganisationUnitGroupSet[];
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    legendSet: D2LegendSet;
    legendSets: D2LegendSet[];
    name: string;
    organisationUnits: D2OrganisationUnit[];
    periodOffset: number;
    publicAccess: string;
    sharing: any;
    shortName: string;
    symbol: string;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2OrganisationUnitGroupSet = {
    access: D2Access;
    aggregationType:
        | "SUM"
        | "AVERAGE"
        | "AVERAGE_SUM_ORG_UNIT"
        | "LAST"
        | "LAST_AVERAGE_ORG_UNIT"
        | "LAST_IN_PERIOD"
        | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
        | "FIRST"
        | "FIRST_AVERAGE_ORG_UNIT"
        | "COUNT"
        | "STDDEV"
        | "VARIANCE"
        | "MIN"
        | "MAX"
        | "NONE"
        | "CUSTOM"
        | "DEFAULT";
    allItems: boolean;
    attributeValues: D2AttributeValue[];
    code: Id;
    compulsory: boolean;
    created: string;
    createdBy: D2User;
    dataDimension: boolean;
    dataDimensionType: "DISAGGREGATION" | "ATTRIBUTE";
    description: string;
    dimension: string;
    dimensionType:
        | "DATA_X"
        | "PROGRAM_DATA_ELEMENT"
        | "PROGRAM_ATTRIBUTE"
        | "PROGRAM_INDICATOR"
        | "DATA_COLLAPSED"
        | "CATEGORY_OPTION_COMBO"
        | "ATTRIBUTE_OPTION_COMBO"
        | "PERIOD"
        | "ORGANISATION_UNIT"
        | "CATEGORY_OPTION_GROUP_SET"
        | "DATA_ELEMENT_GROUP_SET"
        | "ORGANISATION_UNIT_GROUP_SET"
        | "ORGANISATION_UNIT_GROUP"
        | "CATEGORY"
        | "OPTION_GROUP_SET"
        | "VALIDATION_RULE"
        | "STATIC"
        | "ORGANISATION_UNIT_LEVEL";
    dimensionalKeywords: D2DimensionalKeywords;
    displayDescription: string;
    displayFormName: string;
    displayName: string;
    displayShortName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    filter: string;
    formName: string;
    href: string;
    id: Id;
    includeSubhierarchyInAnalytics: boolean;
    items: any[];
    lastUpdated: string;
    lastUpdatedBy: D2User;
    legendSet: D2LegendSet;
    name: string;
    organisationUnitGroups: D2OrganisationUnitGroup[];
    programStage: D2ProgramStage;
    publicAccess: string;
    sharing: any;
    shortName: string;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2OrganisationUnitGroupSetDimension = {
    organisationUnitGroupSet: D2OrganisationUnitGroupSet;
    organisationUnitGroups: any;
};

export type D2OrganisationUnitLevel = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    code: Id;
    created: string;
    createdBy: D2User;
    displayName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    level: number;
    name: string;
    offlineLevels: number;
    publicAccess: string;
    sharing: any;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2Predictor = {
    access: D2Access;
    annualSampleCount: number;
    attributeValues: D2AttributeValue[];
    code: Id;
    created: string;
    createdBy: D2User;
    description: string;
    displayDescription: string;
    displayFormName: string;
    displayName: string;
    displayShortName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    formName: string;
    generator: D2Expression;
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    name: string;
    organisationUnitLevels: D2OrganisationUnitLevel[];
    output: D2DataElement;
    outputCombo: D2CategoryOptionCombo;
    periodType: string;
    predictorGroups: D2PredictorGroup[];
    publicAccess: string;
    sampleSkipTest: D2Expression;
    sequentialSampleCount: number;
    sequentialSkipCount: number;
    sharing: any;
    shortName: string;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2PredictorGroup = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    code: Id;
    created: string;
    createdBy: D2User;
    description: string;
    displayName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    name: string;
    predictors: D2Predictor[];
    publicAccess: string;
    sharing: any;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2Program = {
    access: D2Access;
    accessLevel: "OPEN" | "AUDITED" | "PROTECTED" | "CLOSED";
    attributeValues: D2AttributeValue[];
    categoryCombo: D2CategoryCombo;
    code: Id;
    completeEventsExpiryDays: number;
    created: string;
    createdBy: D2User;
    dataEntryForm: D2DataEntryForm;
    description: string;
    displayDescription: string;
    displayEnrollmentDateLabel: string;
    displayFormName: string;
    displayFrontPageList: boolean;
    displayIncidentDate: boolean;
    displayIncidentDateLabel: string;
    displayName: string;
    displayShortName: string;
    enrollmentDateLabel: string;
    expiryDays: number;
    expiryPeriodType: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    featureType: "NONE" | "MULTI_POLYGON" | "POLYGON" | "POINT" | "SYMBOL";
    formName: string;
    href: string;
    id: Id;
    ignoreOverdueEvents: boolean;
    incidentDateLabel: string;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    maxTeiCountToReturn: number;
    minAttributesRequiredToSearch: number;
    name: string;
    notificationTemplates: D2ProgramNotificationTemplate[];
    onlyEnrollOnce: boolean;
    organisationUnits: D2OrganisationUnit[];
    programIndicators: D2ProgramIndicator[];
    programRuleVariables: D2ProgramRuleVariable[];
    programSections: D2ProgramSection[];
    programStages: D2ProgramStage[];
    programTrackedEntityAttributes: D2ProgramTrackedEntityAttribute[];
    programType: "WITH_REGISTRATION" | "WITHOUT_REGISTRATION";
    publicAccess: string;
    registration: boolean;
    relatedProgram: D2Program;
    selectEnrollmentDatesInFuture: boolean;
    selectIncidentDatesInFuture: boolean;
    sharing: any;
    shortName: string;
    skipOffline: boolean;
    style: D2Style;
    trackedEntityType: D2TrackedEntityType;
    translations: D2Translation[];
    useFirstStageDuringRegistration: boolean;
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
    userRoles: D2UserAuthorityGroup[];
    version: number;
    withoutRegistration: boolean;
};

export type D2ProgramDataElementDimensionItem = {
    access: D2Access;
    aggregationType:
        | "SUM"
        | "AVERAGE"
        | "AVERAGE_SUM_ORG_UNIT"
        | "LAST"
        | "LAST_AVERAGE_ORG_UNIT"
        | "LAST_IN_PERIOD"
        | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
        | "FIRST"
        | "FIRST_AVERAGE_ORG_UNIT"
        | "COUNT"
        | "STDDEV"
        | "VARIANCE"
        | "MIN"
        | "MAX"
        | "NONE"
        | "CUSTOM"
        | "DEFAULT";
    attributeValues: D2AttributeValue[];
    code: Id;
    created: string;
    createdBy: D2User;
    dataElement: D2DataElement;
    description: string;
    dimensionItem: string;
    dimensionItemType:
        | "DATA_ELEMENT"
        | "DATA_ELEMENT_OPERAND"
        | "INDICATOR"
        | "REPORTING_RATE"
        | "PROGRAM_DATA_ELEMENT"
        | "PROGRAM_ATTRIBUTE"
        | "PROGRAM_INDICATOR"
        | "PERIOD"
        | "ORGANISATION_UNIT"
        | "CATEGORY_OPTION"
        | "OPTION_GROUP"
        | "DATA_ELEMENT_GROUP"
        | "ORGANISATION_UNIT_GROUP"
        | "CATEGORY_OPTION_GROUP";
    displayDescription: string;
    displayFormName: string;
    displayName: string;
    displayShortName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    formName: string;
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    legendSet: D2LegendSet;
    legendSets: D2LegendSet[];
    name: string;
    periodOffset: number;
    program: D2Program;
    publicAccess: string;
    sharing: any;
    shortName: string;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
    valueType:
        | "TEXT"
        | "LONG_TEXT"
        | "LETTER"
        | "PHONE_NUMBER"
        | "EMAIL"
        | "BOOLEAN"
        | "TRUE_ONLY"
        | "DATE"
        | "DATETIME"
        | "TIME"
        | "NUMBER"
        | "UNIT_INTERVAL"
        | "PERCENTAGE"
        | "INTEGER"
        | "INTEGER_POSITIVE"
        | "INTEGER_NEGATIVE"
        | "INTEGER_ZERO_OR_POSITIVE"
        | "TRACKER_ASSOCIATE"
        | "USERNAME"
        | "COORDINATE"
        | "ORGANISATION_UNIT"
        | "AGE"
        | "URL"
        | "FILE_RESOURCE"
        | "IMAGE";
};

export type D2ProgramIndicator = {
    access: D2Access;
    aggregateExportAttributeOptionCombo: string;
    aggregateExportCategoryOptionCombo: string;
    aggregationType:
        | "SUM"
        | "AVERAGE"
        | "AVERAGE_SUM_ORG_UNIT"
        | "LAST"
        | "LAST_AVERAGE_ORG_UNIT"
        | "LAST_IN_PERIOD"
        | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
        | "FIRST"
        | "FIRST_AVERAGE_ORG_UNIT"
        | "COUNT"
        | "STDDEV"
        | "VARIANCE"
        | "MIN"
        | "MAX"
        | "NONE"
        | "CUSTOM"
        | "DEFAULT";
    analyticsPeriodBoundaries: D2AnalyticsPeriodBoundary[];
    analyticsType: "EVENT" | "ENROLLMENT";
    attributeValues: D2AttributeValue[];
    code: Id;
    created: string;
    createdBy: D2User;
    decimals: number;
    description: string;
    dimensionItem: string;
    dimensionItemType:
        | "DATA_ELEMENT"
        | "DATA_ELEMENT_OPERAND"
        | "INDICATOR"
        | "REPORTING_RATE"
        | "PROGRAM_DATA_ELEMENT"
        | "PROGRAM_ATTRIBUTE"
        | "PROGRAM_INDICATOR"
        | "PERIOD"
        | "ORGANISATION_UNIT"
        | "CATEGORY_OPTION"
        | "OPTION_GROUP"
        | "DATA_ELEMENT_GROUP"
        | "ORGANISATION_UNIT_GROUP"
        | "CATEGORY_OPTION_GROUP";
    displayDescription: string;
    displayFormName: string;
    displayInForm: boolean;
    displayName: string;
    displayShortName: string;
    expression: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    filter: string;
    formName: string;
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    legendSet: D2LegendSet;
    legendSets: D2LegendSet[];
    name: string;
    periodOffset: number;
    program: D2Program;
    programIndicatorGroups: D2ProgramIndicatorGroup[];
    publicAccess: string;
    sharing: any;
    shortName: string;
    style: D2Style;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2ProgramIndicatorGroup = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    code: Id;
    created: string;
    createdBy: D2User;
    description: string;
    displayName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    name: string;
    programIndicators: D2ProgramIndicator[];
    publicAccess: string;
    sharing: any;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2ProgramInstance = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    code: Id;
    completedBy: string;
    created: string;
    createdAtClient: string;
    createdBy: D2User;
    createdByUserInfo: any;
    deleted: boolean;
    displayName: string;
    endDate: string;
    enrollmentDate: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    followup: boolean;
    geometry: any;
    href: string;
    id: Id;
    incidentDate: string;
    lastUpdated: string;
    lastUpdatedAtClient: string;
    lastUpdatedBy: D2User;
    lastUpdatedByUserInfo: any;
    messageConversations: D2MessageConversation[];
    name: string;
    organisationUnit: D2OrganisationUnit;
    program: D2Program;
    programStageInstances: D2ProgramStageInstance[];
    publicAccess: string;
    relationshipItems: any[];
    sharing: any;
    status: "ACTIVE" | "COMPLETED" | "CANCELLED";
    storedBy: string;
    trackedEntityComments: any[];
    trackedEntityInstance: D2TrackedEntityInstance;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2ProgramNotificationTemplate = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    code: Id;
    created: string;
    createdBy: D2User;
    deliveryChannels: never[];
    displayMessageTemplate: string;
    displayName: string;
    displaySubjectTemplate: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    messageTemplate: string;
    name: string;
    notificationRecipient:
        | "TRACKED_ENTITY_INSTANCE"
        | "ORGANISATION_UNIT_CONTACT"
        | "USERS_AT_ORGANISATION_UNIT"
        | "USER_GROUP"
        | "PROGRAM_ATTRIBUTE"
        | "DATA_ELEMENT"
        | "WEB_HOOK";
    notificationTrigger:
        | "ENROLLMENT"
        | "COMPLETION"
        | "PROGRAM_RULE"
        | "SCHEDULED_DAYS_DUE_DATE"
        | "SCHEDULED_DAYS_INCIDENT_DATE"
        | "SCHEDULED_DAYS_ENROLLMENT_DATE";
    notifyParentOrganisationUnitOnly: boolean;
    notifyUsersInHierarchyOnly: boolean;
    publicAccess: string;
    recipientDataElement: D2DataElement;
    recipientProgramAttribute: D2TrackedEntityAttribute;
    recipientUserGroup: D2UserGroup;
    relativeScheduledDays: number;
    sendRepeatable: boolean;
    sharing: any;
    subjectTemplate: string;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2ProgramRule = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    code: Id;
    condition: string;
    created: string;
    createdBy: D2User;
    description: string;
    displayName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    name: string;
    priority: number;
    program: D2Program;
    programRuleActions: D2ProgramRuleAction[];
    programStage: D2ProgramStage;
    publicAccess: string;
    sharing: any;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2ProgramRuleAction = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    code: Id;
    content: string;
    created: string;
    createdBy: D2User;
    data: string;
    dataElement: D2DataElement;
    displayContent: string;
    displayName: string;
    evaluationEnvironments: never[];
    evaluationTime: "ON_DATA_ENTRY" | "ON_COMPLETE" | "ALWAYS";
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    location: string;
    name: string;
    option: D2Option;
    optionGroup: D2OptionGroup;
    programIndicator: D2ProgramIndicator;
    programRule: D2ProgramRule;
    programRuleActionType:
        | "DISPLAYTEXT"
        | "DISPLAYKEYVALUEPAIR"
        | "HIDEFIELD"
        | "HIDESECTION"
        | "HIDEPROGRAMSTAGE"
        | "ASSIGN"
        | "SHOWWARNING"
        | "WARNINGONCOMPLETE"
        | "SHOWERROR"
        | "ERRORONCOMPLETE"
        | "CREATEEVENT"
        | "SETMANDATORYFIELD"
        | "SENDMESSAGE"
        | "SCHEDULEMESSAGE"
        | "HIDEOPTION"
        | "SHOWOPTIONGROUP"
        | "HIDEOPTIONGROUP";
    programStage: D2ProgramStage;
    programStageSection: D2ProgramStageSection;
    publicAccess: string;
    sharing: any;
    templateUid: string;
    trackedEntityAttribute: D2TrackedEntityAttribute;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2ProgramRuleVariable = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    code: Id;
    created: string;
    createdBy: D2User;
    dataElement: D2DataElement;
    displayName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    name: string;
    program: D2Program;
    programRuleVariableSourceType:
        | "DATAELEMENT_NEWEST_EVENT_PROGRAM_STAGE"
        | "DATAELEMENT_NEWEST_EVENT_PROGRAM"
        | "DATAELEMENT_CURRENT_EVENT"
        | "DATAELEMENT_PREVIOUS_EVENT"
        | "CALCULATED_VALUE"
        | "TEI_ATTRIBUTE";
    programStage: D2ProgramStage;
    publicAccess: string;
    sharing: any;
    trackedEntityAttribute: D2TrackedEntityAttribute;
    translations: D2Translation[];
    useCodeForOptionSet: boolean;
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2ProgramSection = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    code: Id;
    created: string;
    createdBy: D2User;
    description: string;
    displayDescription: string;
    displayFormName: string;
    displayName: string;
    displayShortName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    formName: string;
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    name: string;
    program: D2Program;
    publicAccess: string;
    renderType: any;
    sharing: any;
    shortName: string;
    sortOrder: number;
    style: D2Style;
    trackedEntityAttributes: D2TrackedEntityAttribute[];
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2ProgramStage = {
    access: D2Access;
    allowGenerateNextVisit: boolean;
    attributeValues: D2AttributeValue[];
    autoGenerateEvent: boolean;
    blockEntryForm: boolean;
    code: Id;
    created: string;
    createdBy: D2User;
    dataEntryForm: D2DataEntryForm;
    description: string;
    displayDescription: string;
    displayDueDateLabel: string;
    displayExecutionDateLabel: string;
    displayFormName: string;
    displayGenerateEventBox: boolean;
    displayName: string;
    displayShortName: string;
    dueDateLabel: string;
    enableUserAssignment: boolean;
    executionDateLabel: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    featureType: "NONE" | "MULTI_POLYGON" | "POLYGON" | "POINT" | "SYMBOL";
    formName: string;
    formType: "DEFAULT" | "CUSTOM" | "SECTION" | "SECTION_MULTIORG";
    generatedByEnrollmentDate: boolean;
    hideDueDate: boolean;
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    minDaysFromStart: number;
    name: string;
    nextScheduleDate: D2DataElement;
    notificationTemplates: D2ProgramNotificationTemplate[];
    openAfterEnrollment: boolean;
    periodType: string;
    preGenerateUID: boolean;
    program: D2Program;
    programStageDataElements: D2ProgramStageDataElement[];
    programStageSections: D2ProgramStageSection[];
    publicAccess: string;
    remindCompleted: boolean;
    repeatable: boolean;
    reportDateToUse: string;
    sharing: any;
    shortName: string;
    sortOrder: number;
    standardInterval: number;
    style: D2Style;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
    validationStrategy: "ON_COMPLETE" | "ON_UPDATE_AND_INSERT";
};

export type D2ProgramStageDataElement = {
    access: D2Access;
    allowFutureDate: boolean;
    allowProvidedElsewhere: boolean;
    attributeValues: D2AttributeValue[];
    code: Id;
    compulsory: boolean;
    created: string;
    createdBy: D2User;
    dataElement: D2DataElement;
    displayInReports: boolean;
    displayName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    name: string;
    programStage: D2ProgramStage;
    publicAccess: string;
    renderOptionsAsRadio: boolean;
    renderType: any;
    sharing: any;
    skipSynchronization: boolean;
    sortOrder: number;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2ProgramStageInstance = {
    access: D2Access;
    assignedUser: D2User;
    attributeOptionCombo: D2CategoryOptionCombo;
    attributeValues: D2AttributeValue[];
    code: Id;
    comments: any[];
    completed: boolean;
    completedBy: string;
    completedDate: string;
    creatableInSearchScope: boolean;
    created: string;
    createdAtClient: string;
    createdBy: D2User;
    createdByUserInfo: any;
    deleted: boolean;
    displayName: string;
    dueDate: string;
    eventDataValues: any[];
    eventDate: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    geometry: any;
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedAtClient: string;
    lastUpdatedBy: D2User;
    lastUpdatedByUserInfo: any;
    messageConversations: D2MessageConversation[];
    name: string;
    organisationUnit: D2OrganisationUnit;
    programInstance: D2ProgramInstance;
    programStage: D2ProgramStage;
    publicAccess: string;
    relationshipItems: any[];
    sharing: any;
    status: "ACTIVE" | "COMPLETED" | "VISITED" | "SCHEDULE" | "OVERDUE" | "SKIPPED";
    storedBy: string;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2ProgramStageInstanceFilter = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    code: Id;
    created: string;
    createdBy: D2User;
    description: string;
    displayDescription: string;
    displayName: string;
    eventQueryCriteria: any;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    name: string;
    program: Id;
    programStage: Id;
    publicAccess: string;
    sharing: any;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2ProgramStageSection = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    code: Id;
    created: string;
    createdBy: D2User;
    dataElements: D2DataElement[];
    description: string;
    displayDescription: string;
    displayFormName: string;
    displayName: string;
    displayShortName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    formName: string;
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    name: string;
    programIndicators: D2ProgramIndicator[];
    programStage: D2ProgramStage;
    publicAccess: string;
    renderType: any;
    sharing: any;
    shortName: string;
    sortOrder: number;
    style: D2Style;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2ProgramTrackedEntityAttribute = {
    access: D2Access;
    allowFutureDate: boolean;
    attributeValues: D2AttributeValue[];
    code: Id;
    created: string;
    createdBy: D2User;
    displayInList: boolean;
    displayName: string;
    displayShortName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    mandatory: boolean;
    name: string;
    program: D2Program;
    programTrackedEntityAttributeGroups: D2ProgramTrackedEntityAttributeGroup[];
    publicAccess: string;
    renderOptionsAsRadio: boolean;
    renderType: any;
    searchable: boolean;
    sharing: any;
    sortOrder: number;
    trackedEntityAttribute: D2TrackedEntityAttribute;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
    valueType:
        | "TEXT"
        | "LONG_TEXT"
        | "LETTER"
        | "PHONE_NUMBER"
        | "EMAIL"
        | "BOOLEAN"
        | "TRUE_ONLY"
        | "DATE"
        | "DATETIME"
        | "TIME"
        | "NUMBER"
        | "UNIT_INTERVAL"
        | "PERCENTAGE"
        | "INTEGER"
        | "INTEGER_POSITIVE"
        | "INTEGER_NEGATIVE"
        | "INTEGER_ZERO_OR_POSITIVE"
        | "TRACKER_ASSOCIATE"
        | "USERNAME"
        | "COORDINATE"
        | "ORGANISATION_UNIT"
        | "AGE"
        | "URL"
        | "FILE_RESOURCE"
        | "IMAGE";
};

export type D2ProgramTrackedEntityAttributeDimensionItem = {
    access: D2Access;
    aggregationType:
        | "SUM"
        | "AVERAGE"
        | "AVERAGE_SUM_ORG_UNIT"
        | "LAST"
        | "LAST_AVERAGE_ORG_UNIT"
        | "LAST_IN_PERIOD"
        | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
        | "FIRST"
        | "FIRST_AVERAGE_ORG_UNIT"
        | "COUNT"
        | "STDDEV"
        | "VARIANCE"
        | "MIN"
        | "MAX"
        | "NONE"
        | "CUSTOM"
        | "DEFAULT";
    attribute: D2TrackedEntityAttribute;
    attributeValues: D2AttributeValue[];
    code: Id;
    created: string;
    createdBy: D2User;
    description: string;
    dimensionItem: string;
    dimensionItemType:
        | "DATA_ELEMENT"
        | "DATA_ELEMENT_OPERAND"
        | "INDICATOR"
        | "REPORTING_RATE"
        | "PROGRAM_DATA_ELEMENT"
        | "PROGRAM_ATTRIBUTE"
        | "PROGRAM_INDICATOR"
        | "PERIOD"
        | "ORGANISATION_UNIT"
        | "CATEGORY_OPTION"
        | "OPTION_GROUP"
        | "DATA_ELEMENT_GROUP"
        | "ORGANISATION_UNIT_GROUP"
        | "CATEGORY_OPTION_GROUP";
    displayDescription: string;
    displayFormName: string;
    displayName: string;
    displayShortName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    formName: string;
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    legendSet: D2LegendSet;
    legendSets: D2LegendSet[];
    name: string;
    periodOffset: number;
    program: D2Program;
    publicAccess: string;
    sharing: any;
    shortName: string;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2ProgramTrackedEntityAttributeGroup = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    attributes: D2ProgramTrackedEntityAttribute[];
    code: Id;
    created: string;
    createdBy: D2User;
    description: string;
    displayDescription: string;
    displayFormName: string;
    displayName: string;
    displayShortName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    formName: string;
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    name: string;
    publicAccess: string;
    sharing: any;
    shortName: string;
    translations: D2Translation[];
    uniqunessType: "NONE" | "STRICT" | "VALIDATION";
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2PushAnalysis = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    code: Id;
    created: string;
    createdBy: D2User;
    dashboard: D2Dashboard;
    displayName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    message: string;
    name: string;
    publicAccess: string;
    recipientUserGroups: D2UserGroup[];
    sharing: any;
    title: string;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2Relationship = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    code: Id;
    created: string;
    createdBy: D2User;
    description: string;
    displayDescription: string;
    displayFormName: string;
    displayName: string;
    displayShortName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    formName: string;
    from: any;
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    name: string;
    publicAccess: string;
    relationshipType: D2RelationshipType;
    sharing: any;
    shortName: string;
    style: D2Style;
    to: any;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2RelationshipType = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    bidirectional: boolean;
    code: Id;
    created: string;
    createdBy: D2User;
    description: string;
    displayFromToName: string;
    displayName: string;
    displayToFromName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    fromConstraint: D2RelationshipConstraint;
    fromToName: string;
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    name: string;
    publicAccess: string;
    sharing: any;
    toConstraint: D2RelationshipConstraint;
    toFromName: string;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2Report = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    cacheStrategy:
        | "NO_CACHE"
        | "CACHE_1_MINUTE"
        | "CACHE_5_MINUTES"
        | "CACHE_10_MINUTES"
        | "CACHE_15_MINUTES"
        | "CACHE_30_MINUTES"
        | "CACHE_1_HOUR"
        | "CACHE_6AM_TOMORROW"
        | "CACHE_TWO_WEEKS"
        | "RESPECT_SYSTEM_SETTING";
    code: Id;
    created: string;
    createdBy: D2User;
    designContent: string;
    displayName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    name: string;
    publicAccess: string;
    relativePeriods: any;
    reportParams: D2ReportingParams;
    sharing: any;
    translations: D2Translation[];
    type: "JASPER_REPORT_TABLE" | "JASPER_JDBC" | "HTML";
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
    visualization: D2Visualization;
};

export type D2ReportTable = {
    access: D2Access;
    aggregationType:
        | "SUM"
        | "AVERAGE"
        | "AVERAGE_SUM_ORG_UNIT"
        | "LAST"
        | "LAST_AVERAGE_ORG_UNIT"
        | "LAST_IN_PERIOD"
        | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
        | "FIRST"
        | "FIRST_AVERAGE_ORG_UNIT"
        | "COUNT"
        | "STDDEV"
        | "VARIANCE"
        | "MIN"
        | "MAX"
        | "NONE"
        | "CUSTOM"
        | "DEFAULT";
    attributeDimensions: any[];
    attributeValues: D2AttributeValue[];
    categoryDimensions: D2CategoryDimension[];
    categoryOptionGroupSetDimensions: D2CategoryOptionGroupSetDimension[];
    code: Id;
    colSubTotals: boolean;
    colTotals: boolean;
    columnDimensions: string[];
    columns: any[];
    completedOnly: boolean;
    created: string;
    createdBy: D2User;
    cumulative: boolean;
    dataDimensionItems: any[];
    dataElementDimensions: D2TrackedEntityDataElementDimension[];
    dataElementGroupSetDimensions: D2DataElementGroupSetDimension[];
    description: string;
    digitGroupSeparator: "COMMA" | "SPACE" | "NONE";
    displayDensity: "COMFORTABLE" | "NORMAL" | "COMPACT" | "NONE";
    displayDescription: string;
    displayFormName: string;
    displayName: string;
    displayShortName: string;
    displaySubtitle: string;
    displayTitle: string;
    endDate: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    filterDimensions: string[];
    filters: any[];
    fontSize: "LARGE" | "NORMAL" | "SMALL";
    formName: string;
    hideEmptyColumns: boolean;
    hideEmptyRows: boolean;
    hideSubtitle: boolean;
    hideTitle: boolean;
    href: string;
    id: Id;
    interpretations: D2Interpretation[];
    itemOrganisationUnitGroups: D2OrganisationUnitGroup[];
    lastUpdated: string;
    lastUpdatedBy: D2User;
    legendDisplayStrategy: "FIXED" | "BY_DATA_ITEM";
    legendDisplayStyle: "FILL" | "TEXT";
    legendSet: D2LegendSet;
    measureCriteria: string;
    name: string;
    numberType: "VALUE" | "ROW_PERCENTAGE" | "COLUMN_PERCENTAGE";
    orgUnitField: string;
    organisationUnitGroupSetDimensions: D2OrganisationUnitGroupSetDimension[];
    organisationUnitLevels: number[];
    organisationUnits: D2OrganisationUnit[];
    parentGraphMap: D2Map;
    periods: any[];
    programIndicatorDimensions: D2TrackedEntityProgramIndicatorDimension[];
    publicAccess: string;
    regression: boolean;
    relativePeriods: any;
    reportParams: any;
    rowDimensions: string[];
    rowSubTotals: boolean;
    rowTotals: boolean;
    rows: any[];
    sharing: any;
    shortName: string;
    showDimensionLabels: boolean;
    showHierarchy: boolean;
    skipRounding: boolean;
    sortOrder: number;
    startDate: string;
    subscribed: boolean;
    subscribers: string[];
    subtitle: string;
    timeField: string;
    title: string;
    topLimit: number;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
    userOrgUnitType: "DATA_CAPTURE" | "DATA_OUTPUT" | "TEI_SEARCH";
    userOrganisationUnit: boolean;
    userOrganisationUnitChildren: boolean;
    userOrganisationUnitGrandChildren: boolean;
};

export type D2ReportingRate = {
    access: D2Access;
    aggregationType:
        | "SUM"
        | "AVERAGE"
        | "AVERAGE_SUM_ORG_UNIT"
        | "LAST"
        | "LAST_AVERAGE_ORG_UNIT"
        | "LAST_IN_PERIOD"
        | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
        | "FIRST"
        | "FIRST_AVERAGE_ORG_UNIT"
        | "COUNT"
        | "STDDEV"
        | "VARIANCE"
        | "MIN"
        | "MAX"
        | "NONE"
        | "CUSTOM"
        | "DEFAULT";
    attributeValues: D2AttributeValue[];
    code: Id;
    created: string;
    createdBy: D2User;
    dataSet: D2DataSet;
    description: string;
    dimensionItem: string;
    dimensionItemType:
        | "DATA_ELEMENT"
        | "DATA_ELEMENT_OPERAND"
        | "INDICATOR"
        | "REPORTING_RATE"
        | "PROGRAM_DATA_ELEMENT"
        | "PROGRAM_ATTRIBUTE"
        | "PROGRAM_INDICATOR"
        | "PERIOD"
        | "ORGANISATION_UNIT"
        | "CATEGORY_OPTION"
        | "OPTION_GROUP"
        | "DATA_ELEMENT_GROUP"
        | "ORGANISATION_UNIT_GROUP"
        | "CATEGORY_OPTION_GROUP";
    displayDescription: string;
    displayFormName: string;
    displayName: string;
    displayShortName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    formName: string;
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    legendSet: D2LegendSet;
    legendSets: D2LegendSet[];
    metric:
        | "REPORTING_RATE"
        | "REPORTING_RATE_ON_TIME"
        | "ACTUAL_REPORTS"
        | "ACTUAL_REPORTS_ON_TIME"
        | "EXPECTED_REPORTS";
    name: string;
    periodOffset: number;
    publicAccess: string;
    sharing: any;
    shortName: string;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2SMSCommand = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    code: Id;
    codeValueSeparator: string;
    completenessMethod: "ALL_DATAVALUE" | "AT_LEAST_ONE_DATAVALUE" | "DO_NOT_MARK_COMPLETE";
    created: string;
    createdBy: D2User;
    currentPeriodUsedForReporting: boolean;
    dataset: D2DataSet;
    defaultMessage: string;
    displayName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    moreThanOneOrgUnitMessage: string;
    name: string;
    noUserMessage: string;
    parserType:
        | "KEY_VALUE_PARSER"
        | "J2ME_PARSER"
        | "ALERT_PARSER"
        | "UNREGISTERED_PARSER"
        | "TRACKED_ENTITY_REGISTRATION_PARSER"
        | "PROGRAM_STAGE_DATAENTRY_PARSER"
        | "EVENT_REGISTRATION_PARSER";
    program: D2Program;
    programStage: D2ProgramStage;
    publicAccess: string;
    receivedMessage: string;
    separator: string;
    sharing: any;
    smsCodes: any[];
    specialCharacters: any[];
    successMessage: string;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroup: D2UserGroup;
    userGroupAccesses: D2UserGroupAccess[];
    wrongFormatMessage: string;
};

export type D2Section = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    categoryCombos: D2CategoryCombo[];
    code: Id;
    created: string;
    createdBy: D2User;
    dataElements: D2DataElement[];
    dataSet: D2DataSet;
    description: string;
    displayName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    greyedFields: D2DataElementOperand[];
    href: string;
    id: Id;
    indicators: D2Indicator[];
    lastUpdated: string;
    lastUpdatedBy: D2User;
    name: string;
    publicAccess: string;
    sharing: any;
    showColumnTotals: boolean;
    showRowTotals: boolean;
    sortOrder: number;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2SqlView = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    cacheStrategy:
        | "NO_CACHE"
        | "CACHE_1_MINUTE"
        | "CACHE_5_MINUTES"
        | "CACHE_10_MINUTES"
        | "CACHE_15_MINUTES"
        | "CACHE_30_MINUTES"
        | "CACHE_1_HOUR"
        | "CACHE_6AM_TOMORROW"
        | "CACHE_TWO_WEEKS"
        | "RESPECT_SYSTEM_SETTING";
    code: Id;
    created: string;
    createdBy: D2User;
    description: string;
    displayName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    name: string;
    publicAccess: string;
    sharing: any;
    sqlQuery: string;
    translations: D2Translation[];
    type: "VIEW" | "MATERIALIZED_VIEW" | "QUERY";
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2TrackedEntityAttribute = {
    access: D2Access;
    aggregationType:
        | "SUM"
        | "AVERAGE"
        | "AVERAGE_SUM_ORG_UNIT"
        | "LAST"
        | "LAST_AVERAGE_ORG_UNIT"
        | "LAST_IN_PERIOD"
        | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
        | "FIRST"
        | "FIRST_AVERAGE_ORG_UNIT"
        | "COUNT"
        | "STDDEV"
        | "VARIANCE"
        | "MIN"
        | "MAX"
        | "NONE"
        | "CUSTOM"
        | "DEFAULT";
    attributeValues: D2AttributeValue[];
    code: Id;
    confidential: boolean;
    created: string;
    createdBy: D2User;
    description: string;
    dimensionItem: string;
    dimensionItemType:
        | "DATA_ELEMENT"
        | "DATA_ELEMENT_OPERAND"
        | "INDICATOR"
        | "REPORTING_RATE"
        | "PROGRAM_DATA_ELEMENT"
        | "PROGRAM_ATTRIBUTE"
        | "PROGRAM_INDICATOR"
        | "PERIOD"
        | "ORGANISATION_UNIT"
        | "CATEGORY_OPTION"
        | "OPTION_GROUP"
        | "DATA_ELEMENT_GROUP"
        | "ORGANISATION_UNIT_GROUP"
        | "CATEGORY_OPTION_GROUP";
    displayDescription: string;
    displayFormName: string;
    displayInListNoProgram: boolean;
    displayName: string;
    displayOnVisitSchedule: boolean;
    displayShortName: string;
    expression: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    fieldMask: string;
    formName: string;
    generated: boolean;
    href: string;
    id: Id;
    inherit: boolean;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    legendSet: D2LegendSet;
    legendSets: D2LegendSet[];
    name: string;
    optionSet: D2OptionSet;
    optionSetValue: boolean;
    orgunitScope: boolean;
    pattern: string;
    periodOffset: number;
    publicAccess: string;
    sharing: any;
    shortName: string;
    skipSynchronization: boolean;
    sortOrderInListNoProgram: number;
    sortOrderInVisitSchedule: number;
    style: D2Style;
    translations: D2Translation[];
    unique: boolean;
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
    valueType:
        | "TEXT"
        | "LONG_TEXT"
        | "LETTER"
        | "PHONE_NUMBER"
        | "EMAIL"
        | "BOOLEAN"
        | "TRUE_ONLY"
        | "DATE"
        | "DATETIME"
        | "TIME"
        | "NUMBER"
        | "UNIT_INTERVAL"
        | "PERCENTAGE"
        | "INTEGER"
        | "INTEGER_POSITIVE"
        | "INTEGER_NEGATIVE"
        | "INTEGER_ZERO_OR_POSITIVE"
        | "TRACKER_ASSOCIATE"
        | "USERNAME"
        | "COORDINATE"
        | "ORGANISATION_UNIT"
        | "AGE"
        | "URL"
        | "FILE_RESOURCE"
        | "IMAGE";
};

export type D2TrackedEntityAttributeValue = {
    created: string;
    lastUpdated: string;
    storedBy: string;
    trackedEntityAttribute: D2TrackedEntityAttribute;
    trackedEntityInstance: D2TrackedEntityInstance;
    value: string;
};

export type D2TrackedEntityDataElementDimension = {
    dataElement: D2DataElement;
    filter: string;
    legendSet: D2LegendSet;
    programStage: D2ProgramStage;
};

export type D2TrackedEntityInstance = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    code: Id;
    created: string;
    createdAtClient: string;
    createdBy: D2User;
    createdByUserInfo: any;
    deleted: boolean;
    displayName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    geometry: any;
    href: string;
    id: Id;
    inactive: boolean;
    lastUpdated: string;
    lastUpdatedAtClient: string;
    lastUpdatedBy: D2User;
    lastUpdatedByUserInfo: any;
    name: string;
    organisationUnit: D2OrganisationUnit;
    programInstances: D2ProgramInstance[];
    programOwners: any[];
    publicAccess: string;
    relationshipItems: any[];
    sharing: any;
    storedBy: string;
    trackedEntityAttributeValues: D2TrackedEntityAttributeValue[];
    trackedEntityType: D2TrackedEntityType;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2TrackedEntityInstanceFilter = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    code: Id;
    created: string;
    createdBy: D2User;
    description: string;
    displayDescription: string;
    displayName: string;
    enrollmentCreatedPeriod: any;
    enrollmentStatus: "ACTIVE" | "COMPLETED" | "CANCELLED";
    eventFilters: any[];
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    followup: boolean;
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    name: string;
    program: D2Program;
    publicAccess: string;
    sharing: any;
    sortOrder: number;
    style: D2Style;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2TrackedEntityProgramIndicatorDimension = {
    filter: string;
    legendSet: D2LegendSet;
    programIndicator: D2ProgramIndicator;
};

export type D2TrackedEntityType = {
    access: D2Access;
    allowAuditLog: boolean;
    attributeValues: D2AttributeValue[];
    code: Id;
    created: string;
    createdBy: D2User;
    description: string;
    displayDescription: string;
    displayFormName: string;
    displayName: string;
    displayShortName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    featureType: "NONE" | "MULTI_POLYGON" | "POLYGON" | "POINT" | "SYMBOL";
    formName: string;
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    maxTeiCountToReturn: number;
    minAttributesRequiredToSearch: number;
    name: string;
    publicAccess: string;
    sharing: any;
    shortName: string;
    style: D2Style;
    trackedEntityTypeAttributes: D2TrackedEntityTypeAttribute[];
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
};

export type D2TrackedEntityTypeAttribute = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    code: Id;
    created: string;
    createdBy: D2User;
    displayInList: boolean;
    displayName: string;
    displayShortName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    mandatory: boolean;
    name: string;
    publicAccess: string;
    searchable: boolean;
    sharing: any;
    trackedEntityAttribute: D2TrackedEntityAttribute;
    trackedEntityType: D2TrackedEntityType;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
    valueType:
        | "TEXT"
        | "LONG_TEXT"
        | "LETTER"
        | "PHONE_NUMBER"
        | "EMAIL"
        | "BOOLEAN"
        | "TRUE_ONLY"
        | "DATE"
        | "DATETIME"
        | "TIME"
        | "NUMBER"
        | "UNIT_INTERVAL"
        | "PERCENTAGE"
        | "INTEGER"
        | "INTEGER_POSITIVE"
        | "INTEGER_NEGATIVE"
        | "INTEGER_ZERO_OR_POSITIVE"
        | "TRACKER_ASSOCIATE"
        | "USERNAME"
        | "COORDINATE"
        | "ORGANISATION_UNIT"
        | "AGE"
        | "URL"
        | "FILE_RESOURCE"
        | "IMAGE";
};

export type D2User = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    avatar: D2FileResource;
    birthday: string;
    code: Id;
    created: string;
    createdBy: D2User;
    dataViewOrganisationUnits: D2OrganisationUnit[];
    displayName: string;
    education: string;
    email: string;
    employer: string;
    externalAccess: boolean;
    facebookMessenger: string;
    favorite: boolean;
    favorites: string[];
    firstName: string;
    gender: string;
    href: string;
    id: Id;
    interests: string;
    introduction: string;
    jobTitle: string;
    languages: string;
    lastCheckedInterpretations: string;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    name: string;
    nationality: string;
    organisationUnits: D2OrganisationUnit[];
    phoneNumber: string;
    publicAccess: string;
    sharing: any;
    skype: string;
    surname: string;
    teiSearchOrganisationUnits: D2OrganisationUnit[];
    telegram: string;
    translations: D2Translation[];
    twitter: string;
    user: D2User;
    userAccesses: D2UserAccess[];
    userCredentials: D2UserCredentials;
    userGroupAccesses: D2UserGroupAccess[];
    userGroups: D2UserGroup[];
    welcomeMessage: string;
    whatsApp: string;
};

export type D2UserAccess = {};

export type D2UserAuthorityGroup = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    authorities: string[];
    code: Id;
    created: string;
    createdBy: D2User;
    description: string;
    displayName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    name: string;
    publicAccess: string;
    sharing: any;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
    users: D2User[];
};

export type D2UserCredentials = {
    access: D2Access;
    accountExpiry: string;
    attributeValues: D2AttributeValue[];
    catDimensionConstraints: D2Category[];
    code: Id;
    cogsDimensionConstraints: D2CategoryOptionGroupSet[];
    created: string;
    createdBy: D2User;
    disabled: boolean;
    displayName: string;
    externalAccess: boolean;
    externalAuth: boolean;
    favorite: boolean;
    favorites: string[];
    href: string;
    id: Id;
    invitation: boolean;
    lastLogin: string;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    ldapId: string;
    name: string;
    openId: string;
    password: string;
    passwordLastUpdated: string;
    publicAccess: string;
    selfRegistered: boolean;
    sharing: any;
    translations: D2Translation[];
    twoFA: boolean;
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
    userInfo: D2User;
    userRoles: D2UserAuthorityGroup[];
    username: string;
};

export type D2UserGroup = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    code: Id;
    created: string;
    createdBy: D2User;
    displayName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    managedByGroups: D2UserGroup[];
    managedGroups: D2UserGroup[];
    name: string;
    publicAccess: string;
    sharing: any;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
    users: D2User[];
};

export type D2UserGroupAccess = {};

export type D2ValidationNotificationTemplate = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    code: Id;
    created: string;
    createdBy: D2User;
    displayMessageTemplate: string;
    displayName: string;
    displaySubjectTemplate: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    messageTemplate: string;
    name: string;
    notifyParentOrganisationUnitOnly: boolean;
    notifyUsersInHierarchyOnly: boolean;
    publicAccess: string;
    recipientUserGroups: D2UserGroup[];
    sendStrategy: "COLLECTIVE_SUMMARY" | "SINGLE_NOTIFICATION";
    sharing: any;
    subjectTemplate: string;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
    validationRules: D2ValidationRule[];
};

export type D2ValidationResult = {
    attributeOptionCombo: D2CategoryOptionCombo;
    created: string;
    dayInPeriod: number;
    id: string;
    leftsideValue: number;
    notificationSent: boolean;
    organisationUnit: D2OrganisationUnit;
    period: any;
    rightsideValue: number;
    validationRule: D2ValidationRule;
};

export type D2ValidationRule = {
    access: D2Access;
    aggregateExportAttributeOptionCombo: string;
    aggregateExportCategoryOptionCombo: string;
    aggregationType:
        | "SUM"
        | "AVERAGE"
        | "AVERAGE_SUM_ORG_UNIT"
        | "LAST"
        | "LAST_AVERAGE_ORG_UNIT"
        | "LAST_IN_PERIOD"
        | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
        | "FIRST"
        | "FIRST_AVERAGE_ORG_UNIT"
        | "COUNT"
        | "STDDEV"
        | "VARIANCE"
        | "MIN"
        | "MAX"
        | "NONE"
        | "CUSTOM"
        | "DEFAULT";
    attributeValues: D2AttributeValue[];
    code: Id;
    created: string;
    createdBy: D2User;
    description: string;
    dimensionItem: string;
    dimensionItemType:
        | "DATA_ELEMENT"
        | "DATA_ELEMENT_OPERAND"
        | "INDICATOR"
        | "REPORTING_RATE"
        | "PROGRAM_DATA_ELEMENT"
        | "PROGRAM_ATTRIBUTE"
        | "PROGRAM_INDICATOR"
        | "PERIOD"
        | "ORGANISATION_UNIT"
        | "CATEGORY_OPTION"
        | "OPTION_GROUP"
        | "DATA_ELEMENT_GROUP"
        | "ORGANISATION_UNIT_GROUP"
        | "CATEGORY_OPTION_GROUP";
    displayDescription: string;
    displayFormName: string;
    displayInstruction: string;
    displayName: string;
    displayShortName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    formName: string;
    href: string;
    id: Id;
    importance: "HIGH" | "MEDIUM" | "LOW";
    instruction: string;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    leftSide: D2Expression;
    legendSet: D2LegendSet;
    legendSets: D2LegendSet[];
    name: string;
    notificationTemplates: D2ValidationNotificationTemplate[];
    operator:
        | "equal_to"
        | "not_equal_to"
        | "greater_than"
        | "greater_than_or_equal_to"
        | "less_than"
        | "less_than_or_equal_to"
        | "compulsory_pair"
        | "exclusive_pair";
    organisationUnitLevels: number[];
    periodOffset: number;
    periodType: string;
    publicAccess: string;
    rightSide: D2Expression;
    sharing: any;
    shortName: string;
    skipFormValidation: boolean;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
    validationRuleGroups: D2ValidationRuleGroup[];
};

export type D2ValidationRuleGroup = {
    access: D2Access;
    attributeValues: D2AttributeValue[];
    code: Id;
    created: string;
    createdBy: D2User;
    description: string;
    displayName: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    href: string;
    id: Id;
    lastUpdated: string;
    lastUpdatedBy: D2User;
    name: string;
    publicAccess: string;
    sharing: any;
    translations: D2Translation[];
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
    validationRules: D2ValidationRule[];
};

export type D2Visualization = {
    access: D2Access;
    aggregationType:
        | "SUM"
        | "AVERAGE"
        | "AVERAGE_SUM_ORG_UNIT"
        | "LAST"
        | "LAST_AVERAGE_ORG_UNIT"
        | "LAST_IN_PERIOD"
        | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
        | "FIRST"
        | "FIRST_AVERAGE_ORG_UNIT"
        | "COUNT"
        | "STDDEV"
        | "VARIANCE"
        | "MIN"
        | "MAX"
        | "NONE"
        | "CUSTOM"
        | "DEFAULT";
    attributeDimensions: any[];
    attributeValues: D2AttributeValue[];
    axes: any[];
    baseLineLabel: string;
    baseLineValue: number;
    categoryDimensions: D2CategoryDimension[];
    categoryOptionGroupSetDimensions: D2CategoryOptionGroupSetDimension[];
    code: Id;
    colSubTotals: boolean;
    colTotals: boolean;
    colorSet: string;
    columnDimensions: string[];
    columns: any[];
    completedOnly: boolean;
    created: string;
    createdBy: D2User;
    cumulativeValues: boolean;
    dataDimensionItems: any[];
    dataElementDimensions: D2TrackedEntityDataElementDimension[];
    dataElementGroupSetDimensions: D2DataElementGroupSetDimension[];
    description: string;
    digitGroupSeparator: "COMMA" | "SPACE" | "NONE";
    displayBaseLineLabel: string;
    displayDensity: "COMFORTABLE" | "NORMAL" | "COMPACT" | "NONE";
    displayDescription: string;
    displayDomainAxisLabel: string;
    displayFormName: string;
    displayName: string;
    displayRangeAxisLabel: string;
    displayShortName: string;
    displaySubtitle: string;
    displayTargetLineLabel: string;
    displayTitle: string;
    domainAxisLabel: string;
    endDate: string;
    externalAccess: boolean;
    favorite: boolean;
    favorites: string[];
    filterDimensions: string[];
    filters: any[];
    fontSize: "LARGE" | "NORMAL" | "SMALL";
    fontStyle: any;
    formName: string;
    hideEmptyColumns: boolean;
    hideEmptyRowItems: "NONE" | "BEFORE_FIRST" | "AFTER_LAST" | "BEFORE_FIRST_AFTER_LAST" | "ALL";
    hideEmptyRows: boolean;
    hideLegend: boolean;
    hideSubtitle: boolean;
    hideTitle: boolean;
    href: string;
    id: Id;
    interpretations: D2Interpretation[];
    itemOrganisationUnitGroups: D2OrganisationUnitGroup[];
    lastUpdated: string;
    lastUpdatedBy: D2User;
    legend: any;
    legendDisplayStrategy: "FIXED" | "BY_DATA_ITEM";
    legendDisplayStyle: "FILL" | "TEXT";
    legendSet: D2LegendSet;
    measureCriteria: string;
    name: string;
    noSpaceBetweenColumns: boolean;
    numberType: "VALUE" | "ROW_PERCENTAGE" | "COLUMN_PERCENTAGE";
    optionalAxes: D2Axis[];
    orgUnitField: string;
    organisationUnitGroupSetDimensions: D2OrganisationUnitGroupSetDimension[];
    organisationUnitLevels: number[];
    organisationUnits: D2OrganisationUnit[];
    outlierAnalysis: any;
    parentGraphMap: D2Map;
    percentStackedValues: boolean;
    periods: any[];
    programIndicatorDimensions: D2TrackedEntityProgramIndicatorDimension[];
    publicAccess: string;
    rangeAxisDecimals: number;
    rangeAxisLabel: string;
    rangeAxisMaxValue: number;
    rangeAxisMinValue: number;
    rangeAxisSteps: number;
    regression: boolean;
    regressionType: "NONE" | "LINEAR" | "POLYNOMIAL" | "LOESS";
    relativePeriods: any;
    reportingParams: D2ReportingParams;
    rowDimensions: string[];
    rowSubTotals: boolean;
    rowTotals: boolean;
    rows: any[];
    series: any[];
    sharing: any;
    shortName: string;
    showData: boolean;
    showDimensionLabels: boolean;
    showHierarchy: boolean;
    skipRounding: boolean;
    sortOrder: number;
    startDate: string;
    subscribed: boolean;
    subscribers: string[];
    subtitle: string;
    targetLineLabel: string;
    targetLineValue: number;
    timeField: string;
    title: string;
    topLimit: number;
    translations: D2Translation[];
    type:
        | "COLUMN"
        | "STACKED_COLUMN"
        | "BAR"
        | "STACKED_BAR"
        | "LINE"
        | "AREA"
        | "STACKED_AREA"
        | "PIE"
        | "RADAR"
        | "GAUGE"
        | "YEAR_OVER_YEAR_LINE"
        | "YEAR_OVER_YEAR_COLUMN"
        | "SINGLE_VALUE"
        | "PIVOT_TABLE"
        | "SCATTER"
        | "BUBBLE";
    user: D2User;
    userAccesses: D2UserAccess[];
    userGroupAccesses: D2UserGroupAccess[];
    userOrgUnitType: "DATA_CAPTURE" | "DATA_OUTPUT" | "TEI_SEARCH";
    userOrganisationUnit: boolean;
    userOrganisationUnitChildren: boolean;
    userOrganisationUnitGrandChildren: boolean;
    visualizationPeriodName: string;
    yearlySeries: string[];
};

export interface D2AnalyticsPeriodBoundarySchema {
    name: "D2AnalyticsPeriodBoundary";
    model: D2AnalyticsPeriodBoundary;
    fields: {
        access: D2Access;
        analyticsPeriodBoundaryType:
            | "BEFORE_START_OF_REPORTING_PERIOD"
            | "BEFORE_END_OF_REPORTING_PERIOD"
            | "AFTER_START_OF_REPORTING_PERIOD"
            | "AFTER_END_OF_REPORTING_PERIOD";
        attributeValues: D2AttributeValueSchema[];
        boundaryTarget: string;
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        displayName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        name: string;
        offsetPeriodType: string;
        offsetPeriods: number;
        publicAccess: string;
        sharing: any;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2AnalyticsPeriodBoundary, keyof D2AnalyticsPeriodBoundary>;
        $identifiable: Preset<D2AnalyticsPeriodBoundary, FieldPresets["identifiable"]>;
        $nameable: Preset<D2AnalyticsPeriodBoundary, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2AnalyticsPeriodBoundary,
            | "code"
            | "lastUpdated"
            | "offsetPeriodType"
            | "id"
            | "analyticsPeriodBoundaryType"
            | "boundaryTarget"
            | "lastUpdatedBy"
            | "created"
            | "offsetPeriods"
        >;
        $owner: Preset<
            D2AnalyticsPeriodBoundary,
            | "code"
            | "lastUpdated"
            | "offsetPeriodType"
            | "id"
            | "analyticsPeriodBoundaryType"
            | "boundaryTarget"
            | "lastUpdatedBy"
            | "created"
            | "offsetPeriods"
        >;
    };
}

export interface D2AnalyticsTableHookSchema {
    name: "D2AnalyticsTableHook";
    model: D2AnalyticsTableHook;
    fields: {
        access: D2Access;
        analyticsTableType:
            | "DATA_VALUE"
            | "COMPLETENESS"
            | "COMPLETENESS_TARGET"
            | "ORG_UNIT_TARGET"
            | "EVENT"
            | "ENROLLMENT"
            | "VALIDATION_RESULT";
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        displayName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        name: string;
        phase: "RESOURCE_TABLE_POPULATED" | "ANALYTICS_TABLE_POPULATED";
        publicAccess: string;
        resourceTableType:
            | "ORG_UNIT_STRUCTURE"
            | "DATA_SET_ORG_UNIT_CATEGORY"
            | "CATEGORY_OPTION_COMBO_NAME"
            | "DATA_ELEMENT_GROUP_SET_STRUCTURE"
            | "INDICATOR_GROUP_SET_STRUCTURE"
            | "ORG_UNIT_GROUP_SET_STRUCTURE"
            | "CATEGORY_STRUCTURE"
            | "DATA_ELEMENT_STRUCTURE"
            | "PERIOD_STRUCTURE"
            | "DATE_PERIOD_STRUCTURE"
            | "DATA_ELEMENT_CATEGORY_OPTION_COMBO"
            | "DATA_APPROVAL_REMAP_LEVEL"
            | "DATA_APPROVAL_MIN_LEVEL";
        sharing: any;
        sql: string;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2AnalyticsTableHook, keyof D2AnalyticsTableHook>;
        $identifiable: Preset<D2AnalyticsTableHook, FieldPresets["identifiable"]>;
        $nameable: Preset<D2AnalyticsTableHook, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2AnalyticsTableHook,
            | "code"
            | "analyticsTableType"
            | "sql"
            | "lastUpdated"
            | "id"
            | "phase"
            | "lastUpdatedBy"
            | "created"
            | "name"
            | "resourceTableType"
        >;
        $owner: Preset<
            D2AnalyticsTableHook,
            | "code"
            | "analyticsTableType"
            | "sql"
            | "lastUpdated"
            | "id"
            | "phase"
            | "lastUpdatedBy"
            | "created"
            | "name"
            | "resourceTableType"
        >;
    };
}

export interface D2AttributeSchema {
    name: "D2Attribute";
    model: D2Attribute;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        categoryAttribute: boolean;
        categoryOptionAttribute: boolean;
        categoryOptionComboAttribute: boolean;
        categoryOptionGroupAttribute: boolean;
        categoryOptionGroupSetAttribute: boolean;
        code: Id;
        constantAttribute: boolean;
        created: string;
        createdBy: D2UserSchema;
        dataElementAttribute: boolean;
        dataElementGroupAttribute: boolean;
        dataElementGroupSetAttribute: boolean;
        dataSetAttribute: boolean;
        description: string;
        displayDescription: string;
        displayFormName: string;
        displayName: string;
        displayShortName: string;
        documentAttribute: boolean;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        formName: string;
        href: string;
        id: Id;
        indicatorAttribute: boolean;
        indicatorGroupAttribute: boolean;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        legendSetAttribute: boolean;
        mandatory: boolean;
        name: string;
        optionAttribute: boolean;
        optionSet: D2OptionSetSchema;
        optionSetAttribute: boolean;
        organisationUnitAttribute: boolean;
        organisationUnitGroupAttribute: boolean;
        organisationUnitGroupSetAttribute: boolean;
        programAttribute: boolean;
        programIndicatorAttribute: boolean;
        programStageAttribute: boolean;
        publicAccess: string;
        sectionAttribute: boolean;
        sharing: any;
        shortName: string;
        sortOrder: number;
        sqlViewAttribute: boolean;
        trackedEntityAttributeAttribute: boolean;
        trackedEntityTypeAttribute: boolean;
        translations: D2Translation[];
        unique: boolean;
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userAttribute: boolean;
        userGroupAccesses: D2UserGroupAccessSchema[];
        userGroupAttribute: boolean;
        validationRuleAttribute: boolean;
        validationRuleGroupAttribute: boolean;
        valueType:
            | "TEXT"
            | "LONG_TEXT"
            | "LETTER"
            | "PHONE_NUMBER"
            | "EMAIL"
            | "BOOLEAN"
            | "TRUE_ONLY"
            | "DATE"
            | "DATETIME"
            | "TIME"
            | "NUMBER"
            | "UNIT_INTERVAL"
            | "PERCENTAGE"
            | "INTEGER"
            | "INTEGER_POSITIVE"
            | "INTEGER_NEGATIVE"
            | "INTEGER_ZERO_OR_POSITIVE"
            | "TRACKER_ASSOCIATE"
            | "USERNAME"
            | "COORDINATE"
            | "ORGANISATION_UNIT"
            | "AGE"
            | "URL"
            | "FILE_RESOURCE"
            | "IMAGE";
    };
    fieldPresets: {
        $all: Preset<D2Attribute, keyof D2Attribute>;
        $identifiable: Preset<D2Attribute, FieldPresets["identifiable"]>;
        $nameable: Preset<D2Attribute, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2Attribute,
            | "indicatorAttribute"
            | "indicatorGroupAttribute"
            | "userGroupAttribute"
            | "dataElementAttribute"
            | "lastUpdated"
            | "constantAttribute"
            | "translations"
            | "valueType"
            | "categoryOptionAttribute"
            | "id"
            | "optionSetAttribute"
            | "lastUpdatedBy"
            | "sqlViewAttribute"
            | "created"
            | "legendSetAttribute"
            | "sharing"
            | "trackedEntityAttributeAttribute"
            | "organisationUnitAttribute"
            | "dataSetAttribute"
            | "documentAttribute"
            | "unique"
            | "sortOrder"
            | "name"
            | "validationRuleGroupAttribute"
            | "shortName"
            | "dataElementGroupAttribute"
            | "sectionAttribute"
            | "trackedEntityTypeAttribute"
            | "code"
            | "userAttribute"
            | "description"
            | "mandatory"
            | "categoryOptionGroupAttribute"
            | "programStageAttribute"
            | "programAttribute"
            | "optionSet"
            | "categoryAttribute"
            | "categoryOptionComboAttribute"
            | "categoryOptionGroupSetAttribute"
            | "validationRuleAttribute"
            | "programIndicatorAttribute"
            | "organisationUnitGroupAttribute"
            | "dataElementGroupSetAttribute"
            | "organisationUnitGroupSetAttribute"
            | "createdBy"
            | "optionAttribute"
        >;
        $owner: Preset<
            D2Attribute,
            | "indicatorAttribute"
            | "indicatorGroupAttribute"
            | "userGroupAttribute"
            | "dataElementAttribute"
            | "lastUpdated"
            | "constantAttribute"
            | "translations"
            | "valueType"
            | "categoryOptionAttribute"
            | "id"
            | "optionSetAttribute"
            | "lastUpdatedBy"
            | "sqlViewAttribute"
            | "created"
            | "legendSetAttribute"
            | "sharing"
            | "trackedEntityAttributeAttribute"
            | "organisationUnitAttribute"
            | "dataSetAttribute"
            | "documentAttribute"
            | "unique"
            | "sortOrder"
            | "name"
            | "validationRuleGroupAttribute"
            | "shortName"
            | "dataElementGroupAttribute"
            | "sectionAttribute"
            | "trackedEntityTypeAttribute"
            | "code"
            | "userAttribute"
            | "description"
            | "mandatory"
            | "categoryOptionGroupAttribute"
            | "programStageAttribute"
            | "programAttribute"
            | "optionSet"
            | "categoryAttribute"
            | "categoryOptionComboAttribute"
            | "categoryOptionGroupSetAttribute"
            | "validationRuleAttribute"
            | "programIndicatorAttribute"
            | "organisationUnitGroupAttribute"
            | "dataElementGroupSetAttribute"
            | "organisationUnitGroupSetAttribute"
            | "createdBy"
            | "optionAttribute"
        >;
    };
}

export interface D2AttributeValueSchema {
    name: "D2AttributeValue";
    model: D2AttributeValue;
    fields: { attribute: D2AttributeSchema; value: string };
    fieldPresets: {
        $all: Preset<D2AttributeValue, keyof D2AttributeValue>;
        $identifiable: Preset<D2AttributeValue, FieldPresets["identifiable"]>;
        $nameable: Preset<D2AttributeValue, FieldPresets["nameable"]>;
        $persisted: Preset<D2AttributeValue, never>;
        $owner: Preset<D2AttributeValue, never>;
    };
}

export interface D2CategorySchema {
    name: "D2Category";
    model: D2Category;
    fields: {
        access: D2Access;
        aggregationType:
            | "SUM"
            | "AVERAGE"
            | "AVERAGE_SUM_ORG_UNIT"
            | "LAST"
            | "LAST_AVERAGE_ORG_UNIT"
            | "LAST_IN_PERIOD"
            | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
            | "FIRST"
            | "FIRST_AVERAGE_ORG_UNIT"
            | "COUNT"
            | "STDDEV"
            | "VARIANCE"
            | "MIN"
            | "MAX"
            | "NONE"
            | "CUSTOM"
            | "DEFAULT";
        allItems: boolean;
        attributeValues: D2AttributeValueSchema[];
        categoryCombos: D2CategoryComboSchema[];
        categoryOptions: D2CategoryOptionSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        dataDimension: boolean;
        dataDimensionType: "DISAGGREGATION" | "ATTRIBUTE";
        description: string;
        dimension: string;
        dimensionType:
            | "DATA_X"
            | "PROGRAM_DATA_ELEMENT"
            | "PROGRAM_ATTRIBUTE"
            | "PROGRAM_INDICATOR"
            | "DATA_COLLAPSED"
            | "CATEGORY_OPTION_COMBO"
            | "ATTRIBUTE_OPTION_COMBO"
            | "PERIOD"
            | "ORGANISATION_UNIT"
            | "CATEGORY_OPTION_GROUP_SET"
            | "DATA_ELEMENT_GROUP_SET"
            | "ORGANISATION_UNIT_GROUP_SET"
            | "ORGANISATION_UNIT_GROUP"
            | "CATEGORY"
            | "OPTION_GROUP_SET"
            | "VALIDATION_RULE"
            | "STATIC"
            | "ORGANISATION_UNIT_LEVEL";
        dimensionalKeywords: D2DimensionalKeywords;
        displayDescription: string;
        displayFormName: string;
        displayName: string;
        displayShortName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        filter: string;
        formName: string;
        href: string;
        id: Id;
        items: any[];
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        legendSet: D2LegendSetSchema;
        name: string;
        programStage: D2ProgramStageSchema;
        publicAccess: string;
        sharing: any;
        shortName: string;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2Category, keyof D2Category>;
        $identifiable: Preset<D2Category, FieldPresets["identifiable"]>;
        $nameable: Preset<D2Category, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2Category,
            | "dataDimensionType"
            | "code"
            | "lastUpdated"
            | "translations"
            | "categoryCombos"
            | "id"
            | "categoryOptions"
            | "lastUpdatedBy"
            | "created"
            | "attributeValues"
            | "sharing"
            | "createdBy"
            | "name"
            | "dataDimension"
            | "shortName"
        >;
        $owner: Preset<
            D2Category,
            | "dataDimensionType"
            | "code"
            | "lastUpdated"
            | "translations"
            | "id"
            | "categoryOptions"
            | "lastUpdatedBy"
            | "created"
            | "attributeValues"
            | "sharing"
            | "createdBy"
            | "name"
            | "dataDimension"
            | "shortName"
        >;
    };
}

export interface D2CategoryComboSchema {
    name: "D2CategoryCombo";
    model: D2CategoryCombo;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        categories: D2CategorySchema[];
        categoryOptionCombos: D2CategoryOptionComboSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        dataDimensionType: "DISAGGREGATION" | "ATTRIBUTE";
        displayName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        href: string;
        id: Id;
        isDefault: boolean;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        name: string;
        publicAccess: string;
        sharing: any;
        skipTotal: boolean;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2CategoryCombo, keyof D2CategoryCombo>;
        $identifiable: Preset<D2CategoryCombo, FieldPresets["identifiable"]>;
        $nameable: Preset<D2CategoryCombo, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2CategoryCombo,
            | "dataDimensionType"
            | "code"
            | "lastUpdated"
            | "translations"
            | "id"
            | "categories"
            | "lastUpdatedBy"
            | "created"
            | "sharing"
            | "categoryOptionCombos"
            | "createdBy"
            | "name"
            | "skipTotal"
        >;
        $owner: Preset<
            D2CategoryCombo,
            | "dataDimensionType"
            | "code"
            | "lastUpdated"
            | "translations"
            | "id"
            | "categories"
            | "lastUpdatedBy"
            | "created"
            | "sharing"
            | "createdBy"
            | "name"
            | "skipTotal"
        >;
    };
}

export interface D2CategoryDimensionSchema {
    name: "D2CategoryDimension";
    model: D2CategoryDimension;
    fields: { category: D2CategorySchema; categoryOptions: any };
    fieldPresets: {
        $all: Preset<D2CategoryDimension, keyof D2CategoryDimension>;
        $identifiable: Preset<D2CategoryDimension, FieldPresets["identifiable"]>;
        $nameable: Preset<D2CategoryDimension, FieldPresets["nameable"]>;
        $persisted: Preset<D2CategoryDimension, "categoryOptions" | "category">;
        $owner: Preset<D2CategoryDimension, "categoryOptions" | "category">;
    };
}

export interface D2CategoryOptionSchema {
    name: "D2CategoryOption";
    model: D2CategoryOption;
    fields: {
        access: D2Access;
        aggregationType:
            | "SUM"
            | "AVERAGE"
            | "AVERAGE_SUM_ORG_UNIT"
            | "LAST"
            | "LAST_AVERAGE_ORG_UNIT"
            | "LAST_IN_PERIOD"
            | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
            | "FIRST"
            | "FIRST_AVERAGE_ORG_UNIT"
            | "COUNT"
            | "STDDEV"
            | "VARIANCE"
            | "MIN"
            | "MAX"
            | "NONE"
            | "CUSTOM"
            | "DEFAULT";
        attributeValues: D2AttributeValueSchema[];
        categories: D2CategorySchema[];
        categoryOptionCombos: D2CategoryOptionComboSchema[];
        categoryOptionGroups: D2CategoryOptionGroupSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        description: string;
        dimensionItem: string;
        dimensionItemType:
            | "DATA_ELEMENT"
            | "DATA_ELEMENT_OPERAND"
            | "INDICATOR"
            | "REPORTING_RATE"
            | "PROGRAM_DATA_ELEMENT"
            | "PROGRAM_ATTRIBUTE"
            | "PROGRAM_INDICATOR"
            | "PERIOD"
            | "ORGANISATION_UNIT"
            | "CATEGORY_OPTION"
            | "OPTION_GROUP"
            | "DATA_ELEMENT_GROUP"
            | "ORGANISATION_UNIT_GROUP"
            | "CATEGORY_OPTION_GROUP";
        displayDescription: string;
        displayFormName: string;
        displayName: string;
        displayShortName: string;
        endDate: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        formName: string;
        href: string;
        id: Id;
        isDefault: boolean;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        legendSet: D2LegendSetSchema;
        legendSets: D2LegendSetSchema[];
        name: string;
        organisationUnits: D2OrganisationUnitSchema[];
        periodOffset: number;
        publicAccess: string;
        sharing: any;
        shortName: string;
        startDate: string;
        style: D2Style;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2CategoryOption, keyof D2CategoryOption>;
        $identifiable: Preset<D2CategoryOption, FieldPresets["identifiable"]>;
        $nameable: Preset<D2CategoryOption, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2CategoryOption,
            | "code"
            | "endDate"
            | "lastUpdated"
            | "translations"
            | "formName"
            | "id"
            | "categories"
            | "organisationUnits"
            | "lastUpdatedBy"
            | "created"
            | "attributeValues"
            | "sharing"
            | "categoryOptionCombos"
            | "categoryOptionGroups"
            | "createdBy"
            | "name"
            | "style"
            | "shortName"
            | "startDate"
        >;
        $owner: Preset<
            D2CategoryOption,
            | "code"
            | "endDate"
            | "lastUpdated"
            | "translations"
            | "formName"
            | "id"
            | "organisationUnits"
            | "lastUpdatedBy"
            | "created"
            | "attributeValues"
            | "sharing"
            | "createdBy"
            | "name"
            | "style"
            | "shortName"
            | "startDate"
        >;
    };
}

export interface D2CategoryOptionComboSchema {
    name: "D2CategoryOptionCombo";
    model: D2CategoryOptionCombo;
    fields: {
        access: D2Access;
        aggregationType:
            | "SUM"
            | "AVERAGE"
            | "AVERAGE_SUM_ORG_UNIT"
            | "LAST"
            | "LAST_AVERAGE_ORG_UNIT"
            | "LAST_IN_PERIOD"
            | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
            | "FIRST"
            | "FIRST_AVERAGE_ORG_UNIT"
            | "COUNT"
            | "STDDEV"
            | "VARIANCE"
            | "MIN"
            | "MAX"
            | "NONE"
            | "CUSTOM"
            | "DEFAULT";
        attributeValues: D2AttributeValueSchema[];
        categoryCombo: D2CategoryComboSchema;
        categoryOptions: D2CategoryOptionSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        description: string;
        dimensionItem: string;
        dimensionItemType:
            | "DATA_ELEMENT"
            | "DATA_ELEMENT_OPERAND"
            | "INDICATOR"
            | "REPORTING_RATE"
            | "PROGRAM_DATA_ELEMENT"
            | "PROGRAM_ATTRIBUTE"
            | "PROGRAM_INDICATOR"
            | "PERIOD"
            | "ORGANISATION_UNIT"
            | "CATEGORY_OPTION"
            | "OPTION_GROUP"
            | "DATA_ELEMENT_GROUP"
            | "ORGANISATION_UNIT_GROUP"
            | "CATEGORY_OPTION_GROUP";
        displayDescription: string;
        displayFormName: string;
        displayName: string;
        displayShortName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        formName: string;
        href: string;
        id: Id;
        ignoreApproval: boolean;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        legendSet: D2LegendSetSchema;
        legendSets: D2LegendSetSchema[];
        name: string;
        periodOffset: number;
        publicAccess: string;
        sharing: any;
        shortName: string;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2CategoryOptionCombo, keyof D2CategoryOptionCombo>;
        $identifiable: Preset<D2CategoryOptionCombo, FieldPresets["identifiable"]>;
        $nameable: Preset<D2CategoryOptionCombo, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2CategoryOptionCombo,
            | "code"
            | "lastUpdated"
            | "ignoreApproval"
            | "categoryCombo"
            | "translations"
            | "id"
            | "categoryOptions"
            | "lastUpdatedBy"
            | "created"
            | "attributeValues"
            | "name"
        >;
        $owner: Preset<
            D2CategoryOptionCombo,
            | "code"
            | "lastUpdated"
            | "ignoreApproval"
            | "categoryCombo"
            | "translations"
            | "id"
            | "categoryOptions"
            | "lastUpdatedBy"
            | "created"
            | "attributeValues"
            | "name"
        >;
    };
}

export interface D2CategoryOptionGroupSchema {
    name: "D2CategoryOptionGroup";
    model: D2CategoryOptionGroup;
    fields: {
        access: D2Access;
        aggregationType:
            | "SUM"
            | "AVERAGE"
            | "AVERAGE_SUM_ORG_UNIT"
            | "LAST"
            | "LAST_AVERAGE_ORG_UNIT"
            | "LAST_IN_PERIOD"
            | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
            | "FIRST"
            | "FIRST_AVERAGE_ORG_UNIT"
            | "COUNT"
            | "STDDEV"
            | "VARIANCE"
            | "MIN"
            | "MAX"
            | "NONE"
            | "CUSTOM"
            | "DEFAULT";
        attributeValues: D2AttributeValueSchema[];
        categoryOptions: D2CategoryOptionSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        dataDimensionType: "DISAGGREGATION" | "ATTRIBUTE";
        description: string;
        dimensionItem: string;
        dimensionItemType:
            | "DATA_ELEMENT"
            | "DATA_ELEMENT_OPERAND"
            | "INDICATOR"
            | "REPORTING_RATE"
            | "PROGRAM_DATA_ELEMENT"
            | "PROGRAM_ATTRIBUTE"
            | "PROGRAM_INDICATOR"
            | "PERIOD"
            | "ORGANISATION_UNIT"
            | "CATEGORY_OPTION"
            | "OPTION_GROUP"
            | "DATA_ELEMENT_GROUP"
            | "ORGANISATION_UNIT_GROUP"
            | "CATEGORY_OPTION_GROUP";
        displayDescription: string;
        displayFormName: string;
        displayName: string;
        displayShortName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        formName: string;
        groupSets: D2CategoryOptionGroupSetSchema[];
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        legendSet: D2LegendSetSchema;
        legendSets: D2LegendSetSchema[];
        name: string;
        periodOffset: number;
        publicAccess: string;
        sharing: any;
        shortName: string;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2CategoryOptionGroup, keyof D2CategoryOptionGroup>;
        $identifiable: Preset<D2CategoryOptionGroup, FieldPresets["identifiable"]>;
        $nameable: Preset<D2CategoryOptionGroup, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2CategoryOptionGroup,
            | "dataDimensionType"
            | "code"
            | "lastUpdated"
            | "translations"
            | "id"
            | "categoryOptions"
            | "lastUpdatedBy"
            | "created"
            | "attributeValues"
            | "groupSets"
            | "sharing"
            | "createdBy"
            | "name"
            | "shortName"
        >;
        $owner: Preset<
            D2CategoryOptionGroup,
            | "dataDimensionType"
            | "code"
            | "lastUpdated"
            | "translations"
            | "id"
            | "categoryOptions"
            | "lastUpdatedBy"
            | "created"
            | "attributeValues"
            | "sharing"
            | "createdBy"
            | "name"
            | "shortName"
        >;
    };
}

export interface D2CategoryOptionGroupSetSchema {
    name: "D2CategoryOptionGroupSet";
    model: D2CategoryOptionGroupSet;
    fields: {
        access: D2Access;
        aggregationType:
            | "SUM"
            | "AVERAGE"
            | "AVERAGE_SUM_ORG_UNIT"
            | "LAST"
            | "LAST_AVERAGE_ORG_UNIT"
            | "LAST_IN_PERIOD"
            | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
            | "FIRST"
            | "FIRST_AVERAGE_ORG_UNIT"
            | "COUNT"
            | "STDDEV"
            | "VARIANCE"
            | "MIN"
            | "MAX"
            | "NONE"
            | "CUSTOM"
            | "DEFAULT";
        allItems: boolean;
        attributeValues: D2AttributeValueSchema[];
        categoryOptionGroups: D2CategoryOptionGroupSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        dataDimension: boolean;
        dataDimensionType: "DISAGGREGATION" | "ATTRIBUTE";
        description: string;
        dimension: string;
        dimensionType:
            | "DATA_X"
            | "PROGRAM_DATA_ELEMENT"
            | "PROGRAM_ATTRIBUTE"
            | "PROGRAM_INDICATOR"
            | "DATA_COLLAPSED"
            | "CATEGORY_OPTION_COMBO"
            | "ATTRIBUTE_OPTION_COMBO"
            | "PERIOD"
            | "ORGANISATION_UNIT"
            | "CATEGORY_OPTION_GROUP_SET"
            | "DATA_ELEMENT_GROUP_SET"
            | "ORGANISATION_UNIT_GROUP_SET"
            | "ORGANISATION_UNIT_GROUP"
            | "CATEGORY"
            | "OPTION_GROUP_SET"
            | "VALIDATION_RULE"
            | "STATIC"
            | "ORGANISATION_UNIT_LEVEL";
        dimensionalKeywords: D2DimensionalKeywords;
        displayDescription: string;
        displayFormName: string;
        displayName: string;
        displayShortName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        filter: string;
        formName: string;
        href: string;
        id: Id;
        items: any[];
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        legendSet: D2LegendSetSchema;
        name: string;
        programStage: D2ProgramStageSchema;
        publicAccess: string;
        sharing: any;
        shortName: string;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2CategoryOptionGroupSet, keyof D2CategoryOptionGroupSet>;
        $identifiable: Preset<D2CategoryOptionGroupSet, FieldPresets["identifiable"]>;
        $nameable: Preset<D2CategoryOptionGroupSet, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2CategoryOptionGroupSet,
            | "dataDimensionType"
            | "code"
            | "description"
            | "lastUpdated"
            | "translations"
            | "id"
            | "lastUpdatedBy"
            | "created"
            | "attributeValues"
            | "sharing"
            | "categoryOptionGroups"
            | "createdBy"
            | "name"
            | "dataDimension"
        >;
        $owner: Preset<
            D2CategoryOptionGroupSet,
            | "dataDimensionType"
            | "code"
            | "description"
            | "lastUpdated"
            | "translations"
            | "id"
            | "lastUpdatedBy"
            | "created"
            | "attributeValues"
            | "sharing"
            | "categoryOptionGroups"
            | "createdBy"
            | "name"
            | "dataDimension"
        >;
    };
}

export interface D2CategoryOptionGroupSetDimensionSchema {
    name: "D2CategoryOptionGroupSetDimension";
    model: D2CategoryOptionGroupSetDimension;
    fields: { categoryOptionGroupSet: D2CategoryOptionGroupSetSchema; categoryOptionGroups: any };
    fieldPresets: {
        $all: Preset<D2CategoryOptionGroupSetDimension, keyof D2CategoryOptionGroupSetDimension>;
        $identifiable: Preset<D2CategoryOptionGroupSetDimension, FieldPresets["identifiable"]>;
        $nameable: Preset<D2CategoryOptionGroupSetDimension, FieldPresets["nameable"]>;
        $persisted: Preset<D2CategoryOptionGroupSetDimension, "categoryOptionGroups" | "categoryOptionGroupSet">;
        $owner: Preset<D2CategoryOptionGroupSetDimension, "categoryOptionGroups" | "categoryOptionGroupSet">;
    };
}

export interface D2ChartSchema {
    name: "D2Chart";
    model: D2Chart;
    fields: {
        access: D2Access;
        aggregationType:
            | "SUM"
            | "AVERAGE"
            | "AVERAGE_SUM_ORG_UNIT"
            | "LAST"
            | "LAST_AVERAGE_ORG_UNIT"
            | "LAST_IN_PERIOD"
            | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
            | "FIRST"
            | "FIRST_AVERAGE_ORG_UNIT"
            | "COUNT"
            | "STDDEV"
            | "VARIANCE"
            | "MIN"
            | "MAX"
            | "NONE"
            | "CUSTOM"
            | "DEFAULT";
        attributeDimensions: any[];
        attributeValues: D2AttributeValueSchema[];
        baseLineLabel: string;
        baseLineValue: number;
        category: string;
        categoryDimensions: D2CategoryDimensionSchema[];
        categoryOptionGroupSetDimensions: D2CategoryOptionGroupSetDimensionSchema[];
        code: Id;
        columns: any[];
        completedOnly: boolean;
        created: string;
        createdBy: D2UserSchema;
        cumulativeValues: boolean;
        dataDimensionItems: any[];
        dataElementDimensions: D2TrackedEntityDataElementDimensionSchema[];
        dataElementGroupSetDimensions: D2DataElementGroupSetDimensionSchema[];
        description: string;
        digitGroupSeparator: "COMMA" | "SPACE" | "NONE";
        displayBaseLineLabel: string;
        displayDescription: string;
        displayDomainAxisLabel: string;
        displayFormName: string;
        displayName: string;
        displayRangeAxisLabel: string;
        displayShortName: string;
        displaySubtitle: string;
        displayTargetLineLabel: string;
        displayTitle: string;
        domainAxisLabel: string;
        endDate: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        filterDimensions: string[];
        filters: any[];
        formName: string;
        hideEmptyRowItems: "NONE" | "BEFORE_FIRST" | "AFTER_LAST" | "BEFORE_FIRST_AFTER_LAST" | "ALL";
        hideLegend: boolean;
        hideSubtitle: boolean;
        hideTitle: boolean;
        href: string;
        id: Id;
        interpretations: D2InterpretationSchema[];
        itemOrganisationUnitGroups: D2OrganisationUnitGroupSchema[];
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        legendDisplayStrategy: "FIXED" | "BY_DATA_ITEM";
        legendSet: D2LegendSetSchema;
        name: string;
        noSpaceBetweenColumns: boolean;
        orgUnitField: string;
        organisationUnitGroupSetDimensions: D2OrganisationUnitGroupSetDimensionSchema[];
        organisationUnitLevels: number[];
        organisationUnits: D2OrganisationUnitSchema[];
        parentGraphMap: D2MapSchema;
        percentStackedValues: boolean;
        periods: any[];
        programIndicatorDimensions: D2TrackedEntityProgramIndicatorDimensionSchema[];
        publicAccess: string;
        rangeAxisDecimals: number;
        rangeAxisLabel: string;
        rangeAxisMaxValue: number;
        rangeAxisMinValue: number;
        rangeAxisSteps: number;
        regressionType: "NONE" | "LINEAR" | "POLYNOMIAL" | "LOESS";
        relativePeriods: any;
        rows: any[];
        series: string;
        seriesItems: any[];
        sharing: any;
        shortName: string;
        showData: boolean;
        sortOrder: number;
        startDate: string;
        subscribed: boolean;
        subscribers: string[];
        subtitle: string;
        targetLineLabel: string;
        targetLineValue: number;
        timeField: string;
        title: string;
        topLimit: number;
        translations: D2Translation[];
        type:
            | "COLUMN"
            | "STACKED_COLUMN"
            | "BAR"
            | "STACKED_BAR"
            | "STACKED_AREA"
            | "LINE"
            | "AREA"
            | "PIE"
            | "RADAR"
            | "GAUGE"
            | "YEAR_OVER_YEAR_LINE"
            | "YEAR_OVER_YEAR_COLUMN"
            | "SINGLE_VALUE"
            | "SCATTER"
            | "BUBBLE";
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
        userOrgUnitType: "DATA_CAPTURE" | "DATA_OUTPUT" | "TEI_SEARCH";
        userOrganisationUnit: boolean;
        userOrganisationUnitChildren: boolean;
        userOrganisationUnitGrandChildren: boolean;
        yearlySeries: string[];
    };
    fieldPresets: {
        $all: Preset<D2Chart, keyof D2Chart>;
        $identifiable: Preset<D2Chart, FieldPresets["identifiable"]>;
        $nameable: Preset<D2Chart, FieldPresets["nameable"]>;
        $persisted: Preset<D2Chart, never>;
        $owner: Preset<D2Chart, never>;
    };
}

export interface D2ConstantSchema {
    name: "D2Constant";
    model: D2Constant;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        description: string;
        displayDescription: string;
        displayFormName: string;
        displayName: string;
        displayShortName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        formName: string;
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        name: string;
        publicAccess: string;
        sharing: any;
        shortName: string;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
        value: number;
    };
    fieldPresets: {
        $all: Preset<D2Constant, keyof D2Constant>;
        $identifiable: Preset<D2Constant, FieldPresets["identifiable"]>;
        $nameable: Preset<D2Constant, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2Constant,
            | "code"
            | "description"
            | "lastUpdated"
            | "translations"
            | "id"
            | "value"
            | "lastUpdatedBy"
            | "created"
            | "attributeValues"
            | "sharing"
            | "createdBy"
            | "name"
            | "shortName"
        >;
        $owner: Preset<
            D2Constant,
            | "code"
            | "description"
            | "lastUpdated"
            | "translations"
            | "id"
            | "value"
            | "lastUpdatedBy"
            | "created"
            | "attributeValues"
            | "sharing"
            | "createdBy"
            | "name"
            | "shortName"
        >;
    };
}

export interface D2DashboardSchema {
    name: "D2Dashboard";
    model: D2Dashboard;
    fields: {
        access: D2Access;
        allowedFilters: string[];
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        dashboardItems: D2DashboardItemSchema[];
        description: string;
        displayDescription: string;
        displayFormName: string;
        displayName: string;
        displayShortName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        formName: string;
        href: string;
        id: Id;
        itemCount: number;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        name: string;
        publicAccess: string;
        restrictFilters: boolean;
        sharing: any;
        shortName: string;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2Dashboard, keyof D2Dashboard>;
        $identifiable: Preset<D2Dashboard, FieldPresets["identifiable"]>;
        $nameable: Preset<D2Dashboard, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2Dashboard,
            | "favorites"
            | "code"
            | "description"
            | "restrictFilters"
            | "lastUpdated"
            | "translations"
            | "id"
            | "lastUpdatedBy"
            | "created"
            | "sharing"
            | "dashboardItems"
            | "createdBy"
            | "name"
            | "allowedFilters"
        >;
        $owner: Preset<
            D2Dashboard,
            | "favorites"
            | "code"
            | "description"
            | "restrictFilters"
            | "lastUpdated"
            | "translations"
            | "id"
            | "lastUpdatedBy"
            | "created"
            | "sharing"
            | "dashboardItems"
            | "createdBy"
            | "name"
            | "allowedFilters"
        >;
    };
}

export interface D2DashboardItemSchema {
    name: "D2DashboardItem";
    model: D2DashboardItem;
    fields: {
        access: D2Access;
        appKey: string;
        attributeValues: D2AttributeValueSchema[];
        chart: D2ChartSchema;
        code: Id;
        contentCount: number;
        created: string;
        createdBy: D2UserSchema;
        displayName: string;
        eventChart: D2EventChartSchema;
        eventReport: D2EventReportSchema;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        height: number;
        href: string;
        id: Id;
        interpretationCount: number;
        interpretationLikeCount: number;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        map: D2MapSchema;
        messages: boolean;
        name: string;
        publicAccess: string;
        reportTable: D2ReportTableSchema;
        reports: D2ReportSchema[];
        resources: D2DocumentSchema[];
        shape: "NORMAL" | "DOUBLE_WIDTH" | "FULL_WIDTH";
        sharing: any;
        text: string;
        translations: D2Translation[];
        type:
            | "VISUALIZATION"
            | "CHART"
            | "EVENT_CHART"
            | "MAP"
            | "REPORT_TABLE"
            | "EVENT_REPORT"
            | "USERS"
            | "REPORTS"
            | "RESOURCES"
            | "TEXT"
            | "MESSAGES"
            | "APP";
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
        users: D2UserSchema[];
        visualization: D2VisualizationSchema;
        width: number;
        x: number;
        y: number;
    };
    fieldPresets: {
        $all: Preset<D2DashboardItem, keyof D2DashboardItem>;
        $identifiable: Preset<D2DashboardItem, FieldPresets["identifiable"]>;
        $nameable: Preset<D2DashboardItem, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2DashboardItem,
            | "reports"
            | "visualization"
            | "code"
            | "lastUpdated"
            | "translations"
            | "appKey"
            | "id"
            | "text"
            | "map"
            | "height"
            | "lastUpdatedBy"
            | "shape"
            | "created"
            | "resources"
            | "users"
            | "eventReport"
            | "eventChart"
            | "width"
            | "x"
            | "messages"
            | "y"
        >;
        $owner: Preset<
            D2DashboardItem,
            | "reports"
            | "visualization"
            | "code"
            | "lastUpdated"
            | "translations"
            | "appKey"
            | "id"
            | "text"
            | "map"
            | "height"
            | "lastUpdatedBy"
            | "shape"
            | "created"
            | "resources"
            | "users"
            | "eventReport"
            | "eventChart"
            | "width"
            | "x"
            | "messages"
            | "y"
        >;
    };
}

export interface D2DataApprovalLevelSchema {
    name: "D2DataApprovalLevel";
    model: D2DataApprovalLevel;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        categoryOptionGroupSet: D2CategoryOptionGroupSetSchema;
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        displayName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        level: number;
        name: string;
        orgUnitLevel: number;
        orgUnitLevelName: string;
        publicAccess: string;
        sharing: any;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2DataApprovalLevel, keyof D2DataApprovalLevel>;
        $identifiable: Preset<D2DataApprovalLevel, FieldPresets["identifiable"]>;
        $nameable: Preset<D2DataApprovalLevel, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2DataApprovalLevel,
            | "categoryOptionGroupSet"
            | "code"
            | "lastUpdated"
            | "translations"
            | "id"
            | "lastUpdatedBy"
            | "level"
            | "created"
            | "sharing"
            | "createdBy"
            | "name"
            | "orgUnitLevel"
        >;
        $owner: Preset<
            D2DataApprovalLevel,
            | "categoryOptionGroupSet"
            | "code"
            | "lastUpdated"
            | "translations"
            | "id"
            | "lastUpdatedBy"
            | "level"
            | "created"
            | "sharing"
            | "createdBy"
            | "name"
            | "orgUnitLevel"
        >;
    };
}

export interface D2DataApprovalWorkflowSchema {
    name: "D2DataApprovalWorkflow";
    model: D2DataApprovalWorkflow;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        categoryCombo: D2CategoryComboSchema;
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        dataApprovalLevels: D2DataApprovalLevelSchema[];
        dataSets: D2DataSetSchema[];
        displayName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        name: string;
        periodType: string;
        publicAccess: string;
        sharing: any;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2DataApprovalWorkflow, keyof D2DataApprovalWorkflow>;
        $identifiable: Preset<D2DataApprovalWorkflow, FieldPresets["identifiable"]>;
        $nameable: Preset<D2DataApprovalWorkflow, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2DataApprovalWorkflow,
            | "code"
            | "dataApprovalLevels"
            | "lastUpdated"
            | "categoryCombo"
            | "translations"
            | "id"
            | "lastUpdatedBy"
            | "created"
            | "sharing"
            | "periodType"
            | "createdBy"
            | "name"
            | "dataSets"
        >;
        $owner: Preset<
            D2DataApprovalWorkflow,
            | "code"
            | "dataApprovalLevels"
            | "lastUpdated"
            | "categoryCombo"
            | "translations"
            | "id"
            | "lastUpdatedBy"
            | "created"
            | "sharing"
            | "periodType"
            | "createdBy"
            | "name"
        >;
    };
}

export interface D2DataElementSchema {
    name: "D2DataElement";
    model: D2DataElement;
    fields: {
        access: D2Access;
        aggregationLevels: number[];
        aggregationType:
            | "SUM"
            | "AVERAGE"
            | "AVERAGE_SUM_ORG_UNIT"
            | "LAST"
            | "LAST_AVERAGE_ORG_UNIT"
            | "LAST_IN_PERIOD"
            | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
            | "FIRST"
            | "FIRST_AVERAGE_ORG_UNIT"
            | "COUNT"
            | "STDDEV"
            | "VARIANCE"
            | "MIN"
            | "MAX"
            | "NONE"
            | "CUSTOM"
            | "DEFAULT";
        attributeValues: D2AttributeValueSchema[];
        categoryCombo: D2CategoryComboSchema;
        code: Id;
        commentOptionSet: D2OptionSetSchema;
        created: string;
        createdBy: D2UserSchema;
        dataElementGroups: D2DataElementGroupSchema[];
        dataSetElements: D2DataSetElementSchema[];
        description: string;
        dimensionItem: string;
        dimensionItemType:
            | "DATA_ELEMENT"
            | "DATA_ELEMENT_OPERAND"
            | "INDICATOR"
            | "REPORTING_RATE"
            | "PROGRAM_DATA_ELEMENT"
            | "PROGRAM_ATTRIBUTE"
            | "PROGRAM_INDICATOR"
            | "PERIOD"
            | "ORGANISATION_UNIT"
            | "CATEGORY_OPTION"
            | "OPTION_GROUP"
            | "DATA_ELEMENT_GROUP"
            | "ORGANISATION_UNIT_GROUP"
            | "CATEGORY_OPTION_GROUP";
        displayDescription: string;
        displayFormName: string;
        displayName: string;
        displayShortName: string;
        domainType: "AGGREGATE" | "TRACKER";
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        fieldMask: string;
        formName: string;
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        legendSet: D2LegendSetSchema;
        legendSets: D2LegendSetSchema[];
        name: string;
        optionSet: D2OptionSetSchema;
        optionSetValue: boolean;
        periodOffset: number;
        publicAccess: string;
        sharing: any;
        shortName: string;
        style: D2Style;
        translations: D2Translation[];
        url: string;
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
        valueType:
            | "TEXT"
            | "LONG_TEXT"
            | "LETTER"
            | "PHONE_NUMBER"
            | "EMAIL"
            | "BOOLEAN"
            | "TRUE_ONLY"
            | "DATE"
            | "DATETIME"
            | "TIME"
            | "NUMBER"
            | "UNIT_INTERVAL"
            | "PERCENTAGE"
            | "INTEGER"
            | "INTEGER_POSITIVE"
            | "INTEGER_NEGATIVE"
            | "INTEGER_ZERO_OR_POSITIVE"
            | "TRACKER_ASSOCIATE"
            | "USERNAME"
            | "COORDINATE"
            | "ORGANISATION_UNIT"
            | "AGE"
            | "URL"
            | "FILE_RESOURCE"
            | "IMAGE";
        valueTypeOptions: any;
        zeroIsSignificant: boolean;
    };
    fieldPresets: {
        $all: Preset<D2DataElement, keyof D2DataElement>;
        $identifiable: Preset<D2DataElement, FieldPresets["identifiable"]>;
        $nameable: Preset<D2DataElement, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2DataElement,
            | "aggregationType"
            | "code"
            | "domainType"
            | "dataSetElements"
            | "description"
            | "lastUpdated"
            | "optionSet"
            | "categoryCombo"
            | "translations"
            | "valueType"
            | "formName"
            | "commentOptionSet"
            | "id"
            | "fieldMask"
            | "lastUpdatedBy"
            | "valueTypeOptions"
            | "created"
            | "dataElementGroups"
            | "attributeValues"
            | "sharing"
            | "zeroIsSignificant"
            | "url"
            | "createdBy"
            | "name"
            | "legendSets"
            | "aggregationLevels"
            | "style"
            | "shortName"
        >;
        $owner: Preset<
            D2DataElement,
            | "aggregationType"
            | "code"
            | "domainType"
            | "description"
            | "lastUpdated"
            | "optionSet"
            | "categoryCombo"
            | "translations"
            | "valueType"
            | "formName"
            | "commentOptionSet"
            | "id"
            | "fieldMask"
            | "lastUpdatedBy"
            | "valueTypeOptions"
            | "created"
            | "attributeValues"
            | "sharing"
            | "zeroIsSignificant"
            | "url"
            | "createdBy"
            | "name"
            | "legendSets"
            | "aggregationLevels"
            | "style"
            | "shortName"
        >;
    };
}

export interface D2DataElementGroupSchema {
    name: "D2DataElementGroup";
    model: D2DataElementGroup;
    fields: {
        access: D2Access;
        aggregationType:
            | "SUM"
            | "AVERAGE"
            | "AVERAGE_SUM_ORG_UNIT"
            | "LAST"
            | "LAST_AVERAGE_ORG_UNIT"
            | "LAST_IN_PERIOD"
            | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
            | "FIRST"
            | "FIRST_AVERAGE_ORG_UNIT"
            | "COUNT"
            | "STDDEV"
            | "VARIANCE"
            | "MIN"
            | "MAX"
            | "NONE"
            | "CUSTOM"
            | "DEFAULT";
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        dataElements: D2DataElementSchema[];
        description: string;
        dimensionItem: string;
        dimensionItemType:
            | "DATA_ELEMENT"
            | "DATA_ELEMENT_OPERAND"
            | "INDICATOR"
            | "REPORTING_RATE"
            | "PROGRAM_DATA_ELEMENT"
            | "PROGRAM_ATTRIBUTE"
            | "PROGRAM_INDICATOR"
            | "PERIOD"
            | "ORGANISATION_UNIT"
            | "CATEGORY_OPTION"
            | "OPTION_GROUP"
            | "DATA_ELEMENT_GROUP"
            | "ORGANISATION_UNIT_GROUP"
            | "CATEGORY_OPTION_GROUP";
        displayDescription: string;
        displayFormName: string;
        displayName: string;
        displayShortName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        formName: string;
        groupSets: D2DataElementGroupSetSchema[];
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        legendSet: D2LegendSetSchema;
        legendSets: D2LegendSetSchema[];
        name: string;
        periodOffset: number;
        publicAccess: string;
        sharing: any;
        shortName: string;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2DataElementGroup, keyof D2DataElementGroup>;
        $identifiable: Preset<D2DataElementGroup, FieldPresets["identifiable"]>;
        $nameable: Preset<D2DataElementGroup, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2DataElementGroup,
            | "code"
            | "description"
            | "lastUpdated"
            | "translations"
            | "id"
            | "dataElements"
            | "lastUpdatedBy"
            | "created"
            | "attributeValues"
            | "groupSets"
            | "sharing"
            | "createdBy"
            | "name"
            | "shortName"
        >;
        $owner: Preset<
            D2DataElementGroup,
            | "code"
            | "description"
            | "lastUpdated"
            | "translations"
            | "id"
            | "dataElements"
            | "lastUpdatedBy"
            | "created"
            | "attributeValues"
            | "sharing"
            | "createdBy"
            | "name"
            | "shortName"
        >;
    };
}

export interface D2DataElementGroupSetSchema {
    name: "D2DataElementGroupSet";
    model: D2DataElementGroupSet;
    fields: {
        access: D2Access;
        aggregationType:
            | "SUM"
            | "AVERAGE"
            | "AVERAGE_SUM_ORG_UNIT"
            | "LAST"
            | "LAST_AVERAGE_ORG_UNIT"
            | "LAST_IN_PERIOD"
            | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
            | "FIRST"
            | "FIRST_AVERAGE_ORG_UNIT"
            | "COUNT"
            | "STDDEV"
            | "VARIANCE"
            | "MIN"
            | "MAX"
            | "NONE"
            | "CUSTOM"
            | "DEFAULT";
        allItems: boolean;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        compulsory: boolean;
        created: string;
        createdBy: D2UserSchema;
        dataDimension: boolean;
        dataDimensionType: "DISAGGREGATION" | "ATTRIBUTE";
        dataElementGroups: D2DataElementGroupSchema[];
        description: string;
        dimension: string;
        dimensionType:
            | "DATA_X"
            | "PROGRAM_DATA_ELEMENT"
            | "PROGRAM_ATTRIBUTE"
            | "PROGRAM_INDICATOR"
            | "DATA_COLLAPSED"
            | "CATEGORY_OPTION_COMBO"
            | "ATTRIBUTE_OPTION_COMBO"
            | "PERIOD"
            | "ORGANISATION_UNIT"
            | "CATEGORY_OPTION_GROUP_SET"
            | "DATA_ELEMENT_GROUP_SET"
            | "ORGANISATION_UNIT_GROUP_SET"
            | "ORGANISATION_UNIT_GROUP"
            | "CATEGORY"
            | "OPTION_GROUP_SET"
            | "VALIDATION_RULE"
            | "STATIC"
            | "ORGANISATION_UNIT_LEVEL";
        dimensionalKeywords: D2DimensionalKeywords;
        displayDescription: string;
        displayFormName: string;
        displayName: string;
        displayShortName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        filter: string;
        formName: string;
        href: string;
        id: Id;
        items: any[];
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        legendSet: D2LegendSetSchema;
        name: string;
        programStage: D2ProgramStageSchema;
        publicAccess: string;
        sharing: any;
        shortName: string;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2DataElementGroupSet, keyof D2DataElementGroupSet>;
        $identifiable: Preset<D2DataElementGroupSet, FieldPresets["identifiable"]>;
        $nameable: Preset<D2DataElementGroupSet, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2DataElementGroupSet,
            | "code"
            | "description"
            | "lastUpdated"
            | "translations"
            | "id"
            | "lastUpdatedBy"
            | "created"
            | "attributeValues"
            | "dataElementGroups"
            | "sharing"
            | "compulsory"
            | "createdBy"
            | "name"
            | "dataDimension"
            | "shortName"
        >;
        $owner: Preset<
            D2DataElementGroupSet,
            | "code"
            | "description"
            | "lastUpdated"
            | "translations"
            | "id"
            | "lastUpdatedBy"
            | "created"
            | "attributeValues"
            | "dataElementGroups"
            | "sharing"
            | "compulsory"
            | "createdBy"
            | "name"
            | "dataDimension"
            | "shortName"
        >;
    };
}

export interface D2DataElementGroupSetDimensionSchema {
    name: "D2DataElementGroupSetDimension";
    model: D2DataElementGroupSetDimension;
    fields: { dataElementGroupSet: D2DataElementGroupSetSchema; dataElementGroups: any };
    fieldPresets: {
        $all: Preset<D2DataElementGroupSetDimension, keyof D2DataElementGroupSetDimension>;
        $identifiable: Preset<D2DataElementGroupSetDimension, FieldPresets["identifiable"]>;
        $nameable: Preset<D2DataElementGroupSetDimension, FieldPresets["nameable"]>;
        $persisted: Preset<D2DataElementGroupSetDimension, "dataElementGroups" | "dataElementGroupSet">;
        $owner: Preset<D2DataElementGroupSetDimension, "dataElementGroups" | "dataElementGroupSet">;
    };
}

export interface D2DataElementOperandSchema {
    name: "D2DataElementOperand";
    model: D2DataElementOperand;
    fields: {
        access: D2Access;
        aggregationType:
            | "SUM"
            | "AVERAGE"
            | "AVERAGE_SUM_ORG_UNIT"
            | "LAST"
            | "LAST_AVERAGE_ORG_UNIT"
            | "LAST_IN_PERIOD"
            | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
            | "FIRST"
            | "FIRST_AVERAGE_ORG_UNIT"
            | "COUNT"
            | "STDDEV"
            | "VARIANCE"
            | "MIN"
            | "MAX"
            | "NONE"
            | "CUSTOM"
            | "DEFAULT";
        attributeOptionCombo: D2CategoryOptionComboSchema;
        attributeValues: D2AttributeValueSchema[];
        categoryOptionCombo: D2CategoryOptionComboSchema;
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        dataElement: D2DataElementSchema;
        description: string;
        dimensionItem: string;
        dimensionItemType:
            | "DATA_ELEMENT"
            | "DATA_ELEMENT_OPERAND"
            | "INDICATOR"
            | "REPORTING_RATE"
            | "PROGRAM_DATA_ELEMENT"
            | "PROGRAM_ATTRIBUTE"
            | "PROGRAM_INDICATOR"
            | "PERIOD"
            | "ORGANISATION_UNIT"
            | "CATEGORY_OPTION"
            | "OPTION_GROUP"
            | "DATA_ELEMENT_GROUP"
            | "ORGANISATION_UNIT_GROUP"
            | "CATEGORY_OPTION_GROUP";
        displayDescription: string;
        displayFormName: string;
        displayName: string;
        displayShortName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        formName: string;
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        legendSet: D2LegendSetSchema;
        legendSets: D2LegendSetSchema[];
        name: string;
        periodOffset: number;
        publicAccess: string;
        sharing: any;
        shortName: string;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2DataElementOperand, keyof D2DataElementOperand>;
        $identifiable: Preset<D2DataElementOperand, FieldPresets["identifiable"]>;
        $nameable: Preset<D2DataElementOperand, FieldPresets["nameable"]>;
        $persisted: Preset<D2DataElementOperand, "categoryOptionCombo" | "dataElement">;
        $owner: Preset<D2DataElementOperand, "categoryOptionCombo" | "dataElement">;
    };
}

export interface D2DataEntryFormSchema {
    name: "D2DataEntryForm";
    model: D2DataEntryForm;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        displayName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        format: number;
        href: string;
        htmlCode: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        name: string;
        publicAccess: string;
        sharing: any;
        style: "COMFORTABLE" | "NORMAL" | "COMPACT" | "NONE";
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2DataEntryForm, keyof D2DataEntryForm>;
        $identifiable: Preset<D2DataEntryForm, FieldPresets["identifiable"]>;
        $nameable: Preset<D2DataEntryForm, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2DataEntryForm,
            | "code"
            | "lastUpdated"
            | "translations"
            | "id"
            | "lastUpdatedBy"
            | "created"
            | "htmlCode"
            | "format"
            | "name"
            | "style"
        >;
        $owner: Preset<
            D2DataEntryForm,
            | "code"
            | "lastUpdated"
            | "translations"
            | "id"
            | "lastUpdatedBy"
            | "created"
            | "htmlCode"
            | "format"
            | "name"
            | "style"
        >;
    };
}

export interface D2DataInputPeriodSchema {
    name: "D2DataInputPeriod";
    model: D2DataInputPeriod;
    fields: { closingDate: string; openingDate: string; period: any };
    fieldPresets: {
        $all: Preset<D2DataInputPeriod, keyof D2DataInputPeriod>;
        $identifiable: Preset<D2DataInputPeriod, FieldPresets["identifiable"]>;
        $nameable: Preset<D2DataInputPeriod, FieldPresets["nameable"]>;
        $persisted: Preset<D2DataInputPeriod, "period" | "closingDate" | "openingDate">;
        $owner: Preset<D2DataInputPeriod, "period" | "closingDate" | "openingDate">;
    };
}

export interface D2DataSetSchema {
    name: "D2DataSet";
    model: D2DataSet;
    fields: {
        access: D2Access;
        aggregationType:
            | "SUM"
            | "AVERAGE"
            | "AVERAGE_SUM_ORG_UNIT"
            | "LAST"
            | "LAST_AVERAGE_ORG_UNIT"
            | "LAST_IN_PERIOD"
            | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
            | "FIRST"
            | "FIRST_AVERAGE_ORG_UNIT"
            | "COUNT"
            | "STDDEV"
            | "VARIANCE"
            | "MIN"
            | "MAX"
            | "NONE"
            | "CUSTOM"
            | "DEFAULT";
        attributeValues: D2AttributeValueSchema[];
        categoryCombo: D2CategoryComboSchema;
        code: Id;
        compulsoryDataElementOperands: D2DataElementOperandSchema[];
        compulsoryFieldsCompleteOnly: boolean;
        created: string;
        createdBy: D2UserSchema;
        dataElementDecoration: boolean;
        dataEntryForm: D2DataEntryFormSchema;
        dataInputPeriods: D2DataInputPeriodSchema[];
        dataSetElements: D2DataSetElementSchema[];
        description: string;
        dimensionItem: string;
        dimensionItemType:
            | "DATA_ELEMENT"
            | "DATA_ELEMENT_OPERAND"
            | "INDICATOR"
            | "REPORTING_RATE"
            | "PROGRAM_DATA_ELEMENT"
            | "PROGRAM_ATTRIBUTE"
            | "PROGRAM_INDICATOR"
            | "PERIOD"
            | "ORGANISATION_UNIT"
            | "CATEGORY_OPTION"
            | "OPTION_GROUP"
            | "DATA_ELEMENT_GROUP"
            | "ORGANISATION_UNIT_GROUP"
            | "CATEGORY_OPTION_GROUP";
        displayDescription: string;
        displayFormName: string;
        displayName: string;
        displayShortName: string;
        expiryDays: number;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        fieldCombinationRequired: boolean;
        formName: string;
        formType: "DEFAULT" | "CUSTOM" | "SECTION" | "SECTION_MULTIORG";
        href: string;
        id: Id;
        indicators: D2IndicatorSchema[];
        interpretations: D2InterpretationSchema[];
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        legendSet: D2LegendSetSchema;
        legendSets: D2LegendSetSchema[];
        mobile: boolean;
        name: string;
        noValueRequiresComment: boolean;
        notificationRecipients: D2UserGroupSchema;
        notifyCompletingUser: boolean;
        openFuturePeriods: number;
        openPeriodsAfterCoEndDate: number;
        organisationUnits: D2OrganisationUnitSchema[];
        periodOffset: number;
        periodType: string;
        publicAccess: string;
        renderAsTabs: boolean;
        renderHorizontally: boolean;
        sections: D2SectionSchema[];
        sharing: any;
        shortName: string;
        skipOffline: boolean;
        style: D2Style;
        timelyDays: number;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
        validCompleteOnly: boolean;
        version: number;
        workflow: D2DataApprovalWorkflowSchema;
    };
    fieldPresets: {
        $all: Preset<D2DataSet, keyof D2DataSet>;
        $identifiable: Preset<D2DataSet, FieldPresets["identifiable"]>;
        $nameable: Preset<D2DataSet, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2DataSet,
            | "dataEntryForm"
            | "validCompleteOnly"
            | "dataSetElements"
            | "skipOffline"
            | "compulsoryFieldsCompleteOnly"
            | "lastUpdated"
            | "categoryCombo"
            | "translations"
            | "dataInputPeriods"
            | "id"
            | "interpretations"
            | "lastUpdatedBy"
            | "workflow"
            | "created"
            | "attributeValues"
            | "indicators"
            | "sharing"
            | "version"
            | "sections"
            | "timelyDays"
            | "name"
            | "legendSets"
            | "style"
            | "notificationRecipients"
            | "shortName"
            | "code"
            | "dataElementDecoration"
            | "notifyCompletingUser"
            | "noValueRequiresComment"
            | "compulsoryDataElementOperands"
            | "description"
            | "fieldCombinationRequired"
            | "formName"
            | "organisationUnits"
            | "renderHorizontally"
            | "renderAsTabs"
            | "mobile"
            | "openPeriodsAfterCoEndDate"
            | "periodType"
            | "createdBy"
            | "openFuturePeriods"
            | "expiryDays"
        >;
        $owner: Preset<
            D2DataSet,
            | "dataEntryForm"
            | "validCompleteOnly"
            | "dataSetElements"
            | "skipOffline"
            | "compulsoryFieldsCompleteOnly"
            | "lastUpdated"
            | "categoryCombo"
            | "translations"
            | "dataInputPeriods"
            | "id"
            | "lastUpdatedBy"
            | "workflow"
            | "created"
            | "attributeValues"
            | "indicators"
            | "sharing"
            | "version"
            | "timelyDays"
            | "name"
            | "legendSets"
            | "style"
            | "notificationRecipients"
            | "shortName"
            | "code"
            | "dataElementDecoration"
            | "notifyCompletingUser"
            | "noValueRequiresComment"
            | "compulsoryDataElementOperands"
            | "description"
            | "fieldCombinationRequired"
            | "formName"
            | "organisationUnits"
            | "renderHorizontally"
            | "renderAsTabs"
            | "mobile"
            | "openPeriodsAfterCoEndDate"
            | "periodType"
            | "createdBy"
            | "openFuturePeriods"
            | "expiryDays"
        >;
    };
}

export interface D2DataSetElementSchema {
    name: "D2DataSetElement";
    model: D2DataSetElement;
    fields: {
        categoryCombo: D2CategoryComboSchema;
        dataElement: D2DataElementSchema;
        dataSet: D2DataSetSchema;
    };
    fieldPresets: {
        $all: Preset<D2DataSetElement, keyof D2DataSetElement>;
        $identifiable: Preset<D2DataSetElement, FieldPresets["identifiable"]>;
        $nameable: Preset<D2DataSetElement, FieldPresets["nameable"]>;
        $persisted: Preset<D2DataSetElement, "dataElement" | "categoryCombo" | "dataSet">;
        $owner: Preset<D2DataSetElement, "dataElement" | "categoryCombo" | "dataSet">;
    };
}

export interface D2DataSetNotificationTemplateSchema {
    name: "D2DataSetNotificationTemplate";
    model: D2DataSetNotificationTemplate;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        dataSetNotificationTrigger: "DATA_SET_COMPLETION" | "SCHEDULED_DAYS";
        dataSets: D2DataSetSchema[];
        deliveryChannels: never[];
        displayMessageTemplate: string;
        displayName: string;
        displaySubjectTemplate: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        messageTemplate: string;
        name: string;
        notificationRecipient: "ORGANISATION_UNIT_CONTACT" | "USER_GROUP";
        notifyParentOrganisationUnitOnly: boolean;
        notifyUsersInHierarchyOnly: boolean;
        publicAccess: string;
        recipientUserGroup: D2UserGroupSchema;
        relativeScheduledDays: number;
        sendStrategy: "COLLECTIVE_SUMMARY" | "SINGLE_NOTIFICATION";
        sharing: any;
        subjectTemplate: string;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2DataSetNotificationTemplate, keyof D2DataSetNotificationTemplate>;
        $identifiable: Preset<D2DataSetNotificationTemplate, FieldPresets["identifiable"]>;
        $nameable: Preset<D2DataSetNotificationTemplate, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2DataSetNotificationTemplate,
            | "code"
            | "lastUpdated"
            | "translations"
            | "relativeScheduledDays"
            | "id"
            | "subjectTemplate"
            | "dataSetNotificationTrigger"
            | "sendStrategy"
            | "lastUpdatedBy"
            | "deliveryChannels"
            | "created"
            | "notifyUsersInHierarchyOnly"
            | "notificationRecipient"
            | "notifyParentOrganisationUnitOnly"
            | "name"
            | "dataSets"
            | "recipientUserGroup"
            | "messageTemplate"
        >;
        $owner: Preset<
            D2DataSetNotificationTemplate,
            | "code"
            | "lastUpdated"
            | "translations"
            | "relativeScheduledDays"
            | "id"
            | "subjectTemplate"
            | "dataSetNotificationTrigger"
            | "sendStrategy"
            | "lastUpdatedBy"
            | "deliveryChannels"
            | "created"
            | "notifyUsersInHierarchyOnly"
            | "notificationRecipient"
            | "notifyParentOrganisationUnitOnly"
            | "name"
            | "dataSets"
            | "recipientUserGroup"
            | "messageTemplate"
        >;
    };
}

export interface D2DocumentSchema {
    name: "D2Document";
    model: D2Document;
    fields: {
        access: D2Access;
        attachment: boolean;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        contentType: string;
        created: string;
        createdBy: D2UserSchema;
        displayName: string;
        external: boolean;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        name: string;
        publicAccess: string;
        sharing: any;
        translations: D2Translation[];
        url: string;
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2Document, keyof D2Document>;
        $identifiable: Preset<D2Document, FieldPresets["identifiable"]>;
        $nameable: Preset<D2Document, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2Document,
            | "code"
            | "lastUpdated"
            | "attachment"
            | "translations"
            | "id"
            | "contentType"
            | "lastUpdatedBy"
            | "created"
            | "attributeValues"
            | "sharing"
            | "url"
            | "external"
            | "createdBy"
            | "name"
        >;
        $owner: Preset<
            D2Document,
            | "code"
            | "lastUpdated"
            | "attachment"
            | "translations"
            | "id"
            | "contentType"
            | "lastUpdatedBy"
            | "created"
            | "attributeValues"
            | "sharing"
            | "url"
            | "external"
            | "createdBy"
            | "name"
        >;
    };
}

export interface D2EventChartSchema {
    name: "D2EventChart";
    model: D2EventChart;
    fields: {
        access: D2Access;
        aggregationType:
            | "SUM"
            | "AVERAGE"
            | "AVERAGE_SUM_ORG_UNIT"
            | "LAST"
            | "LAST_AVERAGE_ORG_UNIT"
            | "LAST_IN_PERIOD"
            | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
            | "FIRST"
            | "FIRST_AVERAGE_ORG_UNIT"
            | "COUNT"
            | "STDDEV"
            | "VARIANCE"
            | "MIN"
            | "MAX"
            | "NONE"
            | "CUSTOM"
            | "DEFAULT";
        attributeDimensions: any[];
        attributeValueDimension: D2TrackedEntityAttributeSchema;
        attributeValues: D2AttributeValueSchema[];
        baseLineLabel: string;
        baseLineValue: number;
        categoryDimensions: D2CategoryDimensionSchema[];
        categoryOptionGroupSetDimensions: D2CategoryOptionGroupSetDimensionSchema[];
        code: Id;
        collapseDataDimensions: boolean;
        columnDimensions: string[];
        columns: any[];
        completedOnly: boolean;
        created: string;
        createdBy: D2UserSchema;
        cumulativeValues: boolean;
        dataDimensionItems: any[];
        dataElementDimensions: D2TrackedEntityDataElementDimensionSchema[];
        dataElementGroupSetDimensions: D2DataElementGroupSetDimensionSchema[];
        dataElementValueDimension: D2DataElementSchema;
        description: string;
        digitGroupSeparator: "COMMA" | "SPACE" | "NONE";
        displayBaseLineLabel: string;
        displayDescription: string;
        displayDomainAxisLabel: string;
        displayFormName: string;
        displayName: string;
        displayRangeAxisLabel: string;
        displayShortName: string;
        displaySubtitle: string;
        displayTargetLineLabel: string;
        displayTitle: string;
        domainAxisLabel: string;
        endDate: string;
        eventStatus: "ACTIVE" | "COMPLETED" | "VISITED" | "SCHEDULE" | "OVERDUE" | "SKIPPED";
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        filterDimensions: string[];
        filters: any[];
        formName: string;
        hideEmptyRowItems: "NONE" | "BEFORE_FIRST" | "AFTER_LAST" | "BEFORE_FIRST_AFTER_LAST" | "ALL";
        hideLegend: boolean;
        hideNaData: boolean;
        hideSubtitle: boolean;
        hideTitle: boolean;
        href: string;
        id: Id;
        interpretations: D2InterpretationSchema[];
        itemOrganisationUnitGroups: D2OrganisationUnitGroupSchema[];
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        legendDisplayStrategy: "FIXED" | "BY_DATA_ITEM";
        legendSet: D2LegendSetSchema;
        name: string;
        noSpaceBetweenColumns: boolean;
        orgUnitField: string;
        organisationUnitGroupSetDimensions: D2OrganisationUnitGroupSetDimensionSchema[];
        organisationUnitLevels: number[];
        organisationUnits: D2OrganisationUnitSchema[];
        outputType: "EVENT" | "ENROLLMENT" | "TRACKED_ENTITY_INSTANCE";
        parentGraphMap: D2MapSchema;
        percentStackedValues: boolean;
        periods: any[];
        program: D2ProgramSchema;
        programIndicatorDimensions: D2TrackedEntityProgramIndicatorDimensionSchema[];
        programStage: D2ProgramStageSchema;
        programStatus: "ACTIVE" | "COMPLETED" | "CANCELLED";
        publicAccess: string;
        rangeAxisDecimals: number;
        rangeAxisLabel: string;
        rangeAxisMaxValue: number;
        rangeAxisMinValue: number;
        rangeAxisSteps: number;
        regressionType: "NONE" | "LINEAR" | "POLYNOMIAL" | "LOESS";
        relativePeriods: any;
        rowDimensions: string[];
        rows: any[];
        sharing: any;
        shortName: string;
        showData: boolean;
        sortOrder: number;
        startDate: string;
        subscribed: boolean;
        subscribers: string[];
        subtitle: string;
        targetLineLabel: string;
        targetLineValue: number;
        timeField: string;
        title: string;
        topLimit: number;
        translations: D2Translation[];
        type:
            | "COLUMN"
            | "STACKED_COLUMN"
            | "BAR"
            | "STACKED_BAR"
            | "STACKED_AREA"
            | "LINE"
            | "AREA"
            | "PIE"
            | "RADAR"
            | "GAUGE"
            | "YEAR_OVER_YEAR_LINE"
            | "YEAR_OVER_YEAR_COLUMN"
            | "SINGLE_VALUE"
            | "SCATTER"
            | "BUBBLE";
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
        userOrgUnitType: "DATA_CAPTURE" | "DATA_OUTPUT" | "TEI_SEARCH";
        userOrganisationUnit: boolean;
        userOrganisationUnitChildren: boolean;
        userOrganisationUnitGrandChildren: boolean;
        value: any;
        yearlySeries: string[];
    };
    fieldPresets: {
        $all: Preset<D2EventChart, keyof D2EventChart>;
        $identifiable: Preset<D2EventChart, FieldPresets["identifiable"]>;
        $nameable: Preset<D2EventChart, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2EventChart,
            | "orgUnitField"
            | "endDate"
            | "baseLineValue"
            | "userOrganisationUnitChildren"
            | "program"
            | "type"
            | "lastUpdated"
            | "attributeDimensions"
            | "translations"
            | "userOrganisationUnit"
            | "filterDimensions"
            | "id"
            | "interpretations"
            | "attributeValueDimension"
            | "domainAxisLabel"
            | "subscribers"
            | "cumulativeValues"
            | "sortOrder"
            | "subtitle"
            | "rangeAxisDecimals"
            | "startDate"
            | "collapseDataDimensions"
            | "userOrganisationUnitGrandChildren"
            | "percentStackedValues"
            | "noSpaceBetweenColumns"
            | "dataElementDimensions"
            | "rangeAxisSteps"
            | "periods"
            | "categoryDimensions"
            | "hideTitle"
            | "rowDimensions"
            | "eventStatus"
            | "showData"
            | "hideNaData"
            | "itemOrganisationUnitGroups"
            | "lastUpdatedBy"
            | "programIndicatorDimensions"
            | "created"
            | "rangeAxisLabel"
            | "regressionType"
            | "columnDimensions"
            | "completedOnly"
            | "sharing"
            | "name"
            | "programStatus"
            | "hideEmptyRowItems"
            | "favorites"
            | "aggregationType"
            | "code"
            | "categoryOptionGroupSetDimensions"
            | "hideSubtitle"
            | "outputType"
            | "description"
            | "organisationUnitGroupSetDimensions"
            | "title"
            | "hideLegend"
            | "rangeAxisMinValue"
            | "organisationUnitLevels"
            | "dataElementValueDimension"
            | "relativePeriods"
            | "targetLineLabel"
            | "organisationUnits"
            | "programStage"
            | "timeField"
            | "targetLineValue"
            | "baseLineLabel"
            | "createdBy"
            | "userOrgUnitType"
            | "rangeAxisMaxValue"
        >;
        $owner: Preset<
            D2EventChart,
            | "orgUnitField"
            | "endDate"
            | "baseLineValue"
            | "userOrganisationUnitChildren"
            | "program"
            | "type"
            | "lastUpdated"
            | "attributeDimensions"
            | "translations"
            | "userOrganisationUnit"
            | "filterDimensions"
            | "id"
            | "attributeValueDimension"
            | "domainAxisLabel"
            | "subscribers"
            | "cumulativeValues"
            | "sortOrder"
            | "subtitle"
            | "rangeAxisDecimals"
            | "startDate"
            | "collapseDataDimensions"
            | "userOrganisationUnitGrandChildren"
            | "percentStackedValues"
            | "noSpaceBetweenColumns"
            | "dataElementDimensions"
            | "rangeAxisSteps"
            | "periods"
            | "categoryDimensions"
            | "hideTitle"
            | "rowDimensions"
            | "eventStatus"
            | "showData"
            | "hideNaData"
            | "itemOrganisationUnitGroups"
            | "lastUpdatedBy"
            | "programIndicatorDimensions"
            | "created"
            | "rangeAxisLabel"
            | "regressionType"
            | "columnDimensions"
            | "completedOnly"
            | "sharing"
            | "name"
            | "programStatus"
            | "hideEmptyRowItems"
            | "favorites"
            | "aggregationType"
            | "code"
            | "categoryOptionGroupSetDimensions"
            | "hideSubtitle"
            | "outputType"
            | "description"
            | "organisationUnitGroupSetDimensions"
            | "title"
            | "hideLegend"
            | "rangeAxisMinValue"
            | "organisationUnitLevels"
            | "dataElementValueDimension"
            | "relativePeriods"
            | "targetLineLabel"
            | "organisationUnits"
            | "programStage"
            | "timeField"
            | "targetLineValue"
            | "baseLineLabel"
            | "createdBy"
            | "userOrgUnitType"
            | "rangeAxisMaxValue"
        >;
    };
}

export interface D2EventReportSchema {
    name: "D2EventReport";
    model: D2EventReport;
    fields: {
        access: D2Access;
        aggregationType:
            | "SUM"
            | "AVERAGE"
            | "AVERAGE_SUM_ORG_UNIT"
            | "LAST"
            | "LAST_AVERAGE_ORG_UNIT"
            | "LAST_IN_PERIOD"
            | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
            | "FIRST"
            | "FIRST_AVERAGE_ORG_UNIT"
            | "COUNT"
            | "STDDEV"
            | "VARIANCE"
            | "MIN"
            | "MAX"
            | "NONE"
            | "CUSTOM"
            | "DEFAULT";
        attributeDimensions: any[];
        attributeValueDimension: D2TrackedEntityAttributeSchema;
        attributeValues: D2AttributeValueSchema[];
        categoryDimensions: D2CategoryDimensionSchema[];
        categoryOptionGroupSetDimensions: D2CategoryOptionGroupSetDimensionSchema[];
        code: Id;
        colSubTotals: boolean;
        colTotals: boolean;
        collapseDataDimensions: boolean;
        columnDimensions: string[];
        columns: any[];
        completedOnly: boolean;
        created: string;
        createdBy: D2UserSchema;
        dataDimensionItems: any[];
        dataElementDimensions: D2TrackedEntityDataElementDimensionSchema[];
        dataElementGroupSetDimensions: D2DataElementGroupSetDimensionSchema[];
        dataElementValueDimension: D2DataElementSchema;
        dataType: "AGGREGATED_VALUES" | "EVENTS";
        description: string;
        digitGroupSeparator: "COMMA" | "SPACE" | "NONE";
        displayDensity: "COMFORTABLE" | "NORMAL" | "COMPACT" | "NONE";
        displayDescription: string;
        displayFormName: string;
        displayName: string;
        displayShortName: string;
        displaySubtitle: string;
        displayTitle: string;
        endDate: string;
        eventStatus: "ACTIVE" | "COMPLETED" | "VISITED" | "SCHEDULE" | "OVERDUE" | "SKIPPED";
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        filterDimensions: string[];
        filters: any[];
        fontSize: "LARGE" | "NORMAL" | "SMALL";
        formName: string;
        hideEmptyRows: boolean;
        hideNaData: boolean;
        hideSubtitle: boolean;
        hideTitle: boolean;
        href: string;
        id: Id;
        interpretations: D2InterpretationSchema[];
        itemOrganisationUnitGroups: D2OrganisationUnitGroupSchema[];
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        name: string;
        orgUnitField: string;
        organisationUnitGroupSetDimensions: D2OrganisationUnitGroupSetDimensionSchema[];
        organisationUnitLevels: number[];
        organisationUnits: D2OrganisationUnitSchema[];
        outputType: "EVENT" | "ENROLLMENT" | "TRACKED_ENTITY_INSTANCE";
        parentGraphMap: D2MapSchema;
        periods: any[];
        program: D2ProgramSchema;
        programIndicatorDimensions: D2TrackedEntityProgramIndicatorDimensionSchema[];
        programStage: D2ProgramStageSchema;
        programStatus: "ACTIVE" | "COMPLETED" | "CANCELLED";
        publicAccess: string;
        relativePeriods: any;
        rowDimensions: string[];
        rowSubTotals: boolean;
        rowTotals: boolean;
        rows: any[];
        sharing: any;
        shortName: string;
        showDimensionLabels: boolean;
        showHierarchy: boolean;
        sortOrder: number;
        startDate: string;
        subscribed: boolean;
        subscribers: string[];
        subtitle: string;
        timeField: string;
        title: string;
        topLimit: number;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
        userOrgUnitType: "DATA_CAPTURE" | "DATA_OUTPUT" | "TEI_SEARCH";
        userOrganisationUnit: boolean;
        userOrganisationUnitChildren: boolean;
        userOrganisationUnitGrandChildren: boolean;
        value: any;
    };
    fieldPresets: {
        $all: Preset<D2EventReport, keyof D2EventReport>;
        $identifiable: Preset<D2EventReport, FieldPresets["identifiable"]>;
        $nameable: Preset<D2EventReport, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2EventReport,
            | "orgUnitField"
            | "endDate"
            | "userOrganisationUnitChildren"
            | "program"
            | "lastUpdated"
            | "hideEmptyRows"
            | "attributeDimensions"
            | "translations"
            | "userOrganisationUnit"
            | "filterDimensions"
            | "id"
            | "rowSubTotals"
            | "hideNaData"
            | "interpretations"
            | "itemOrganisationUnitGroups"
            | "displayDensity"
            | "attributeValueDimension"
            | "lastUpdatedBy"
            | "programIndicatorDimensions"
            | "created"
            | "subscribers"
            | "dataType"
            | "columnDimensions"
            | "completedOnly"
            | "sharing"
            | "colTotals"
            | "showDimensionLabels"
            | "subtitle"
            | "sortOrder"
            | "name"
            | "fontSize"
            | "topLimit"
            | "startDate"
            | "collapseDataDimensions"
            | "programStatus"
            | "favorites"
            | "aggregationType"
            | "code"
            | "categoryOptionGroupSetDimensions"
            | "userOrganisationUnitGrandChildren"
            | "hideSubtitle"
            | "outputType"
            | "description"
            | "organisationUnitGroupSetDimensions"
            | "title"
            | "organisationUnitLevels"
            | "colSubTotals"
            | "dataElementValueDimension"
            | "relativePeriods"
            | "dataElementDimensions"
            | "periods"
            | "organisationUnits"
            | "categoryDimensions"
            | "showHierarchy"
            | "programStage"
            | "rowTotals"
            | "timeField"
            | "digitGroupSeparator"
            | "hideTitle"
            | "rowDimensions"
            | "createdBy"
            | "eventStatus"
            | "userOrgUnitType"
        >;
        $owner: Preset<
            D2EventReport,
            | "orgUnitField"
            | "endDate"
            | "userOrganisationUnitChildren"
            | "program"
            | "lastUpdated"
            | "hideEmptyRows"
            | "attributeDimensions"
            | "translations"
            | "userOrganisationUnit"
            | "filterDimensions"
            | "id"
            | "rowSubTotals"
            | "hideNaData"
            | "itemOrganisationUnitGroups"
            | "displayDensity"
            | "attributeValueDimension"
            | "lastUpdatedBy"
            | "programIndicatorDimensions"
            | "created"
            | "subscribers"
            | "dataType"
            | "columnDimensions"
            | "completedOnly"
            | "sharing"
            | "colTotals"
            | "showDimensionLabels"
            | "subtitle"
            | "sortOrder"
            | "name"
            | "fontSize"
            | "topLimit"
            | "startDate"
            | "collapseDataDimensions"
            | "programStatus"
            | "favorites"
            | "aggregationType"
            | "code"
            | "categoryOptionGroupSetDimensions"
            | "userOrganisationUnitGrandChildren"
            | "hideSubtitle"
            | "outputType"
            | "description"
            | "organisationUnitGroupSetDimensions"
            | "title"
            | "organisationUnitLevels"
            | "colSubTotals"
            | "dataElementValueDimension"
            | "relativePeriods"
            | "dataElementDimensions"
            | "periods"
            | "organisationUnits"
            | "categoryDimensions"
            | "showHierarchy"
            | "programStage"
            | "rowTotals"
            | "timeField"
            | "digitGroupSeparator"
            | "hideTitle"
            | "rowDimensions"
            | "createdBy"
            | "eventStatus"
            | "userOrgUnitType"
        >;
    };
}

export interface D2ExpressionSchema {
    name: "D2Expression";
    model: D2Expression;
    fields: {
        description: string;
        expression: string;
        missingValueStrategy: "SKIP_IF_ANY_VALUE_MISSING" | "SKIP_IF_ALL_VALUES_MISSING" | "NEVER_SKIP";
        slidingWindow: boolean;
    };
    fieldPresets: {
        $all: Preset<D2Expression, keyof D2Expression>;
        $identifiable: Preset<D2Expression, FieldPresets["identifiable"]>;
        $nameable: Preset<D2Expression, FieldPresets["nameable"]>;
        $persisted: Preset<D2Expression, "description" | "expression" | "missingValueStrategy" | "slidingWindow">;
        $owner: Preset<D2Expression, "description" | "expression" | "missingValueStrategy" | "slidingWindow">;
    };
}

export interface D2ExternalFileResourceSchema {
    name: "D2ExternalFileResource";
    model: D2ExternalFileResource;
    fields: {
        access: D2Access;
        accessToken: string;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        displayName: string;
        expires: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        fileResource: D2FileResourceSchema;
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        name: string;
        publicAccess: string;
        sharing: any;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2ExternalFileResource, keyof D2ExternalFileResource>;
        $identifiable: Preset<D2ExternalFileResource, FieldPresets["identifiable"]>;
        $nameable: Preset<D2ExternalFileResource, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2ExternalFileResource,
            "expires" | "code" | "lastUpdated" | "id" | "lastUpdatedBy" | "created" | "accessToken" | "fileResource"
        >;
        $owner: Preset<
            D2ExternalFileResource,
            "expires" | "code" | "lastUpdated" | "id" | "lastUpdatedBy" | "created" | "accessToken" | "fileResource"
        >;
    };
}

export interface D2ExternalMapLayerSchema {
    name: "D2ExternalMapLayer";
    model: D2ExternalMapLayer;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        attribution: string;
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        displayName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        href: string;
        id: Id;
        imageFormat: "PNG" | "JPG";
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        layers: string;
        legendSet: D2LegendSetSchema;
        legendSetUrl: string;
        mapLayerPosition: "BASEMAP" | "OVERLAY";
        mapService: "WMS" | "TMS" | "XYZ";
        name: string;
        publicAccess: string;
        sharing: any;
        translations: D2Translation[];
        url: string;
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2ExternalMapLayer, keyof D2ExternalMapLayer>;
        $identifiable: Preset<D2ExternalMapLayer, FieldPresets["identifiable"]>;
        $nameable: Preset<D2ExternalMapLayer, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2ExternalMapLayer,
            | "imageFormat"
            | "code"
            | "legendSetUrl"
            | "mapService"
            | "lastUpdated"
            | "translations"
            | "layers"
            | "id"
            | "lastUpdatedBy"
            | "created"
            | "mapLayerPosition"
            | "sharing"
            | "url"
            | "createdBy"
            | "name"
            | "legendSet"
            | "attribution"
        >;
        $owner: Preset<
            D2ExternalMapLayer,
            | "imageFormat"
            | "code"
            | "legendSetUrl"
            | "mapService"
            | "lastUpdated"
            | "translations"
            | "layers"
            | "id"
            | "lastUpdatedBy"
            | "created"
            | "mapLayerPosition"
            | "sharing"
            | "url"
            | "createdBy"
            | "name"
            | "legendSet"
            | "attribution"
        >;
    };
}

export interface D2FileResourceSchema {
    name: "D2FileResource";
    model: D2FileResource;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        contentLength: string;
        contentMd5: string;
        contentType: string;
        created: string;
        createdBy: D2UserSchema;
        displayName: string;
        domain: "DATA_VALUE" | "PUSH_ANALYSIS" | "DOCUMENT" | "MESSAGE_ATTACHMENT" | "USER_AVATAR" | "ORG_UNIT";
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        hasMultipleStorageFiles: boolean;
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        name: string;
        publicAccess: string;
        sharing: any;
        storageStatus: "NONE" | "PENDING" | "FAILED" | "STORED";
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2FileResource, keyof D2FileResource>;
        $identifiable: Preset<D2FileResource, FieldPresets["identifiable"]>;
        $nameable: Preset<D2FileResource, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2FileResource,
            | "contentMd5"
            | "code"
            | "lastUpdated"
            | "id"
            | "contentType"
            | "lastUpdatedBy"
            | "created"
            | "createdBy"
            | "domain"
            | "hasMultipleStorageFiles"
            | "name"
            | "contentLength"
        >;
        $owner: Preset<
            D2FileResource,
            | "contentMd5"
            | "code"
            | "lastUpdated"
            | "id"
            | "contentType"
            | "lastUpdatedBy"
            | "created"
            | "createdBy"
            | "domain"
            | "hasMultipleStorageFiles"
            | "name"
            | "contentLength"
        >;
    };
}

export interface D2IconSchema {
    name: "D2Icon";
    model: D2Icon;
    fields: {};
    fieldPresets: {
        $all: Preset<D2Icon, keyof D2Icon>;
        $identifiable: Preset<D2Icon, FieldPresets["identifiable"]>;
        $nameable: Preset<D2Icon, FieldPresets["nameable"]>;
        $persisted: Preset<D2Icon, never>;
        $owner: Preset<D2Icon, never>;
    };
}

export interface D2IndicatorSchema {
    name: "D2Indicator";
    model: D2Indicator;
    fields: {
        access: D2Access;
        aggregateExportAttributeOptionCombo: string;
        aggregateExportCategoryOptionCombo: string;
        aggregationType:
            | "SUM"
            | "AVERAGE"
            | "AVERAGE_SUM_ORG_UNIT"
            | "LAST"
            | "LAST_AVERAGE_ORG_UNIT"
            | "LAST_IN_PERIOD"
            | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
            | "FIRST"
            | "FIRST_AVERAGE_ORG_UNIT"
            | "COUNT"
            | "STDDEV"
            | "VARIANCE"
            | "MIN"
            | "MAX"
            | "NONE"
            | "CUSTOM"
            | "DEFAULT";
        annualized: boolean;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        dataSets: D2DataSetSchema[];
        decimals: number;
        denominator: string;
        denominatorDescription: string;
        description: string;
        dimensionItem: string;
        dimensionItemType:
            | "DATA_ELEMENT"
            | "DATA_ELEMENT_OPERAND"
            | "INDICATOR"
            | "REPORTING_RATE"
            | "PROGRAM_DATA_ELEMENT"
            | "PROGRAM_ATTRIBUTE"
            | "PROGRAM_INDICATOR"
            | "PERIOD"
            | "ORGANISATION_UNIT"
            | "CATEGORY_OPTION"
            | "OPTION_GROUP"
            | "DATA_ELEMENT_GROUP"
            | "ORGANISATION_UNIT_GROUP"
            | "CATEGORY_OPTION_GROUP";
        displayDenominatorDescription: string;
        displayDescription: string;
        displayFormName: string;
        displayName: string;
        displayNumeratorDescription: string;
        displayShortName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        formName: string;
        href: string;
        id: Id;
        indicatorGroups: D2IndicatorGroupSchema[];
        indicatorType: D2IndicatorTypeSchema;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        legendSet: D2LegendSetSchema;
        legendSets: D2LegendSetSchema[];
        name: string;
        numerator: string;
        numeratorDescription: string;
        periodOffset: number;
        publicAccess: string;
        sharing: any;
        shortName: string;
        style: D2Style;
        translations: D2Translation[];
        url: string;
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2Indicator, keyof D2Indicator>;
        $identifiable: Preset<D2Indicator, FieldPresets["identifiable"]>;
        $nameable: Preset<D2Indicator, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2Indicator,
            | "aggregateExportCategoryOptionCombo"
            | "lastUpdated"
            | "denominatorDescription"
            | "indicatorType"
            | "translations"
            | "id"
            | "numeratorDescription"
            | "lastUpdatedBy"
            | "created"
            | "attributeValues"
            | "indicatorGroups"
            | "sharing"
            | "numerator"
            | "denominator"
            | "annualized"
            | "name"
            | "dataSets"
            | "legendSets"
            | "style"
            | "shortName"
            | "aggregateExportAttributeOptionCombo"
            | "code"
            | "description"
            | "formName"
            | "url"
            | "createdBy"
            | "decimals"
        >;
        $owner: Preset<
            D2Indicator,
            | "aggregateExportCategoryOptionCombo"
            | "lastUpdated"
            | "denominatorDescription"
            | "indicatorType"
            | "translations"
            | "id"
            | "numeratorDescription"
            | "lastUpdatedBy"
            | "created"
            | "attributeValues"
            | "sharing"
            | "numerator"
            | "denominator"
            | "annualized"
            | "name"
            | "legendSets"
            | "style"
            | "shortName"
            | "aggregateExportAttributeOptionCombo"
            | "code"
            | "description"
            | "formName"
            | "url"
            | "createdBy"
            | "decimals"
        >;
    };
}

export interface D2IndicatorGroupSchema {
    name: "D2IndicatorGroup";
    model: D2IndicatorGroup;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        description: string;
        displayName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        href: string;
        id: Id;
        indicatorGroupSet: D2IndicatorGroupSetSchema;
        indicators: D2IndicatorSchema[];
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        name: string;
        publicAccess: string;
        sharing: any;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2IndicatorGroup, keyof D2IndicatorGroup>;
        $identifiable: Preset<D2IndicatorGroup, FieldPresets["identifiable"]>;
        $nameable: Preset<D2IndicatorGroup, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2IndicatorGroup,
            | "code"
            | "description"
            | "lastUpdated"
            | "translations"
            | "id"
            | "lastUpdatedBy"
            | "created"
            | "attributeValues"
            | "sharing"
            | "indicators"
            | "indicatorGroupSet"
            | "createdBy"
            | "name"
        >;
        $owner: Preset<
            D2IndicatorGroup,
            | "code"
            | "description"
            | "lastUpdated"
            | "translations"
            | "id"
            | "lastUpdatedBy"
            | "created"
            | "attributeValues"
            | "sharing"
            | "indicators"
            | "indicatorGroupSet"
            | "createdBy"
            | "name"
        >;
    };
}

export interface D2IndicatorGroupSetSchema {
    name: "D2IndicatorGroupSet";
    model: D2IndicatorGroupSet;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        compulsory: boolean;
        created: string;
        createdBy: D2UserSchema;
        description: string;
        displayName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        href: string;
        id: Id;
        indicatorGroups: D2IndicatorGroupSchema[];
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        name: string;
        publicAccess: string;
        sharing: any;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2IndicatorGroupSet, keyof D2IndicatorGroupSet>;
        $identifiable: Preset<D2IndicatorGroupSet, FieldPresets["identifiable"]>;
        $nameable: Preset<D2IndicatorGroupSet, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2IndicatorGroupSet,
            | "code"
            | "description"
            | "lastUpdated"
            | "translations"
            | "id"
            | "lastUpdatedBy"
            | "created"
            | "indicatorGroups"
            | "sharing"
            | "compulsory"
            | "createdBy"
            | "name"
        >;
        $owner: Preset<
            D2IndicatorGroupSet,
            | "code"
            | "description"
            | "lastUpdated"
            | "translations"
            | "id"
            | "lastUpdatedBy"
            | "created"
            | "indicatorGroups"
            | "sharing"
            | "compulsory"
            | "createdBy"
            | "name"
        >;
    };
}

export interface D2IndicatorTypeSchema {
    name: "D2IndicatorType";
    model: D2IndicatorType;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        displayName: string;
        externalAccess: boolean;
        factor: number;
        favorite: boolean;
        favorites: string[];
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        name: string;
        number: boolean;
        publicAccess: string;
        sharing: any;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2IndicatorType, keyof D2IndicatorType>;
        $identifiable: Preset<D2IndicatorType, FieldPresets["identifiable"]>;
        $nameable: Preset<D2IndicatorType, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2IndicatorType,
            "lastUpdatedBy" | "code" | "created" | "lastUpdated" | "number" | "translations" | "name" | "id" | "factor"
        >;
        $owner: Preset<
            D2IndicatorType,
            "lastUpdatedBy" | "code" | "created" | "lastUpdated" | "number" | "translations" | "name" | "id" | "factor"
        >;
    };
}

export interface D2InterpretationSchema {
    name: "D2Interpretation";
    model: D2Interpretation;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        chart: D2ChartSchema;
        code: Id;
        comments: D2InterpretationCommentSchema[];
        created: string;
        createdBy: D2UserSchema;
        dataSet: D2DataSetSchema;
        displayName: string;
        eventChart: D2EventChartSchema;
        eventReport: D2EventReportSchema;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        likedBy: D2UserSchema[];
        likes: number;
        map: D2MapSchema;
        mentions: any[];
        name: string;
        organisationUnit: D2OrganisationUnitSchema;
        period: any;
        publicAccess: string;
        reportTable: D2ReportTableSchema;
        sharing: any;
        text: string;
        translations: D2Translation[];
        type: "VISUALIZATION" | "REPORT_TABLE" | "CHART" | "MAP" | "EVENT_REPORT" | "EVENT_CHART" | "DATASET_REPORT";
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
        visualization: D2VisualizationSchema;
    };
    fieldPresets: {
        $all: Preset<D2Interpretation, keyof D2Interpretation>;
        $identifiable: Preset<D2Interpretation, FieldPresets["identifiable"]>;
        $nameable: Preset<D2Interpretation, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2Interpretation,
            | "visualization"
            | "likedBy"
            | "organisationUnit"
            | "lastUpdated"
            | "id"
            | "text"
            | "map"
            | "dataSet"
            | "likes"
            | "period"
            | "comments"
            | "created"
            | "sharing"
            | "createdBy"
            | "eventReport"
            | "mentions"
            | "eventChart"
        >;
        $owner: Preset<
            D2Interpretation,
            | "visualization"
            | "likedBy"
            | "organisationUnit"
            | "lastUpdated"
            | "id"
            | "text"
            | "map"
            | "dataSet"
            | "likes"
            | "period"
            | "comments"
            | "created"
            | "sharing"
            | "createdBy"
            | "eventReport"
            | "mentions"
            | "eventChart"
        >;
    };
}

export interface D2InterpretationCommentSchema {
    name: "D2InterpretationComment";
    model: D2InterpretationComment;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        displayName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        mentions: any[];
        name: string;
        publicAccess: string;
        sharing: any;
        text: string;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2InterpretationComment, keyof D2InterpretationComment>;
        $identifiable: Preset<D2InterpretationComment, FieldPresets["identifiable"]>;
        $nameable: Preset<D2InterpretationComment, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2InterpretationComment,
            "created" | "lastUpdated" | "createdBy" | "mentions" | "text" | "id"
        >;
        $owner: Preset<D2InterpretationComment, "created" | "lastUpdated" | "createdBy" | "mentions" | "text" | "id">;
    };
}

export interface D2JobConfigurationSchema {
    name: "D2JobConfiguration";
    model: D2JobConfiguration;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        configurable: boolean;
        created: string;
        createdBy: D2UserSchema;
        cronExpression: string;
        delay: number;
        displayName: string;
        enabled: boolean;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        href: string;
        id: Id;
        jobParameters: any;
        jobStatus: "RUNNING" | "COMPLETED" | "STOPPED" | "SCHEDULED" | "DISABLED" | "FAILED" | "NOT_STARTED";
        jobType:
            | "DATA_STATISTICS"
            | "DATA_INTEGRITY"
            | "RESOURCE_TABLE"
            | "ANALYTICS_TABLE"
            | "CONTINUOUS_ANALYTICS_TABLE"
            | "DATA_SYNC"
            | "TRACKER_PROGRAMS_DATA_SYNC"
            | "EVENT_PROGRAMS_DATA_SYNC"
            | "FILE_RESOURCE_CLEANUP"
            | "IMAGE_PROCESSING"
            | "META_DATA_SYNC"
            | "SMS_SEND"
            | "SEND_SCHEDULED_MESSAGE"
            | "PROGRAM_NOTIFICATIONS"
            | "VALIDATION_RESULTS_NOTIFICATION"
            | "CREDENTIALS_EXPIRY_ALERT"
            | "MONITORING"
            | "PUSH_ANALYSIS"
            | "PREDICTOR"
            | "DATA_SET_NOTIFICATION"
            | "REMOVE_USED_OR_EXPIRED_RESERVED_VALUES"
            | "TRACKER_IMPORT_JOB"
            | "TRACKER_IMPORT_NOTIFICATION_JOB"
            | "TRACKER_IMPORT_RULE_ENGINE_JOB"
            | "LEADER_ELECTION"
            | "LEADER_RENEWAL"
            | "COMPLETE_DATA_SET_REGISTRATION_IMPORT"
            | "DATAVALUE_IMPORT_INTERNAL"
            | "METADATA_IMPORT"
            | "DATAVALUE_IMPORT"
            | "EVENT_IMPORT"
            | "ENROLLMENT_IMPORT"
            | "TEI_IMPORT"
            | "DISABLE_INACTIVE_USERS"
            | "MOCK"
            | "GML_IMPORT"
            | "ANALYTICSTABLE_UPDATE"
            | "PROGRAM_DATA_SYNC";
        lastExecuted: string;
        lastExecutedStatus: "RUNNING" | "COMPLETED" | "STOPPED" | "SCHEDULED" | "DISABLED" | "FAILED" | "NOT_STARTED";
        lastRuntimeExecution: string;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        leaderOnlyJob: boolean;
        name: string;
        nextExecutionTime: string;
        publicAccess: string;
        schedulingType: "CRON" | "FIXED_DELAY";
        sharing: any;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
        userUid: string;
    };
    fieldPresets: {
        $all: Preset<D2JobConfiguration, keyof D2JobConfiguration>;
        $identifiable: Preset<D2JobConfiguration, FieldPresets["identifiable"]>;
        $nameable: Preset<D2JobConfiguration, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2JobConfiguration,
            | "jobStatus"
            | "code"
            | "enabled"
            | "leaderOnlyJob"
            | "lastUpdated"
            | "id"
            | "jobType"
            | "lastUpdatedBy"
            | "nextExecutionTime"
            | "created"
            | "cronExpression"
            | "lastRuntimeExecution"
            | "delay"
            | "lastExecutedStatus"
            | "name"
            | "jobParameters"
            | "lastExecuted"
        >;
        $owner: Preset<
            D2JobConfiguration,
            | "jobStatus"
            | "code"
            | "enabled"
            | "leaderOnlyJob"
            | "lastUpdated"
            | "id"
            | "jobType"
            | "lastUpdatedBy"
            | "nextExecutionTime"
            | "created"
            | "cronExpression"
            | "lastRuntimeExecution"
            | "delay"
            | "lastExecutedStatus"
            | "name"
            | "jobParameters"
            | "lastExecuted"
        >;
    };
}

export interface D2KeyJsonValueSchema {
    name: "D2KeyJsonValue";
    model: D2KeyJsonValue;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        displayName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        href: string;
        id: Id;
        key: string;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        name: string;
        namespace: string;
        publicAccess: string;
        sharing: any;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
        value: string;
    };
    fieldPresets: {
        $all: Preset<D2KeyJsonValue, keyof D2KeyJsonValue>;
        $identifiable: Preset<D2KeyJsonValue, FieldPresets["identifiable"]>;
        $nameable: Preset<D2KeyJsonValue, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2KeyJsonValue,
            "code" | "lastUpdated" | "id" | "key" | "lastUpdatedBy" | "created" | "sharing" | "createdBy" | "namespace"
        >;
        $owner: Preset<
            D2KeyJsonValue,
            "code" | "lastUpdated" | "id" | "key" | "lastUpdatedBy" | "created" | "sharing" | "createdBy" | "namespace"
        >;
    };
}

export interface D2LegendSchema {
    name: "D2Legend";
    model: D2Legend;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        color: string;
        created: string;
        createdBy: D2UserSchema;
        displayName: string;
        endValue: number;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        href: string;
        id: Id;
        image: string;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        name: string;
        publicAccess: string;
        sharing: any;
        startValue: number;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2Legend, keyof D2Legend>;
        $identifiable: Preset<D2Legend, FieldPresets["identifiable"]>;
        $nameable: Preset<D2Legend, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2Legend,
            | "code"
            | "endValue"
            | "color"
            | "lastUpdated"
            | "translations"
            | "startValue"
            | "id"
            | "lastUpdatedBy"
            | "image"
            | "created"
            | "name"
        >;
        $owner: Preset<
            D2Legend,
            | "code"
            | "endValue"
            | "color"
            | "lastUpdated"
            | "translations"
            | "startValue"
            | "id"
            | "lastUpdatedBy"
            | "image"
            | "created"
            | "name"
        >;
    };
}

export interface D2LegendSetSchema {
    name: "D2LegendSet";
    model: D2LegendSet;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        displayName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        legends: D2LegendSchema[];
        name: string;
        publicAccess: string;
        sharing: any;
        symbolizer: string;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2LegendSet, keyof D2LegendSet>;
        $identifiable: Preset<D2LegendSet, FieldPresets["identifiable"]>;
        $nameable: Preset<D2LegendSet, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2LegendSet,
            | "lastUpdatedBy"
            | "code"
            | "created"
            | "attributeValues"
            | "sharing"
            | "symbolizer"
            | "lastUpdated"
            | "legends"
            | "createdBy"
            | "translations"
            | "name"
            | "id"
        >;
        $owner: Preset<
            D2LegendSet,
            | "lastUpdatedBy"
            | "code"
            | "created"
            | "attributeValues"
            | "sharing"
            | "symbolizer"
            | "lastUpdated"
            | "legends"
            | "createdBy"
            | "translations"
            | "name"
            | "id"
        >;
    };
}

export interface D2MapSchema {
    name: "D2Map";
    model: D2Map;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        basemap: string;
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        description: string;
        displayDescription: string;
        displayFormName: string;
        displayName: string;
        displayShortName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        formName: string;
        href: string;
        id: Id;
        interpretations: D2InterpretationSchema[];
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        latitude: number;
        longitude: number;
        mapViews: D2MapViewSchema[];
        name: string;
        publicAccess: string;
        sharing: any;
        shortName: string;
        subscribed: boolean;
        subscribers: string[];
        title: string;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
        zoom: number;
    };
    fieldPresets: {
        $all: Preset<D2Map, keyof D2Map>;
        $identifiable: Preset<D2Map, FieldPresets["identifiable"]>;
        $nameable: Preset<D2Map, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2Map,
            | "favorites"
            | "code"
            | "basemap"
            | "latitude"
            | "description"
            | "title"
            | "lastUpdated"
            | "translations"
            | "mapViews"
            | "id"
            | "interpretations"
            | "longitude"
            | "lastUpdatedBy"
            | "subscribers"
            | "created"
            | "zoom"
            | "sharing"
            | "createdBy"
            | "name"
        >;
        $owner: Preset<
            D2Map,
            | "favorites"
            | "code"
            | "basemap"
            | "latitude"
            | "description"
            | "title"
            | "lastUpdated"
            | "translations"
            | "mapViews"
            | "id"
            | "longitude"
            | "lastUpdatedBy"
            | "subscribers"
            | "created"
            | "zoom"
            | "sharing"
            | "createdBy"
            | "name"
        >;
    };
}

export interface D2MapViewSchema {
    name: "D2MapView";
    model: D2MapView;
    fields: {
        access: D2Access;
        aggregationType:
            | "SUM"
            | "AVERAGE"
            | "AVERAGE_SUM_ORG_UNIT"
            | "LAST"
            | "LAST_AVERAGE_ORG_UNIT"
            | "LAST_IN_PERIOD"
            | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
            | "FIRST"
            | "FIRST_AVERAGE_ORG_UNIT"
            | "COUNT"
            | "STDDEV"
            | "VARIANCE"
            | "MIN"
            | "MAX"
            | "NONE"
            | "CUSTOM"
            | "DEFAULT";
        areaRadius: number;
        attributeDimensions: any[];
        attributeValues: D2AttributeValueSchema[];
        categoryDimensions: D2CategoryDimensionSchema[];
        categoryOptionGroupSetDimensions: D2CategoryOptionGroupSetDimensionSchema[];
        classes: number;
        code: Id;
        colorHigh: string;
        colorLow: string;
        colorScale: string;
        columnDimensions: string[];
        columns: any[];
        completedOnly: boolean;
        config: string;
        created: string;
        createdBy: D2UserSchema;
        dataDimensionItems: any[];
        dataElementDimensions: D2TrackedEntityDataElementDimensionSchema[];
        dataElementGroupSetDimensions: D2DataElementGroupSetDimensionSchema[];
        description: string;
        digitGroupSeparator: "COMMA" | "SPACE" | "NONE";
        displayDescription: string;
        displayFormName: string;
        displayName: string;
        displayShortName: string;
        displaySubtitle: string;
        displayTitle: string;
        endDate: string;
        eventClustering: boolean;
        eventCoordinateField: string;
        eventPointColor: string;
        eventPointRadius: number;
        eventStatus: "ACTIVE" | "COMPLETED" | "SCHEDULE" | "OVERDUE" | "SKIPPED";
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        filterDimensions: string[];
        filters: any[];
        followUp: boolean;
        formName: string;
        hidden: boolean;
        hideSubtitle: boolean;
        hideTitle: boolean;
        href: string;
        id: Id;
        interpretations: D2InterpretationSchema[];
        itemOrganisationUnitGroups: D2OrganisationUnitGroupSchema[];
        labelFontColor: string;
        labelFontSize: string;
        labelFontStyle: string;
        labelFontWeight: string;
        labels: boolean;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        layer: string;
        legendSet: D2LegendSetSchema;
        method: number;
        name: string;
        noDataColor: string;
        opacity: number;
        orgUnitField: string;
        organisationUnitGroupSet: D2OrganisationUnitGroupSetSchema;
        organisationUnitGroupSetDimensions: D2OrganisationUnitGroupSetDimensionSchema[];
        organisationUnitLevels: number[];
        organisationUnitSelectionMode: "SELECTED" | "CHILDREN" | "DESCENDANTS" | "ACCESSIBLE" | "CAPTURE" | "ALL";
        organisationUnits: D2OrganisationUnitSchema[];
        parentGraph: string;
        parentGraphMap: D2MapSchema;
        parentLevel: number;
        periods: any[];
        program: D2ProgramSchema;
        programIndicatorDimensions: D2TrackedEntityProgramIndicatorDimensionSchema[];
        programStage: D2ProgramStageSchema;
        programStatus: "ACTIVE" | "COMPLETED" | "CANCELLED";
        publicAccess: string;
        radiusHigh: number;
        radiusLow: number;
        relativePeriods: any;
        renderingStrategy: "SINGLE" | "SPLIT_BY_PERIOD" | "TIMELINE";
        rows: any[];
        sharing: any;
        shortName: string;
        sortOrder: number;
        startDate: string;
        styleDataItem: object;
        subscribed: boolean;
        subscribers: string[];
        subtitle: string;
        thematicMapType: "CHOROPLETH" | "BUBBLE";
        timeField: string;
        title: string;
        topLimit: number;
        trackedEntityType: D2TrackedEntityTypeSchema;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
        userOrgUnitType: "DATA_CAPTURE" | "DATA_OUTPUT" | "TEI_SEARCH";
        userOrganisationUnit: boolean;
        userOrganisationUnitChildren: boolean;
        userOrganisationUnitGrandChildren: boolean;
    };
    fieldPresets: {
        $all: Preset<D2MapView, keyof D2MapView>;
        $identifiable: Preset<D2MapView, FieldPresets["identifiable"]>;
        $nameable: Preset<D2MapView, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2MapView,
            | "endDate"
            | "userOrganisationUnitChildren"
            | "program"
            | "lastUpdated"
            | "attributeDimensions"
            | "translations"
            | "eventCoordinateField"
            | "userOrganisationUnit"
            | "organisationUnitSelectionMode"
            | "filterDimensions"
            | "id"
            | "method"
            | "renderingStrategy"
            | "labels"
            | "startDate"
            | "noDataColor"
            | "userOrganisationUnitGrandChildren"
            | "styleDataItem"
            | "labelFontColor"
            | "layer"
            | "dataElementDimensions"
            | "periods"
            | "categoryDimensions"
            | "labelFontStyle"
            | "radiusHigh"
            | "eventClustering"
            | "colorLow"
            | "eventStatus"
            | "opacity"
            | "config"
            | "colorScale"
            | "itemOrganisationUnitGroups"
            | "lastUpdatedBy"
            | "labelFontSize"
            | "created"
            | "columnDimensions"
            | "colorHigh"
            | "eventPointRadius"
            | "areaRadius"
            | "programStatus"
            | "aggregationType"
            | "dataDimensionItems"
            | "code"
            | "categoryOptionGroupSetDimensions"
            | "hidden"
            | "thematicMapType"
            | "classes"
            | "description"
            | "organisationUnitGroupSetDimensions"
            | "organisationUnitLevels"
            | "organisationUnitGroupSet"
            | "followUp"
            | "relativePeriods"
            | "organisationUnits"
            | "eventPointColor"
            | "programStage"
            | "labelFontWeight"
            | "radiusLow"
            | "trackedEntityType"
            | "legendSet"
            | "userOrgUnitType"
        >;
        $owner: Preset<
            D2MapView,
            | "endDate"
            | "userOrganisationUnitChildren"
            | "program"
            | "lastUpdated"
            | "attributeDimensions"
            | "translations"
            | "eventCoordinateField"
            | "userOrganisationUnit"
            | "organisationUnitSelectionMode"
            | "filterDimensions"
            | "id"
            | "method"
            | "renderingStrategy"
            | "labels"
            | "startDate"
            | "noDataColor"
            | "userOrganisationUnitGrandChildren"
            | "styleDataItem"
            | "labelFontColor"
            | "layer"
            | "dataElementDimensions"
            | "periods"
            | "categoryDimensions"
            | "labelFontStyle"
            | "radiusHigh"
            | "eventClustering"
            | "colorLow"
            | "eventStatus"
            | "opacity"
            | "config"
            | "colorScale"
            | "itemOrganisationUnitGroups"
            | "lastUpdatedBy"
            | "labelFontSize"
            | "created"
            | "columnDimensions"
            | "colorHigh"
            | "eventPointRadius"
            | "areaRadius"
            | "programStatus"
            | "aggregationType"
            | "dataDimensionItems"
            | "code"
            | "categoryOptionGroupSetDimensions"
            | "hidden"
            | "thematicMapType"
            | "classes"
            | "description"
            | "organisationUnitGroupSetDimensions"
            | "organisationUnitLevels"
            | "organisationUnitGroupSet"
            | "followUp"
            | "relativePeriods"
            | "organisationUnits"
            | "eventPointColor"
            | "programStage"
            | "labelFontWeight"
            | "radiusLow"
            | "trackedEntityType"
            | "legendSet"
            | "userOrgUnitType"
        >;
    };
}

export interface D2MessageConversationSchema {
    name: "D2MessageConversation";
    model: D2MessageConversation;
    fields: {
        access: D2Access;
        assignee: D2UserSchema;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        displayName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        followUp: boolean;
        href: string;
        id: Id;
        lastMessage: string;
        lastSender: D2UserSchema;
        lastSenderFirstname: string;
        lastSenderSurname: string;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        messageCount: number;
        messageType: "PRIVATE" | "SYSTEM" | "VALIDATION_RESULT" | "TICKET";
        messages: any[];
        name: string;
        priority: "NONE" | "LOW" | "MEDIUM" | "HIGH";
        publicAccess: string;
        read: boolean;
        sharing: any;
        status: "NONE" | "OPEN" | "PENDING" | "INVALID" | "SOLVED";
        subject: string;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userFirstname: string;
        userGroupAccesses: D2UserGroupAccessSchema[];
        userMessages: any[];
        userSurname: string;
    };
    fieldPresets: {
        $all: Preset<D2MessageConversation, keyof D2MessageConversation>;
        $identifiable: Preset<D2MessageConversation, FieldPresets["identifiable"]>;
        $nameable: Preset<D2MessageConversation, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2MessageConversation,
            | "messageCount"
            | "subject"
            | "lastUpdated"
            | "messageType"
            | "userMessages"
            | "id"
            | "lastSender"
            | "created"
            | "lastMessage"
            | "priority"
            | "createdBy"
            | "messages"
            | "assignee"
            | "status"
        >;
        $owner: Preset<
            D2MessageConversation,
            | "messageCount"
            | "subject"
            | "lastUpdated"
            | "messageType"
            | "userMessages"
            | "id"
            | "lastSender"
            | "created"
            | "lastMessage"
            | "priority"
            | "createdBy"
            | "messages"
            | "assignee"
            | "status"
        >;
    };
}

export interface D2MetadataVersionSchema {
    name: "D2MetadataVersion";
    model: D2MetadataVersion;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        displayName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        hashCode: string;
        href: string;
        id: Id;
        importDate: string;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        name: string;
        publicAccess: string;
        sharing: any;
        translations: D2Translation[];
        type: "BEST_EFFORT" | "ATOMIC";
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2MetadataVersion, keyof D2MetadataVersion>;
        $identifiable: Preset<D2MetadataVersion, FieldPresets["identifiable"]>;
        $nameable: Preset<D2MetadataVersion, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2MetadataVersion,
            "code" | "type" | "lastUpdated" | "importDate" | "hashCode" | "id" | "lastUpdatedBy" | "created" | "name"
        >;
        $owner: Preset<
            D2MetadataVersion,
            "code" | "type" | "lastUpdated" | "importDate" | "hashCode" | "id" | "lastUpdatedBy" | "created" | "name"
        >;
    };
}

export interface D2MinMaxDataElementSchema {
    name: "D2MinMaxDataElement";
    model: D2MinMaxDataElement;
    fields: {
        dataElement: D2DataElementSchema;
        generated: boolean;
        max: number;
        min: number;
        optionCombo: D2CategoryOptionComboSchema;
        source: D2OrganisationUnitSchema;
    };
    fieldPresets: {
        $all: Preset<D2MinMaxDataElement, keyof D2MinMaxDataElement>;
        $identifiable: Preset<D2MinMaxDataElement, FieldPresets["identifiable"]>;
        $nameable: Preset<D2MinMaxDataElement, FieldPresets["nameable"]>;
        $persisted: Preset<D2MinMaxDataElement, "min" | "generated" | "max" | "dataElement" | "source" | "optionCombo">;
        $owner: Preset<D2MinMaxDataElement, "min" | "generated" | "max" | "dataElement" | "source" | "optionCombo">;
    };
}

export interface D2OAuth2ClientSchema {
    name: "D2OAuth2Client";
    model: D2OAuth2Client;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        cid: Id;
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        displayName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        grantTypes: string[];
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        name: string;
        publicAccess: string;
        redirectUris: string[];
        secret: string;
        sharing: any;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2OAuth2Client, keyof D2OAuth2Client>;
        $identifiable: Preset<D2OAuth2Client, FieldPresets["identifiable"]>;
        $nameable: Preset<D2OAuth2Client, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2OAuth2Client,
            | "code"
            | "secret"
            | "lastUpdated"
            | "id"
            | "lastUpdatedBy"
            | "created"
            | "redirectUris"
            | "grantTypes"
            | "name"
            | "cid"
        >;
        $owner: Preset<
            D2OAuth2Client,
            | "code"
            | "secret"
            | "lastUpdated"
            | "id"
            | "lastUpdatedBy"
            | "created"
            | "redirectUris"
            | "grantTypes"
            | "name"
            | "cid"
        >;
    };
}

export interface D2OptionSchema {
    name: "D2Option";
    model: D2Option;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        code: string;
        created: string;
        createdBy: D2UserSchema;
        description: string;
        displayDescription: string;
        displayFormName: string;
        displayName: string;
        displayShortName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        formName: string;
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        name: string;
        optionSet: D2OptionSetSchema;
        publicAccess: string;
        sharing: any;
        shortName: string;
        sortOrder: number;
        style: D2Style;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2Option, keyof D2Option>;
        $identifiable: Preset<D2Option, FieldPresets["identifiable"]>;
        $nameable: Preset<D2Option, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2Option,
            | "code"
            | "description"
            | "lastUpdated"
            | "optionSet"
            | "translations"
            | "formName"
            | "id"
            | "created"
            | "attributeValues"
            | "sortOrder"
            | "name"
            | "style"
        >;
        $owner: Preset<
            D2Option,
            | "code"
            | "description"
            | "lastUpdated"
            | "optionSet"
            | "translations"
            | "formName"
            | "id"
            | "created"
            | "attributeValues"
            | "sortOrder"
            | "name"
            | "style"
        >;
    };
}

export interface D2OptionGroupSchema {
    name: "D2OptionGroup";
    model: D2OptionGroup;
    fields: {
        access: D2Access;
        aggregationType:
            | "SUM"
            | "AVERAGE"
            | "AVERAGE_SUM_ORG_UNIT"
            | "LAST"
            | "LAST_AVERAGE_ORG_UNIT"
            | "LAST_IN_PERIOD"
            | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
            | "FIRST"
            | "FIRST_AVERAGE_ORG_UNIT"
            | "COUNT"
            | "STDDEV"
            | "VARIANCE"
            | "MIN"
            | "MAX"
            | "NONE"
            | "CUSTOM"
            | "DEFAULT";
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        description: string;
        dimensionItem: string;
        dimensionItemType:
            | "DATA_ELEMENT"
            | "DATA_ELEMENT_OPERAND"
            | "INDICATOR"
            | "REPORTING_RATE"
            | "PROGRAM_DATA_ELEMENT"
            | "PROGRAM_ATTRIBUTE"
            | "PROGRAM_INDICATOR"
            | "PERIOD"
            | "ORGANISATION_UNIT"
            | "CATEGORY_OPTION"
            | "OPTION_GROUP"
            | "DATA_ELEMENT_GROUP"
            | "ORGANISATION_UNIT_GROUP"
            | "CATEGORY_OPTION_GROUP";
        displayDescription: string;
        displayFormName: string;
        displayName: string;
        displayShortName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        formName: string;
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        legendSet: D2LegendSetSchema;
        legendSets: D2LegendSetSchema[];
        name: string;
        optionSet: D2OptionSetSchema;
        options: D2OptionSchema[];
        periodOffset: number;
        publicAccess: string;
        sharing: any;
        shortName: string;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2OptionGroup, keyof D2OptionGroup>;
        $identifiable: Preset<D2OptionGroup, FieldPresets["identifiable"]>;
        $nameable: Preset<D2OptionGroup, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2OptionGroup,
            | "code"
            | "lastUpdated"
            | "optionSet"
            | "translations"
            | "options"
            | "id"
            | "lastUpdatedBy"
            | "created"
            | "sharing"
            | "createdBy"
            | "name"
            | "shortName"
        >;
        $owner: Preset<
            D2OptionGroup,
            | "code"
            | "lastUpdated"
            | "optionSet"
            | "translations"
            | "options"
            | "id"
            | "lastUpdatedBy"
            | "created"
            | "sharing"
            | "createdBy"
            | "name"
            | "shortName"
        >;
    };
}

export interface D2OptionGroupSetSchema {
    name: "D2OptionGroupSet";
    model: D2OptionGroupSet;
    fields: {
        access: D2Access;
        aggregationType:
            | "SUM"
            | "AVERAGE"
            | "AVERAGE_SUM_ORG_UNIT"
            | "LAST"
            | "LAST_AVERAGE_ORG_UNIT"
            | "LAST_IN_PERIOD"
            | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
            | "FIRST"
            | "FIRST_AVERAGE_ORG_UNIT"
            | "COUNT"
            | "STDDEV"
            | "VARIANCE"
            | "MIN"
            | "MAX"
            | "NONE"
            | "CUSTOM"
            | "DEFAULT";
        allItems: boolean;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        dataDimension: boolean;
        dataDimensionType: "DISAGGREGATION" | "ATTRIBUTE";
        description: string;
        dimension: string;
        dimensionType:
            | "DATA_X"
            | "PROGRAM_DATA_ELEMENT"
            | "PROGRAM_ATTRIBUTE"
            | "PROGRAM_INDICATOR"
            | "DATA_COLLAPSED"
            | "CATEGORY_OPTION_COMBO"
            | "ATTRIBUTE_OPTION_COMBO"
            | "PERIOD"
            | "ORGANISATION_UNIT"
            | "CATEGORY_OPTION_GROUP_SET"
            | "DATA_ELEMENT_GROUP_SET"
            | "ORGANISATION_UNIT_GROUP_SET"
            | "ORGANISATION_UNIT_GROUP"
            | "CATEGORY"
            | "OPTION_GROUP_SET"
            | "VALIDATION_RULE"
            | "STATIC"
            | "ORGANISATION_UNIT_LEVEL";
        dimensionalKeywords: D2DimensionalKeywords;
        displayDescription: string;
        displayFormName: string;
        displayName: string;
        displayShortName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        filter: string;
        formName: string;
        href: string;
        id: Id;
        items: any[];
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        legendSet: D2LegendSetSchema;
        name: string;
        optionGroups: D2OptionGroupSchema[];
        optionSet: D2OptionSetSchema;
        programStage: D2ProgramStageSchema;
        publicAccess: string;
        sharing: any;
        shortName: string;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2OptionGroupSet, keyof D2OptionGroupSet>;
        $identifiable: Preset<D2OptionGroupSet, FieldPresets["identifiable"]>;
        $nameable: Preset<D2OptionGroupSet, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2OptionGroupSet,
            | "code"
            | "description"
            | "optionGroups"
            | "lastUpdated"
            | "optionSet"
            | "translations"
            | "id"
            | "lastUpdatedBy"
            | "created"
            | "sharing"
            | "createdBy"
            | "name"
            | "dataDimension"
        >;
        $owner: Preset<
            D2OptionGroupSet,
            | "code"
            | "description"
            | "optionGroups"
            | "lastUpdated"
            | "optionSet"
            | "translations"
            | "id"
            | "lastUpdatedBy"
            | "created"
            | "sharing"
            | "createdBy"
            | "name"
            | "dataDimension"
        >;
    };
}

export interface D2OptionSetSchema {
    name: "D2OptionSet";
    model: D2OptionSet;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        displayName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        name: string;
        options: D2OptionSchema[];
        publicAccess: string;
        sharing: any;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
        valueType:
            | "TEXT"
            | "LONG_TEXT"
            | "LETTER"
            | "PHONE_NUMBER"
            | "EMAIL"
            | "BOOLEAN"
            | "TRUE_ONLY"
            | "DATE"
            | "DATETIME"
            | "TIME"
            | "NUMBER"
            | "UNIT_INTERVAL"
            | "PERCENTAGE"
            | "INTEGER"
            | "INTEGER_POSITIVE"
            | "INTEGER_NEGATIVE"
            | "INTEGER_ZERO_OR_POSITIVE"
            | "TRACKER_ASSOCIATE"
            | "USERNAME"
            | "COORDINATE"
            | "ORGANISATION_UNIT"
            | "AGE"
            | "URL"
            | "FILE_RESOURCE"
            | "IMAGE";
        version: number;
    };
    fieldPresets: {
        $all: Preset<D2OptionSet, keyof D2OptionSet>;
        $identifiable: Preset<D2OptionSet, FieldPresets["identifiable"]>;
        $nameable: Preset<D2OptionSet, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2OptionSet,
            | "code"
            | "lastUpdated"
            | "translations"
            | "valueType"
            | "options"
            | "id"
            | "lastUpdatedBy"
            | "created"
            | "attributeValues"
            | "sharing"
            | "version"
            | "createdBy"
            | "name"
        >;
        $owner: Preset<
            D2OptionSet,
            | "code"
            | "lastUpdated"
            | "translations"
            | "valueType"
            | "options"
            | "id"
            | "lastUpdatedBy"
            | "created"
            | "attributeValues"
            | "sharing"
            | "version"
            | "createdBy"
            | "name"
        >;
    };
}

export interface D2OrganisationUnitSchema {
    name: "D2OrganisationUnit";
    model: D2OrganisationUnit;
    fields: {
        access: D2Access;
        address: string;
        aggregationType:
            | "SUM"
            | "AVERAGE"
            | "AVERAGE_SUM_ORG_UNIT"
            | "LAST"
            | "LAST_AVERAGE_ORG_UNIT"
            | "LAST_IN_PERIOD"
            | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
            | "FIRST"
            | "FIRST_AVERAGE_ORG_UNIT"
            | "COUNT"
            | "STDDEV"
            | "VARIANCE"
            | "MIN"
            | "MAX"
            | "NONE"
            | "CUSTOM"
            | "DEFAULT";
        ancestors: D2OrganisationUnitSchema[];
        attributeValues: D2AttributeValueSchema[];
        children: D2OrganisationUnitSchema[];
        closedDate: string;
        code: Id;
        comment: string;
        contactPerson: string;
        created: string;
        createdBy: D2UserSchema;
        dataSets: D2DataSetSchema[];
        description: string;
        dimensionItem: string;
        dimensionItemType:
            | "DATA_ELEMENT"
            | "DATA_ELEMENT_OPERAND"
            | "INDICATOR"
            | "REPORTING_RATE"
            | "PROGRAM_DATA_ELEMENT"
            | "PROGRAM_ATTRIBUTE"
            | "PROGRAM_INDICATOR"
            | "PERIOD"
            | "ORGANISATION_UNIT"
            | "CATEGORY_OPTION"
            | "OPTION_GROUP"
            | "DATA_ELEMENT_GROUP"
            | "ORGANISATION_UNIT_GROUP"
            | "CATEGORY_OPTION_GROUP";
        displayDescription: string;
        displayFormName: string;
        displayName: string;
        displayShortName: string;
        email: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        formName: string;
        geometry: any;
        href: string;
        id: Id;
        image: D2FileResourceSchema;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        leaf: boolean;
        legendSet: D2LegendSetSchema;
        legendSets: D2LegendSetSchema[];
        level: string;
        memberCount: number;
        name: string;
        openingDate: string;
        organisationUnitGroups: D2OrganisationUnitGroupSchema[];
        parent: D2OrganisationUnitSchema;
        path: string;
        periodOffset: number;
        phoneNumber: string;
        programs: D2ProgramSchema[];
        publicAccess: string;
        sharing: any;
        shortName: string;
        translations: D2Translation[];
        type: string;
        url: string;
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
        users: D2UserSchema[];
    };
    fieldPresets: {
        $all: Preset<D2OrganisationUnit, keyof D2OrganisationUnit>;
        $identifiable: Preset<D2OrganisationUnit, FieldPresets["identifiable"]>;
        $nameable: Preset<D2OrganisationUnit, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2OrganisationUnit,
            | "parent"
            | "path"
            | "lastUpdated"
            | "children"
            | "translations"
            | "id"
            | "organisationUnitGroups"
            | "image"
            | "lastUpdatedBy"
            | "level"
            | "created"
            | "attributeValues"
            | "users"
            | "phoneNumber"
            | "name"
            | "dataSets"
            | "programs"
            | "shortName"
            | "code"
            | "description"
            | "contactPerson"
            | "openingDate"
            | "email"
            | "address"
            | "url"
            | "closedDate"
            | "createdBy"
            | "geometry"
            | "comment"
        >;
        $owner: Preset<
            D2OrganisationUnit,
            | "parent"
            | "path"
            | "lastUpdated"
            | "translations"
            | "id"
            | "image"
            | "lastUpdatedBy"
            | "level"
            | "created"
            | "attributeValues"
            | "phoneNumber"
            | "name"
            | "shortName"
            | "code"
            | "description"
            | "contactPerson"
            | "openingDate"
            | "email"
            | "address"
            | "url"
            | "closedDate"
            | "createdBy"
            | "geometry"
            | "comment"
        >;
    };
}

export interface D2OrganisationUnitGroupSchema {
    name: "D2OrganisationUnitGroup";
    model: D2OrganisationUnitGroup;
    fields: {
        access: D2Access;
        aggregationType:
            | "SUM"
            | "AVERAGE"
            | "AVERAGE_SUM_ORG_UNIT"
            | "LAST"
            | "LAST_AVERAGE_ORG_UNIT"
            | "LAST_IN_PERIOD"
            | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
            | "FIRST"
            | "FIRST_AVERAGE_ORG_UNIT"
            | "COUNT"
            | "STDDEV"
            | "VARIANCE"
            | "MIN"
            | "MAX"
            | "NONE"
            | "CUSTOM"
            | "DEFAULT";
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        color: string;
        created: string;
        createdBy: D2UserSchema;
        description: string;
        dimensionItem: string;
        dimensionItemType:
            | "DATA_ELEMENT"
            | "DATA_ELEMENT_OPERAND"
            | "INDICATOR"
            | "REPORTING_RATE"
            | "PROGRAM_DATA_ELEMENT"
            | "PROGRAM_ATTRIBUTE"
            | "PROGRAM_INDICATOR"
            | "PERIOD"
            | "ORGANISATION_UNIT"
            | "CATEGORY_OPTION"
            | "OPTION_GROUP"
            | "DATA_ELEMENT_GROUP"
            | "ORGANISATION_UNIT_GROUP"
            | "CATEGORY_OPTION_GROUP";
        displayDescription: string;
        displayFormName: string;
        displayName: string;
        displayShortName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        featureType: "NONE" | "MULTI_POLYGON" | "POLYGON" | "POINT" | "SYMBOL";
        formName: string;
        geometry: any;
        groupSets: D2OrganisationUnitGroupSetSchema[];
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        legendSet: D2LegendSetSchema;
        legendSets: D2LegendSetSchema[];
        name: string;
        organisationUnits: D2OrganisationUnitSchema[];
        periodOffset: number;
        publicAccess: string;
        sharing: any;
        shortName: string;
        symbol: string;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2OrganisationUnitGroup, keyof D2OrganisationUnitGroup>;
        $identifiable: Preset<D2OrganisationUnitGroup, FieldPresets["identifiable"]>;
        $nameable: Preset<D2OrganisationUnitGroup, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2OrganisationUnitGroup,
            | "symbol"
            | "code"
            | "color"
            | "lastUpdated"
            | "translations"
            | "id"
            | "organisationUnits"
            | "lastUpdatedBy"
            | "created"
            | "attributeValues"
            | "groupSets"
            | "sharing"
            | "createdBy"
            | "name"
            | "geometry"
            | "shortName"
        >;
        $owner: Preset<
            D2OrganisationUnitGroup,
            | "symbol"
            | "code"
            | "color"
            | "lastUpdated"
            | "translations"
            | "id"
            | "organisationUnits"
            | "lastUpdatedBy"
            | "created"
            | "attributeValues"
            | "sharing"
            | "createdBy"
            | "name"
            | "geometry"
            | "shortName"
        >;
    };
}

export interface D2OrganisationUnitGroupSetSchema {
    name: "D2OrganisationUnitGroupSet";
    model: D2OrganisationUnitGroupSet;
    fields: {
        access: D2Access;
        aggregationType:
            | "SUM"
            | "AVERAGE"
            | "AVERAGE_SUM_ORG_UNIT"
            | "LAST"
            | "LAST_AVERAGE_ORG_UNIT"
            | "LAST_IN_PERIOD"
            | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
            | "FIRST"
            | "FIRST_AVERAGE_ORG_UNIT"
            | "COUNT"
            | "STDDEV"
            | "VARIANCE"
            | "MIN"
            | "MAX"
            | "NONE"
            | "CUSTOM"
            | "DEFAULT";
        allItems: boolean;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        compulsory: boolean;
        created: string;
        createdBy: D2UserSchema;
        dataDimension: boolean;
        dataDimensionType: "DISAGGREGATION" | "ATTRIBUTE";
        description: string;
        dimension: string;
        dimensionType:
            | "DATA_X"
            | "PROGRAM_DATA_ELEMENT"
            | "PROGRAM_ATTRIBUTE"
            | "PROGRAM_INDICATOR"
            | "DATA_COLLAPSED"
            | "CATEGORY_OPTION_COMBO"
            | "ATTRIBUTE_OPTION_COMBO"
            | "PERIOD"
            | "ORGANISATION_UNIT"
            | "CATEGORY_OPTION_GROUP_SET"
            | "DATA_ELEMENT_GROUP_SET"
            | "ORGANISATION_UNIT_GROUP_SET"
            | "ORGANISATION_UNIT_GROUP"
            | "CATEGORY"
            | "OPTION_GROUP_SET"
            | "VALIDATION_RULE"
            | "STATIC"
            | "ORGANISATION_UNIT_LEVEL";
        dimensionalKeywords: D2DimensionalKeywords;
        displayDescription: string;
        displayFormName: string;
        displayName: string;
        displayShortName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        filter: string;
        formName: string;
        href: string;
        id: Id;
        includeSubhierarchyInAnalytics: boolean;
        items: any[];
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        legendSet: D2LegendSetSchema;
        name: string;
        organisationUnitGroups: D2OrganisationUnitGroupSchema[];
        programStage: D2ProgramStageSchema;
        publicAccess: string;
        sharing: any;
        shortName: string;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2OrganisationUnitGroupSet, keyof D2OrganisationUnitGroupSet>;
        $identifiable: Preset<D2OrganisationUnitGroupSet, FieldPresets["identifiable"]>;
        $nameable: Preset<D2OrganisationUnitGroupSet, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2OrganisationUnitGroupSet,
            | "code"
            | "description"
            | "lastUpdated"
            | "translations"
            | "id"
            | "organisationUnitGroups"
            | "lastUpdatedBy"
            | "created"
            | "attributeValues"
            | "sharing"
            | "compulsory"
            | "createdBy"
            | "includeSubhierarchyInAnalytics"
            | "name"
            | "dataDimension"
            | "shortName"
        >;
        $owner: Preset<
            D2OrganisationUnitGroupSet,
            | "code"
            | "description"
            | "lastUpdated"
            | "translations"
            | "id"
            | "organisationUnitGroups"
            | "lastUpdatedBy"
            | "created"
            | "attributeValues"
            | "sharing"
            | "compulsory"
            | "createdBy"
            | "includeSubhierarchyInAnalytics"
            | "name"
            | "dataDimension"
            | "shortName"
        >;
    };
}

export interface D2OrganisationUnitGroupSetDimensionSchema {
    name: "D2OrganisationUnitGroupSetDimension";
    model: D2OrganisationUnitGroupSetDimension;
    fields: {
        organisationUnitGroupSet: D2OrganisationUnitGroupSetSchema;
        organisationUnitGroups: any;
    };
    fieldPresets: {
        $all: Preset<D2OrganisationUnitGroupSetDimension, keyof D2OrganisationUnitGroupSetDimension>;
        $identifiable: Preset<D2OrganisationUnitGroupSetDimension, FieldPresets["identifiable"]>;
        $nameable: Preset<D2OrganisationUnitGroupSetDimension, FieldPresets["nameable"]>;
        $persisted: Preset<D2OrganisationUnitGroupSetDimension, "organisationUnitGroupSet" | "organisationUnitGroups">;
        $owner: Preset<D2OrganisationUnitGroupSetDimension, "organisationUnitGroupSet" | "organisationUnitGroups">;
    };
}

export interface D2OrganisationUnitLevelSchema {
    name: "D2OrganisationUnitLevel";
    model: D2OrganisationUnitLevel;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        displayName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        level: number;
        name: string;
        offlineLevels: number;
        publicAccess: string;
        sharing: any;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2OrganisationUnitLevel, keyof D2OrganisationUnitLevel>;
        $identifiable: Preset<D2OrganisationUnitLevel, FieldPresets["identifiable"]>;
        $nameable: Preset<D2OrganisationUnitLevel, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2OrganisationUnitLevel,
            | "lastUpdatedBy"
            | "offlineLevels"
            | "code"
            | "level"
            | "created"
            | "lastUpdated"
            | "translations"
            | "name"
            | "id"
        >;
        $owner: Preset<
            D2OrganisationUnitLevel,
            | "lastUpdatedBy"
            | "offlineLevels"
            | "code"
            | "level"
            | "created"
            | "lastUpdated"
            | "translations"
            | "name"
            | "id"
        >;
    };
}

export interface D2PredictorSchema {
    name: "D2Predictor";
    model: D2Predictor;
    fields: {
        access: D2Access;
        annualSampleCount: number;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        description: string;
        displayDescription: string;
        displayFormName: string;
        displayName: string;
        displayShortName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        formName: string;
        generator: D2ExpressionSchema;
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        name: string;
        organisationUnitLevels: D2OrganisationUnitLevelSchema[];
        output: D2DataElementSchema;
        outputCombo: D2CategoryOptionComboSchema;
        periodType: string;
        predictorGroups: D2PredictorGroupSchema[];
        publicAccess: string;
        sampleSkipTest: D2ExpressionSchema;
        sequentialSampleCount: number;
        sequentialSkipCount: number;
        sharing: any;
        shortName: string;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2Predictor, keyof D2Predictor>;
        $identifiable: Preset<D2Predictor, FieldPresets["identifiable"]>;
        $nameable: Preset<D2Predictor, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2Predictor,
            | "outputCombo"
            | "code"
            | "description"
            | "generator"
            | "organisationUnitLevels"
            | "output"
            | "lastUpdated"
            | "sampleSkipTest"
            | "id"
            | "sequentialSampleCount"
            | "annualSampleCount"
            | "lastUpdatedBy"
            | "created"
            | "sequentialSkipCount"
            | "predictorGroups"
            | "periodType"
            | "name"
        >;
        $owner: Preset<
            D2Predictor,
            | "outputCombo"
            | "code"
            | "description"
            | "generator"
            | "organisationUnitLevels"
            | "output"
            | "lastUpdated"
            | "sampleSkipTest"
            | "id"
            | "sequentialSampleCount"
            | "annualSampleCount"
            | "lastUpdatedBy"
            | "created"
            | "sequentialSkipCount"
            | "periodType"
            | "name"
        >;
    };
}

export interface D2PredictorGroupSchema {
    name: "D2PredictorGroup";
    model: D2PredictorGroup;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        description: string;
        displayName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        name: string;
        predictors: D2PredictorSchema[];
        publicAccess: string;
        sharing: any;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2PredictorGroup, keyof D2PredictorGroup>;
        $identifiable: Preset<D2PredictorGroup, FieldPresets["identifiable"]>;
        $nameable: Preset<D2PredictorGroup, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2PredictorGroup,
            | "predictors"
            | "lastUpdatedBy"
            | "code"
            | "created"
            | "description"
            | "sharing"
            | "lastUpdated"
            | "createdBy"
            | "translations"
            | "name"
            | "id"
        >;
        $owner: Preset<
            D2PredictorGroup,
            | "predictors"
            | "lastUpdatedBy"
            | "code"
            | "created"
            | "description"
            | "sharing"
            | "lastUpdated"
            | "createdBy"
            | "translations"
            | "name"
            | "id"
        >;
    };
}

export interface D2ProgramSchema {
    name: "D2Program";
    model: D2Program;
    fields: {
        access: D2Access;
        accessLevel: "OPEN" | "AUDITED" | "PROTECTED" | "CLOSED";
        attributeValues: D2AttributeValueSchema[];
        categoryCombo: D2CategoryComboSchema;
        code: Id;
        completeEventsExpiryDays: number;
        created: string;
        createdBy: D2UserSchema;
        dataEntryForm: D2DataEntryFormSchema;
        description: string;
        displayDescription: string;
        displayEnrollmentDateLabel: string;
        displayFormName: string;
        displayFrontPageList: boolean;
        displayIncidentDate: boolean;
        displayIncidentDateLabel: string;
        displayName: string;
        displayShortName: string;
        enrollmentDateLabel: string;
        expiryDays: number;
        expiryPeriodType: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        featureType: "NONE" | "MULTI_POLYGON" | "POLYGON" | "POINT" | "SYMBOL";
        formName: string;
        href: string;
        id: Id;
        ignoreOverdueEvents: boolean;
        incidentDateLabel: string;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        maxTeiCountToReturn: number;
        minAttributesRequiredToSearch: number;
        name: string;
        notificationTemplates: D2ProgramNotificationTemplateSchema[];
        onlyEnrollOnce: boolean;
        organisationUnits: D2OrganisationUnitSchema[];
        programIndicators: D2ProgramIndicatorSchema[];
        programRuleVariables: D2ProgramRuleVariableSchema[];
        programSections: D2ProgramSectionSchema[];
        programStages: D2ProgramStageSchema[];
        programTrackedEntityAttributes: D2ProgramTrackedEntityAttributeSchema[];
        programType: "WITH_REGISTRATION" | "WITHOUT_REGISTRATION";
        publicAccess: string;
        registration: boolean;
        relatedProgram: D2ProgramSchema;
        selectEnrollmentDatesInFuture: boolean;
        selectIncidentDatesInFuture: boolean;
        sharing: any;
        shortName: string;
        skipOffline: boolean;
        style: D2Style;
        trackedEntityType: D2TrackedEntityTypeSchema;
        translations: D2Translation[];
        useFirstStageDuringRegistration: boolean;
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
        userRoles: D2UserAuthorityGroupSchema[];
        version: number;
        withoutRegistration: boolean;
    };
    fieldPresets: {
        $all: Preset<D2Program, keyof D2Program>;
        $identifiable: Preset<D2Program, FieldPresets["identifiable"]>;
        $nameable: Preset<D2Program, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2Program,
            | "dataEntryForm"
            | "ignoreOverdueEvents"
            | "skipOffline"
            | "programIndicators"
            | "lastUpdated"
            | "categoryCombo"
            | "translations"
            | "id"
            | "enrollmentDateLabel"
            | "lastUpdatedBy"
            | "onlyEnrollOnce"
            | "created"
            | "attributeValues"
            | "sharing"
            | "version"
            | "maxTeiCountToReturn"
            | "selectIncidentDatesInFuture"
            | "incidentDateLabel"
            | "userRoles"
            | "expiryPeriodType"
            | "name"
            | "selectEnrollmentDatesInFuture"
            | "style"
            | "shortName"
            | "useFirstStageDuringRegistration"
            | "code"
            | "programRuleVariables"
            | "programTrackedEntityAttributes"
            | "completeEventsExpiryDays"
            | "description"
            | "relatedProgram"
            | "notificationTemplates"
            | "formName"
            | "featureType"
            | "minAttributesRequiredToSearch"
            | "displayFrontPageList"
            | "organisationUnits"
            | "programType"
            | "accessLevel"
            | "programSections"
            | "programStages"
            | "createdBy"
            | "trackedEntityType"
            | "displayIncidentDate"
            | "expiryDays"
        >;
        $owner: Preset<
            D2Program,
            | "dataEntryForm"
            | "ignoreOverdueEvents"
            | "skipOffline"
            | "lastUpdated"
            | "categoryCombo"
            | "translations"
            | "id"
            | "enrollmentDateLabel"
            | "lastUpdatedBy"
            | "onlyEnrollOnce"
            | "created"
            | "attributeValues"
            | "sharing"
            | "version"
            | "maxTeiCountToReturn"
            | "selectIncidentDatesInFuture"
            | "incidentDateLabel"
            | "expiryPeriodType"
            | "name"
            | "selectEnrollmentDatesInFuture"
            | "style"
            | "shortName"
            | "useFirstStageDuringRegistration"
            | "code"
            | "programTrackedEntityAttributes"
            | "completeEventsExpiryDays"
            | "description"
            | "relatedProgram"
            | "notificationTemplates"
            | "formName"
            | "featureType"
            | "minAttributesRequiredToSearch"
            | "displayFrontPageList"
            | "organisationUnits"
            | "programType"
            | "accessLevel"
            | "programSections"
            | "programStages"
            | "createdBy"
            | "trackedEntityType"
            | "displayIncidentDate"
            | "expiryDays"
        >;
    };
}

export interface D2ProgramDataElementDimensionItemSchema {
    name: "D2ProgramDataElementDimensionItem";
    model: D2ProgramDataElementDimensionItem;
    fields: {
        access: D2Access;
        aggregationType:
            | "SUM"
            | "AVERAGE"
            | "AVERAGE_SUM_ORG_UNIT"
            | "LAST"
            | "LAST_AVERAGE_ORG_UNIT"
            | "LAST_IN_PERIOD"
            | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
            | "FIRST"
            | "FIRST_AVERAGE_ORG_UNIT"
            | "COUNT"
            | "STDDEV"
            | "VARIANCE"
            | "MIN"
            | "MAX"
            | "NONE"
            | "CUSTOM"
            | "DEFAULT";
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        dataElement: D2DataElementSchema;
        description: string;
        dimensionItem: string;
        dimensionItemType:
            | "DATA_ELEMENT"
            | "DATA_ELEMENT_OPERAND"
            | "INDICATOR"
            | "REPORTING_RATE"
            | "PROGRAM_DATA_ELEMENT"
            | "PROGRAM_ATTRIBUTE"
            | "PROGRAM_INDICATOR"
            | "PERIOD"
            | "ORGANISATION_UNIT"
            | "CATEGORY_OPTION"
            | "OPTION_GROUP"
            | "DATA_ELEMENT_GROUP"
            | "ORGANISATION_UNIT_GROUP"
            | "CATEGORY_OPTION_GROUP";
        displayDescription: string;
        displayFormName: string;
        displayName: string;
        displayShortName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        formName: string;
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        legendSet: D2LegendSetSchema;
        legendSets: D2LegendSetSchema[];
        name: string;
        periodOffset: number;
        program: D2ProgramSchema;
        publicAccess: string;
        sharing: any;
        shortName: string;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
        valueType:
            | "TEXT"
            | "LONG_TEXT"
            | "LETTER"
            | "PHONE_NUMBER"
            | "EMAIL"
            | "BOOLEAN"
            | "TRUE_ONLY"
            | "DATE"
            | "DATETIME"
            | "TIME"
            | "NUMBER"
            | "UNIT_INTERVAL"
            | "PERCENTAGE"
            | "INTEGER"
            | "INTEGER_POSITIVE"
            | "INTEGER_NEGATIVE"
            | "INTEGER_ZERO_OR_POSITIVE"
            | "TRACKER_ASSOCIATE"
            | "USERNAME"
            | "COORDINATE"
            | "ORGANISATION_UNIT"
            | "AGE"
            | "URL"
            | "FILE_RESOURCE"
            | "IMAGE";
    };
    fieldPresets: {
        $all: Preset<D2ProgramDataElementDimensionItem, keyof D2ProgramDataElementDimensionItem>;
        $identifiable: Preset<D2ProgramDataElementDimensionItem, FieldPresets["identifiable"]>;
        $nameable: Preset<D2ProgramDataElementDimensionItem, FieldPresets["nameable"]>;
        $persisted: Preset<D2ProgramDataElementDimensionItem, never>;
        $owner: Preset<D2ProgramDataElementDimensionItem, never>;
    };
}

export interface D2ProgramIndicatorSchema {
    name: "D2ProgramIndicator";
    model: D2ProgramIndicator;
    fields: {
        access: D2Access;
        aggregateExportAttributeOptionCombo: string;
        aggregateExportCategoryOptionCombo: string;
        aggregationType:
            | "SUM"
            | "AVERAGE"
            | "AVERAGE_SUM_ORG_UNIT"
            | "LAST"
            | "LAST_AVERAGE_ORG_UNIT"
            | "LAST_IN_PERIOD"
            | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
            | "FIRST"
            | "FIRST_AVERAGE_ORG_UNIT"
            | "COUNT"
            | "STDDEV"
            | "VARIANCE"
            | "MIN"
            | "MAX"
            | "NONE"
            | "CUSTOM"
            | "DEFAULT";
        analyticsPeriodBoundaries: D2AnalyticsPeriodBoundarySchema[];
        analyticsType: "EVENT" | "ENROLLMENT";
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        decimals: number;
        description: string;
        dimensionItem: string;
        dimensionItemType:
            | "DATA_ELEMENT"
            | "DATA_ELEMENT_OPERAND"
            | "INDICATOR"
            | "REPORTING_RATE"
            | "PROGRAM_DATA_ELEMENT"
            | "PROGRAM_ATTRIBUTE"
            | "PROGRAM_INDICATOR"
            | "PERIOD"
            | "ORGANISATION_UNIT"
            | "CATEGORY_OPTION"
            | "OPTION_GROUP"
            | "DATA_ELEMENT_GROUP"
            | "ORGANISATION_UNIT_GROUP"
            | "CATEGORY_OPTION_GROUP";
        displayDescription: string;
        displayFormName: string;
        displayInForm: boolean;
        displayName: string;
        displayShortName: string;
        expression: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        filter: string;
        formName: string;
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        legendSet: D2LegendSetSchema;
        legendSets: D2LegendSetSchema[];
        name: string;
        periodOffset: number;
        program: D2ProgramSchema;
        programIndicatorGroups: D2ProgramIndicatorGroupSchema[];
        publicAccess: string;
        sharing: any;
        shortName: string;
        style: D2Style;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2ProgramIndicator, keyof D2ProgramIndicator>;
        $identifiable: Preset<D2ProgramIndicator, FieldPresets["identifiable"]>;
        $nameable: Preset<D2ProgramIndicator, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2ProgramIndicator,
            | "aggregationType"
            | "code"
            | "displayInForm"
            | "aggregateExportCategoryOptionCombo"
            | "description"
            | "program"
            | "lastUpdated"
            | "translations"
            | "formName"
            | "id"
            | "programIndicatorGroups"
            | "analyticsPeriodBoundaries"
            | "lastUpdatedBy"
            | "expression"
            | "created"
            | "attributeValues"
            | "sharing"
            | "filter"
            | "createdBy"
            | "decimals"
            | "name"
            | "analyticsType"
            | "legendSets"
            | "style"
            | "shortName"
            | "aggregateExportAttributeOptionCombo"
        >;
        $owner: Preset<
            D2ProgramIndicator,
            | "aggregationType"
            | "code"
            | "displayInForm"
            | "aggregateExportCategoryOptionCombo"
            | "description"
            | "program"
            | "lastUpdated"
            | "translations"
            | "formName"
            | "id"
            | "analyticsPeriodBoundaries"
            | "lastUpdatedBy"
            | "expression"
            | "created"
            | "attributeValues"
            | "sharing"
            | "filter"
            | "createdBy"
            | "decimals"
            | "name"
            | "analyticsType"
            | "legendSets"
            | "style"
            | "shortName"
            | "aggregateExportAttributeOptionCombo"
        >;
    };
}

export interface D2ProgramIndicatorGroupSchema {
    name: "D2ProgramIndicatorGroup";
    model: D2ProgramIndicatorGroup;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        description: string;
        displayName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        name: string;
        programIndicators: D2ProgramIndicatorSchema[];
        publicAccess: string;
        sharing: any;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2ProgramIndicatorGroup, keyof D2ProgramIndicatorGroup>;
        $identifiable: Preset<D2ProgramIndicatorGroup, FieldPresets["identifiable"]>;
        $nameable: Preset<D2ProgramIndicatorGroup, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2ProgramIndicatorGroup,
            | "lastUpdatedBy"
            | "code"
            | "created"
            | "description"
            | "sharing"
            | "programIndicators"
            | "lastUpdated"
            | "createdBy"
            | "translations"
            | "name"
            | "id"
        >;
        $owner: Preset<
            D2ProgramIndicatorGroup,
            | "lastUpdatedBy"
            | "code"
            | "created"
            | "description"
            | "sharing"
            | "programIndicators"
            | "lastUpdated"
            | "createdBy"
            | "translations"
            | "name"
            | "id"
        >;
    };
}

export interface D2ProgramInstanceSchema {
    name: "D2ProgramInstance";
    model: D2ProgramInstance;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        completedBy: string;
        created: string;
        createdAtClient: string;
        createdBy: D2UserSchema;
        createdByUserInfo: any;
        deleted: boolean;
        displayName: string;
        endDate: string;
        enrollmentDate: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        followup: boolean;
        geometry: any;
        href: string;
        id: Id;
        incidentDate: string;
        lastUpdated: string;
        lastUpdatedAtClient: string;
        lastUpdatedBy: D2UserSchema;
        lastUpdatedByUserInfo: any;
        messageConversations: D2MessageConversationSchema[];
        name: string;
        organisationUnit: D2OrganisationUnitSchema;
        program: D2ProgramSchema;
        programStageInstances: D2ProgramStageInstanceSchema[];
        publicAccess: string;
        relationshipItems: any[];
        sharing: any;
        status: "ACTIVE" | "COMPLETED" | "CANCELLED";
        storedBy: string;
        trackedEntityComments: any[];
        trackedEntityInstance: D2TrackedEntityInstanceSchema;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2ProgramInstance, keyof D2ProgramInstance>;
        $identifiable: Preset<D2ProgramInstance, FieldPresets["identifiable"]>;
        $nameable: Preset<D2ProgramInstance, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2ProgramInstance,
            | "storedBy"
            | "endDate"
            | "organisationUnit"
            | "enrollmentDate"
            | "createdAtClient"
            | "program"
            | "messageConversations"
            | "trackedEntityComments"
            | "lastUpdatedByUserInfo"
            | "lastUpdated"
            | "relationshipItems"
            | "id"
            | "createdByUserInfo"
            | "created"
            | "programStageInstances"
            | "trackedEntityInstance"
            | "followup"
            | "deleted"
            | "geometry"
            | "incidentDate"
            | "completedBy"
            | "status"
            | "lastUpdatedAtClient"
        >;
        $owner: Preset<
            D2ProgramInstance,
            | "storedBy"
            | "endDate"
            | "organisationUnit"
            | "enrollmentDate"
            | "createdAtClient"
            | "program"
            | "messageConversations"
            | "trackedEntityComments"
            | "lastUpdatedByUserInfo"
            | "lastUpdated"
            | "id"
            | "createdByUserInfo"
            | "created"
            | "trackedEntityInstance"
            | "followup"
            | "deleted"
            | "geometry"
            | "incidentDate"
            | "completedBy"
            | "status"
            | "lastUpdatedAtClient"
        >;
    };
}

export interface D2ProgramNotificationTemplateSchema {
    name: "D2ProgramNotificationTemplate";
    model: D2ProgramNotificationTemplate;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        deliveryChannels: never[];
        displayMessageTemplate: string;
        displayName: string;
        displaySubjectTemplate: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        messageTemplate: string;
        name: string;
        notificationRecipient:
            | "TRACKED_ENTITY_INSTANCE"
            | "ORGANISATION_UNIT_CONTACT"
            | "USERS_AT_ORGANISATION_UNIT"
            | "USER_GROUP"
            | "PROGRAM_ATTRIBUTE"
            | "DATA_ELEMENT"
            | "WEB_HOOK";
        notificationTrigger:
            | "ENROLLMENT"
            | "COMPLETION"
            | "PROGRAM_RULE"
            | "SCHEDULED_DAYS_DUE_DATE"
            | "SCHEDULED_DAYS_INCIDENT_DATE"
            | "SCHEDULED_DAYS_ENROLLMENT_DATE";
        notifyParentOrganisationUnitOnly: boolean;
        notifyUsersInHierarchyOnly: boolean;
        publicAccess: string;
        recipientDataElement: D2DataElementSchema;
        recipientProgramAttribute: D2TrackedEntityAttributeSchema;
        recipientUserGroup: D2UserGroupSchema;
        relativeScheduledDays: number;
        sendRepeatable: boolean;
        sharing: any;
        subjectTemplate: string;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2ProgramNotificationTemplate, keyof D2ProgramNotificationTemplate>;
        $identifiable: Preset<D2ProgramNotificationTemplate, FieldPresets["identifiable"]>;
        $nameable: Preset<D2ProgramNotificationTemplate, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2ProgramNotificationTemplate,
            | "code"
            | "notificationTrigger"
            | "lastUpdated"
            | "translations"
            | "relativeScheduledDays"
            | "id"
            | "subjectTemplate"
            | "lastUpdatedBy"
            | "deliveryChannels"
            | "recipientDataElement"
            | "created"
            | "notifyUsersInHierarchyOnly"
            | "sendRepeatable"
            | "notificationRecipient"
            | "recipientProgramAttribute"
            | "notifyParentOrganisationUnitOnly"
            | "name"
            | "recipientUserGroup"
            | "messageTemplate"
        >;
        $owner: Preset<
            D2ProgramNotificationTemplate,
            | "code"
            | "notificationTrigger"
            | "lastUpdated"
            | "translations"
            | "relativeScheduledDays"
            | "id"
            | "subjectTemplate"
            | "lastUpdatedBy"
            | "deliveryChannels"
            | "recipientDataElement"
            | "created"
            | "notifyUsersInHierarchyOnly"
            | "sendRepeatable"
            | "notificationRecipient"
            | "recipientProgramAttribute"
            | "notifyParentOrganisationUnitOnly"
            | "name"
            | "recipientUserGroup"
            | "messageTemplate"
        >;
    };
}

export interface D2ProgramRuleSchema {
    name: "D2ProgramRule";
    model: D2ProgramRule;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        condition: string;
        created: string;
        createdBy: D2UserSchema;
        description: string;
        displayName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        name: string;
        priority: number;
        program: D2ProgramSchema;
        programRuleActions: D2ProgramRuleActionSchema[];
        programStage: D2ProgramStageSchema;
        publicAccess: string;
        sharing: any;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2ProgramRule, keyof D2ProgramRule>;
        $identifiable: Preset<D2ProgramRule, FieldPresets["identifiable"]>;
        $nameable: Preset<D2ProgramRule, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2ProgramRule,
            | "code"
            | "description"
            | "program"
            | "lastUpdated"
            | "translations"
            | "id"
            | "lastUpdatedBy"
            | "programStage"
            | "created"
            | "priority"
            | "condition"
            | "programRuleActions"
            | "name"
        >;
        $owner: Preset<
            D2ProgramRule,
            | "code"
            | "description"
            | "program"
            | "lastUpdated"
            | "translations"
            | "id"
            | "lastUpdatedBy"
            | "programStage"
            | "created"
            | "priority"
            | "condition"
            | "programRuleActions"
            | "name"
        >;
    };
}

export interface D2ProgramRuleActionSchema {
    name: "D2ProgramRuleAction";
    model: D2ProgramRuleAction;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        content: string;
        created: string;
        createdBy: D2UserSchema;
        data: string;
        dataElement: D2DataElementSchema;
        displayContent: string;
        displayName: string;
        evaluationEnvironments: never[];
        evaluationTime: "ON_DATA_ENTRY" | "ON_COMPLETE" | "ALWAYS";
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        location: string;
        name: string;
        option: D2OptionSchema;
        optionGroup: D2OptionGroupSchema;
        programIndicator: D2ProgramIndicatorSchema;
        programRule: D2ProgramRuleSchema;
        programRuleActionType:
            | "DISPLAYTEXT"
            | "DISPLAYKEYVALUEPAIR"
            | "HIDEFIELD"
            | "HIDESECTION"
            | "HIDEPROGRAMSTAGE"
            | "ASSIGN"
            | "SHOWWARNING"
            | "WARNINGONCOMPLETE"
            | "SHOWERROR"
            | "ERRORONCOMPLETE"
            | "CREATEEVENT"
            | "SETMANDATORYFIELD"
            | "SENDMESSAGE"
            | "SCHEDULEMESSAGE"
            | "HIDEOPTION"
            | "SHOWOPTIONGROUP"
            | "HIDEOPTIONGROUP";
        programStage: D2ProgramStageSchema;
        programStageSection: D2ProgramStageSectionSchema;
        publicAccess: string;
        sharing: any;
        templateUid: string;
        trackedEntityAttribute: D2TrackedEntityAttributeSchema;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2ProgramRuleAction, keyof D2ProgramRuleAction>;
        $identifiable: Preset<D2ProgramRuleAction, FieldPresets["identifiable"]>;
        $nameable: Preset<D2ProgramRuleAction, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2ProgramRuleAction,
            | "evaluationEnvironments"
            | "code"
            | "data"
            | "optionGroup"
            | "templateUid"
            | "content"
            | "trackedEntityAttribute"
            | "lastUpdated"
            | "translations"
            | "programIndicator"
            | "id"
            | "programRule"
            | "programStageSection"
            | "programRuleActionType"
            | "lastUpdatedBy"
            | "programStage"
            | "created"
            | "dataElement"
            | "evaluationTime"
            | "location"
            | "option"
        >;
        $owner: Preset<
            D2ProgramRuleAction,
            | "evaluationEnvironments"
            | "code"
            | "data"
            | "optionGroup"
            | "templateUid"
            | "content"
            | "trackedEntityAttribute"
            | "lastUpdated"
            | "translations"
            | "programIndicator"
            | "id"
            | "programRule"
            | "programStageSection"
            | "programRuleActionType"
            | "lastUpdatedBy"
            | "programStage"
            | "created"
            | "dataElement"
            | "evaluationTime"
            | "location"
            | "option"
        >;
    };
}

export interface D2ProgramRuleVariableSchema {
    name: "D2ProgramRuleVariable";
    model: D2ProgramRuleVariable;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        dataElement: D2DataElementSchema;
        displayName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        name: string;
        program: D2ProgramSchema;
        programRuleVariableSourceType:
            | "DATAELEMENT_NEWEST_EVENT_PROGRAM_STAGE"
            | "DATAELEMENT_NEWEST_EVENT_PROGRAM"
            | "DATAELEMENT_CURRENT_EVENT"
            | "DATAELEMENT_PREVIOUS_EVENT"
            | "CALCULATED_VALUE"
            | "TEI_ATTRIBUTE";
        programStage: D2ProgramStageSchema;
        publicAccess: string;
        sharing: any;
        trackedEntityAttribute: D2TrackedEntityAttributeSchema;
        translations: D2Translation[];
        useCodeForOptionSet: boolean;
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2ProgramRuleVariable, keyof D2ProgramRuleVariable>;
        $identifiable: Preset<D2ProgramRuleVariable, FieldPresets["identifiable"]>;
        $nameable: Preset<D2ProgramRuleVariable, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2ProgramRuleVariable,
            | "code"
            | "programRuleVariableSourceType"
            | "program"
            | "trackedEntityAttribute"
            | "lastUpdated"
            | "translations"
            | "id"
            | "lastUpdatedBy"
            | "programStage"
            | "created"
            | "useCodeForOptionSet"
            | "dataElement"
            | "name"
        >;
        $owner: Preset<
            D2ProgramRuleVariable,
            | "code"
            | "programRuleVariableSourceType"
            | "program"
            | "trackedEntityAttribute"
            | "lastUpdated"
            | "translations"
            | "id"
            | "lastUpdatedBy"
            | "programStage"
            | "created"
            | "useCodeForOptionSet"
            | "dataElement"
            | "name"
        >;
    };
}

export interface D2ProgramSectionSchema {
    name: "D2ProgramSection";
    model: D2ProgramSection;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        description: string;
        displayDescription: string;
        displayFormName: string;
        displayName: string;
        displayShortName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        formName: string;
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        name: string;
        program: D2ProgramSchema;
        publicAccess: string;
        renderType: any;
        sharing: any;
        shortName: string;
        sortOrder: number;
        style: D2Style;
        trackedEntityAttributes: D2TrackedEntityAttributeSchema[];
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2ProgramSection, keyof D2ProgramSection>;
        $identifiable: Preset<D2ProgramSection, FieldPresets["identifiable"]>;
        $nameable: Preset<D2ProgramSection, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2ProgramSection,
            | "code"
            | "description"
            | "program"
            | "lastUpdated"
            | "translations"
            | "formName"
            | "id"
            | "renderType"
            | "lastUpdatedBy"
            | "created"
            | "sortOrder"
            | "name"
            | "trackedEntityAttributes"
            | "style"
        >;
        $owner: Preset<
            D2ProgramSection,
            | "code"
            | "description"
            | "program"
            | "lastUpdated"
            | "translations"
            | "formName"
            | "id"
            | "renderType"
            | "lastUpdatedBy"
            | "created"
            | "sortOrder"
            | "name"
            | "trackedEntityAttributes"
            | "style"
        >;
    };
}

export interface D2ProgramStageSchema {
    name: "D2ProgramStage";
    model: D2ProgramStage;
    fields: {
        access: D2Access;
        allowGenerateNextVisit: boolean;
        attributeValues: D2AttributeValueSchema[];
        autoGenerateEvent: boolean;
        blockEntryForm: boolean;
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        dataEntryForm: D2DataEntryFormSchema;
        description: string;
        displayDescription: string;
        displayDueDateLabel: string;
        displayExecutionDateLabel: string;
        displayFormName: string;
        displayGenerateEventBox: boolean;
        displayName: string;
        displayShortName: string;
        dueDateLabel: string;
        enableUserAssignment: boolean;
        executionDateLabel: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        featureType: "NONE" | "MULTI_POLYGON" | "POLYGON" | "POINT" | "SYMBOL";
        formName: string;
        formType: "DEFAULT" | "CUSTOM" | "SECTION" | "SECTION_MULTIORG";
        generatedByEnrollmentDate: boolean;
        hideDueDate: boolean;
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        minDaysFromStart: number;
        name: string;
        nextScheduleDate: D2DataElementSchema;
        notificationTemplates: D2ProgramNotificationTemplateSchema[];
        openAfterEnrollment: boolean;
        periodType: string;
        preGenerateUID: boolean;
        program: D2ProgramSchema;
        programStageDataElements: D2ProgramStageDataElementSchema[];
        programStageSections: D2ProgramStageSectionSchema[];
        publicAccess: string;
        remindCompleted: boolean;
        repeatable: boolean;
        reportDateToUse: string;
        sharing: any;
        shortName: string;
        sortOrder: number;
        standardInterval: number;
        style: D2Style;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
        validationStrategy: "ON_COMPLETE" | "ON_UPDATE_AND_INSERT";
    };
    fieldPresets: {
        $all: Preset<D2ProgramStage, keyof D2ProgramStage>;
        $identifiable: Preset<D2ProgramStage, FieldPresets["identifiable"]>;
        $nameable: Preset<D2ProgramStage, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2ProgramStage,
            | "dataEntryForm"
            | "allowGenerateNextVisit"
            | "reportDateToUse"
            | "program"
            | "lastUpdated"
            | "programStageDataElements"
            | "translations"
            | "id"
            | "lastUpdatedBy"
            | "generatedByEnrollmentDate"
            | "created"
            | "attributeValues"
            | "sharing"
            | "sortOrder"
            | "name"
            | "hideDueDate"
            | "enableUserAssignment"
            | "style"
            | "minDaysFromStart"
            | "standardInterval"
            | "dueDateLabel"
            | "executionDateLabel"
            | "code"
            | "preGenerateUID"
            | "description"
            | "notificationTemplates"
            | "openAfterEnrollment"
            | "repeatable"
            | "formName"
            | "featureType"
            | "remindCompleted"
            | "displayGenerateEventBox"
            | "nextScheduleDate"
            | "validationStrategy"
            | "autoGenerateEvent"
            | "periodType"
            | "createdBy"
            | "blockEntryForm"
            | "programStageSections"
        >;
        $owner: Preset<
            D2ProgramStage,
            | "dataEntryForm"
            | "allowGenerateNextVisit"
            | "reportDateToUse"
            | "program"
            | "lastUpdated"
            | "programStageDataElements"
            | "translations"
            | "id"
            | "lastUpdatedBy"
            | "generatedByEnrollmentDate"
            | "created"
            | "attributeValues"
            | "sharing"
            | "sortOrder"
            | "name"
            | "hideDueDate"
            | "enableUserAssignment"
            | "style"
            | "minDaysFromStart"
            | "standardInterval"
            | "dueDateLabel"
            | "executionDateLabel"
            | "code"
            | "preGenerateUID"
            | "description"
            | "notificationTemplates"
            | "openAfterEnrollment"
            | "repeatable"
            | "formName"
            | "featureType"
            | "remindCompleted"
            | "displayGenerateEventBox"
            | "nextScheduleDate"
            | "validationStrategy"
            | "autoGenerateEvent"
            | "periodType"
            | "createdBy"
            | "blockEntryForm"
            | "programStageSections"
        >;
    };
}

export interface D2ProgramStageDataElementSchema {
    name: "D2ProgramStageDataElement";
    model: D2ProgramStageDataElement;
    fields: {
        access: D2Access;
        allowFutureDate: boolean;
        allowProvidedElsewhere: boolean;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        compulsory: boolean;
        created: string;
        createdBy: D2UserSchema;
        dataElement: D2DataElementSchema;
        displayInReports: boolean;
        displayName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        name: string;
        programStage: D2ProgramStageSchema;
        publicAccess: string;
        renderOptionsAsRadio: boolean;
        renderType: any;
        sharing: any;
        skipSynchronization: boolean;
        sortOrder: number;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2ProgramStageDataElement, keyof D2ProgramStageDataElement>;
        $identifiable: Preset<D2ProgramStageDataElement, FieldPresets["identifiable"]>;
        $nameable: Preset<D2ProgramStageDataElement, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2ProgramStageDataElement,
            | "displayInReports"
            | "code"
            | "skipSynchronization"
            | "lastUpdated"
            | "renderOptionsAsRadio"
            | "id"
            | "allowFutureDate"
            | "renderType"
            | "lastUpdatedBy"
            | "programStage"
            | "created"
            | "dataElement"
            | "compulsory"
            | "allowProvidedElsewhere"
            | "sortOrder"
        >;
        $owner: Preset<
            D2ProgramStageDataElement,
            | "displayInReports"
            | "code"
            | "skipSynchronization"
            | "lastUpdated"
            | "renderOptionsAsRadio"
            | "id"
            | "allowFutureDate"
            | "renderType"
            | "lastUpdatedBy"
            | "programStage"
            | "created"
            | "dataElement"
            | "compulsory"
            | "allowProvidedElsewhere"
            | "sortOrder"
        >;
    };
}

export interface D2ProgramStageInstanceSchema {
    name: "D2ProgramStageInstance";
    model: D2ProgramStageInstance;
    fields: {
        access: D2Access;
        assignedUser: D2UserSchema;
        attributeOptionCombo: D2CategoryOptionComboSchema;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        comments: any[];
        completed: boolean;
        completedBy: string;
        completedDate: string;
        creatableInSearchScope: boolean;
        created: string;
        createdAtClient: string;
        createdBy: D2UserSchema;
        createdByUserInfo: any;
        deleted: boolean;
        displayName: string;
        dueDate: string;
        eventDataValues: any[];
        eventDate: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        geometry: any;
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedAtClient: string;
        lastUpdatedBy: D2UserSchema;
        lastUpdatedByUserInfo: any;
        messageConversations: D2MessageConversationSchema[];
        name: string;
        organisationUnit: D2OrganisationUnitSchema;
        programInstance: D2ProgramInstanceSchema;
        programStage: D2ProgramStageSchema;
        publicAccess: string;
        relationshipItems: any[];
        sharing: any;
        status: "ACTIVE" | "COMPLETED" | "VISITED" | "SCHEDULE" | "OVERDUE" | "SKIPPED";
        storedBy: string;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2ProgramStageInstance, keyof D2ProgramStageInstance>;
        $identifiable: Preset<D2ProgramStageInstance, FieldPresets["identifiable"]>;
        $nameable: Preset<D2ProgramStageInstance, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2ProgramStageInstance,
            | "code"
            | "storedBy"
            | "organisationUnit"
            | "dueDate"
            | "createdAtClient"
            | "messageConversations"
            | "lastUpdatedByUserInfo"
            | "lastUpdated"
            | "eventDataValues"
            | "relationshipItems"
            | "id"
            | "createdByUserInfo"
            | "assignedUser"
            | "programStage"
            | "comments"
            | "created"
            | "completedDate"
            | "programInstance"
            | "deleted"
            | "attributeOptionCombo"
            | "geometry"
            | "completedBy"
            | "status"
            | "lastUpdatedAtClient"
            | "eventDate"
        >;
        $owner: Preset<
            D2ProgramStageInstance,
            | "code"
            | "storedBy"
            | "organisationUnit"
            | "dueDate"
            | "createdAtClient"
            | "messageConversations"
            | "lastUpdatedByUserInfo"
            | "lastUpdated"
            | "eventDataValues"
            | "id"
            | "createdByUserInfo"
            | "assignedUser"
            | "programStage"
            | "comments"
            | "created"
            | "completedDate"
            | "programInstance"
            | "deleted"
            | "attributeOptionCombo"
            | "geometry"
            | "completedBy"
            | "status"
            | "lastUpdatedAtClient"
            | "eventDate"
        >;
    };
}

export interface D2ProgramStageInstanceFilterSchema {
    name: "D2ProgramStageInstanceFilter";
    model: D2ProgramStageInstanceFilter;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        description: string;
        displayDescription: string;
        displayName: string;
        eventQueryCriteria: any;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        name: string;
        program: Id;
        programStage: Id;
        publicAccess: string;
        sharing: any;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2ProgramStageInstanceFilter, keyof D2ProgramStageInstanceFilter>;
        $identifiable: Preset<D2ProgramStageInstanceFilter, FieldPresets["identifiable"]>;
        $nameable: Preset<D2ProgramStageInstanceFilter, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2ProgramStageInstanceFilter,
            | "eventQueryCriteria"
            | "description"
            | "program"
            | "lastUpdated"
            | "translations"
            | "id"
            | "lastUpdatedBy"
            | "programStage"
            | "created"
            | "sharing"
            | "createdBy"
            | "name"
        >;
        $owner: Preset<
            D2ProgramStageInstanceFilter,
            | "eventQueryCriteria"
            | "description"
            | "program"
            | "lastUpdated"
            | "translations"
            | "id"
            | "lastUpdatedBy"
            | "programStage"
            | "created"
            | "sharing"
            | "createdBy"
            | "name"
        >;
    };
}

export interface D2ProgramStageSectionSchema {
    name: "D2ProgramStageSection";
    model: D2ProgramStageSection;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        dataElements: D2DataElementSchema[];
        description: string;
        displayDescription: string;
        displayFormName: string;
        displayName: string;
        displayShortName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        formName: string;
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        name: string;
        programIndicators: D2ProgramIndicatorSchema[];
        programStage: D2ProgramStageSchema;
        publicAccess: string;
        renderType: any;
        sharing: any;
        shortName: string;
        sortOrder: number;
        style: D2Style;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2ProgramStageSection, keyof D2ProgramStageSection>;
        $identifiable: Preset<D2ProgramStageSection, FieldPresets["identifiable"]>;
        $nameable: Preset<D2ProgramStageSection, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2ProgramStageSection,
            | "code"
            | "description"
            | "programIndicators"
            | "lastUpdated"
            | "translations"
            | "formName"
            | "id"
            | "renderType"
            | "dataElements"
            | "lastUpdatedBy"
            | "programStage"
            | "created"
            | "sortOrder"
            | "name"
            | "style"
        >;
        $owner: Preset<
            D2ProgramStageSection,
            | "code"
            | "description"
            | "programIndicators"
            | "lastUpdated"
            | "translations"
            | "formName"
            | "id"
            | "renderType"
            | "dataElements"
            | "lastUpdatedBy"
            | "programStage"
            | "created"
            | "sortOrder"
            | "name"
            | "style"
        >;
    };
}

export interface D2ProgramTrackedEntityAttributeSchema {
    name: "D2ProgramTrackedEntityAttribute";
    model: D2ProgramTrackedEntityAttribute;
    fields: {
        access: D2Access;
        allowFutureDate: boolean;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        displayInList: boolean;
        displayName: string;
        displayShortName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        mandatory: boolean;
        name: string;
        program: D2ProgramSchema;
        programTrackedEntityAttributeGroups: D2ProgramTrackedEntityAttributeGroupSchema[];
        publicAccess: string;
        renderOptionsAsRadio: boolean;
        renderType: any;
        searchable: boolean;
        sharing: any;
        sortOrder: number;
        trackedEntityAttribute: D2TrackedEntityAttributeSchema;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
        valueType:
            | "TEXT"
            | "LONG_TEXT"
            | "LETTER"
            | "PHONE_NUMBER"
            | "EMAIL"
            | "BOOLEAN"
            | "TRUE_ONLY"
            | "DATE"
            | "DATETIME"
            | "TIME"
            | "NUMBER"
            | "UNIT_INTERVAL"
            | "PERCENTAGE"
            | "INTEGER"
            | "INTEGER_POSITIVE"
            | "INTEGER_NEGATIVE"
            | "INTEGER_ZERO_OR_POSITIVE"
            | "TRACKER_ASSOCIATE"
            | "USERNAME"
            | "COORDINATE"
            | "ORGANISATION_UNIT"
            | "AGE"
            | "URL"
            | "FILE_RESOURCE"
            | "IMAGE";
    };
    fieldPresets: {
        $all: Preset<D2ProgramTrackedEntityAttribute, keyof D2ProgramTrackedEntityAttribute>;
        $identifiable: Preset<D2ProgramTrackedEntityAttribute, FieldPresets["identifiable"]>;
        $nameable: Preset<D2ProgramTrackedEntityAttribute, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2ProgramTrackedEntityAttribute,
            | "code"
            | "programTrackedEntityAttributeGroups"
            | "program"
            | "mandatory"
            | "trackedEntityAttribute"
            | "lastUpdated"
            | "renderOptionsAsRadio"
            | "id"
            | "allowFutureDate"
            | "renderType"
            | "lastUpdatedBy"
            | "created"
            | "searchable"
            | "displayInList"
            | "sortOrder"
        >;
        $owner: Preset<
            D2ProgramTrackedEntityAttribute,
            | "code"
            | "programTrackedEntityAttributeGroups"
            | "program"
            | "mandatory"
            | "trackedEntityAttribute"
            | "lastUpdated"
            | "renderOptionsAsRadio"
            | "id"
            | "allowFutureDate"
            | "renderType"
            | "lastUpdatedBy"
            | "created"
            | "searchable"
            | "displayInList"
            | "sortOrder"
        >;
    };
}

export interface D2ProgramTrackedEntityAttributeDimensionItemSchema {
    name: "D2ProgramTrackedEntityAttributeDimensionItem";
    model: D2ProgramTrackedEntityAttributeDimensionItem;
    fields: {
        access: D2Access;
        aggregationType:
            | "SUM"
            | "AVERAGE"
            | "AVERAGE_SUM_ORG_UNIT"
            | "LAST"
            | "LAST_AVERAGE_ORG_UNIT"
            | "LAST_IN_PERIOD"
            | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
            | "FIRST"
            | "FIRST_AVERAGE_ORG_UNIT"
            | "COUNT"
            | "STDDEV"
            | "VARIANCE"
            | "MIN"
            | "MAX"
            | "NONE"
            | "CUSTOM"
            | "DEFAULT";
        attribute: D2TrackedEntityAttributeSchema;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        description: string;
        dimensionItem: string;
        dimensionItemType:
            | "DATA_ELEMENT"
            | "DATA_ELEMENT_OPERAND"
            | "INDICATOR"
            | "REPORTING_RATE"
            | "PROGRAM_DATA_ELEMENT"
            | "PROGRAM_ATTRIBUTE"
            | "PROGRAM_INDICATOR"
            | "PERIOD"
            | "ORGANISATION_UNIT"
            | "CATEGORY_OPTION"
            | "OPTION_GROUP"
            | "DATA_ELEMENT_GROUP"
            | "ORGANISATION_UNIT_GROUP"
            | "CATEGORY_OPTION_GROUP";
        displayDescription: string;
        displayFormName: string;
        displayName: string;
        displayShortName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        formName: string;
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        legendSet: D2LegendSetSchema;
        legendSets: D2LegendSetSchema[];
        name: string;
        periodOffset: number;
        program: D2ProgramSchema;
        publicAccess: string;
        sharing: any;
        shortName: string;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2ProgramTrackedEntityAttributeDimensionItem, keyof D2ProgramTrackedEntityAttributeDimensionItem>;
        $identifiable: Preset<D2ProgramTrackedEntityAttributeDimensionItem, FieldPresets["identifiable"]>;
        $nameable: Preset<D2ProgramTrackedEntityAttributeDimensionItem, FieldPresets["nameable"]>;
        $persisted: Preset<D2ProgramTrackedEntityAttributeDimensionItem, never>;
        $owner: Preset<D2ProgramTrackedEntityAttributeDimensionItem, never>;
    };
}

export interface D2ProgramTrackedEntityAttributeGroupSchema {
    name: "D2ProgramTrackedEntityAttributeGroup";
    model: D2ProgramTrackedEntityAttributeGroup;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        attributes: D2ProgramTrackedEntityAttributeSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        description: string;
        displayDescription: string;
        displayFormName: string;
        displayName: string;
        displayShortName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        formName: string;
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        name: string;
        publicAccess: string;
        sharing: any;
        shortName: string;
        translations: D2Translation[];
        uniqunessType: "NONE" | "STRICT" | "VALIDATION";
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2ProgramTrackedEntityAttributeGroup, keyof D2ProgramTrackedEntityAttributeGroup>;
        $identifiable: Preset<D2ProgramTrackedEntityAttributeGroup, FieldPresets["identifiable"]>;
        $nameable: Preset<D2ProgramTrackedEntityAttributeGroup, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2ProgramTrackedEntityAttributeGroup,
            | "code"
            | "uniqunessType"
            | "description"
            | "lastUpdated"
            | "translations"
            | "id"
            | "lastUpdatedBy"
            | "created"
            | "name"
            | "attributes"
            | "shortName"
        >;
        $owner: Preset<
            D2ProgramTrackedEntityAttributeGroup,
            | "code"
            | "uniqunessType"
            | "description"
            | "lastUpdated"
            | "translations"
            | "id"
            | "lastUpdatedBy"
            | "created"
            | "name"
            | "shortName"
        >;
    };
}

export interface D2PushAnalysisSchema {
    name: "D2PushAnalysis";
    model: D2PushAnalysis;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        dashboard: D2DashboardSchema;
        displayName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        message: string;
        name: string;
        publicAccess: string;
        recipientUserGroups: D2UserGroupSchema[];
        sharing: any;
        title: string;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2PushAnalysis, keyof D2PushAnalysis>;
        $identifiable: Preset<D2PushAnalysis, FieldPresets["identifiable"]>;
        $nameable: Preset<D2PushAnalysis, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2PushAnalysis,
            | "code"
            | "recipientUserGroups"
            | "title"
            | "lastUpdated"
            | "id"
            | "dashboard"
            | "lastUpdatedBy"
            | "created"
            | "message"
            | "name"
        >;
        $owner: Preset<
            D2PushAnalysis,
            | "code"
            | "recipientUserGroups"
            | "title"
            | "lastUpdated"
            | "id"
            | "dashboard"
            | "lastUpdatedBy"
            | "created"
            | "message"
            | "name"
        >;
    };
}

export interface D2RelationshipSchema {
    name: "D2Relationship";
    model: D2Relationship;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        description: string;
        displayDescription: string;
        displayFormName: string;
        displayName: string;
        displayShortName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        formName: string;
        from: any;
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        name: string;
        publicAccess: string;
        relationshipType: D2RelationshipTypeSchema;
        sharing: any;
        shortName: string;
        style: D2Style;
        to: any;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2Relationship, keyof D2Relationship>;
        $identifiable: Preset<D2Relationship, FieldPresets["identifiable"]>;
        $nameable: Preset<D2Relationship, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2Relationship,
            | "code"
            | "description"
            | "lastUpdated"
            | "formName"
            | "from"
            | "id"
            | "lastUpdatedBy"
            | "relationshipType"
            | "created"
            | "style"
            | "to"
        >;
        $owner: Preset<
            D2Relationship,
            | "code"
            | "description"
            | "lastUpdated"
            | "formName"
            | "from"
            | "id"
            | "lastUpdatedBy"
            | "relationshipType"
            | "created"
            | "style"
            | "to"
        >;
    };
}

export interface D2RelationshipTypeSchema {
    name: "D2RelationshipType";
    model: D2RelationshipType;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        bidirectional: boolean;
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        description: string;
        displayFromToName: string;
        displayName: string;
        displayToFromName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        fromConstraint: D2RelationshipConstraint;
        fromToName: string;
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        name: string;
        publicAccess: string;
        sharing: any;
        toConstraint: D2RelationshipConstraint;
        toFromName: string;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2RelationshipType, keyof D2RelationshipType>;
        $identifiable: Preset<D2RelationshipType, FieldPresets["identifiable"]>;
        $nameable: Preset<D2RelationshipType, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2RelationshipType,
            | "bidirectional"
            | "code"
            | "description"
            | "fromToName"
            | "lastUpdated"
            | "translations"
            | "toConstraint"
            | "id"
            | "lastUpdatedBy"
            | "created"
            | "toFromName"
            | "sharing"
            | "fromConstraint"
            | "createdBy"
            | "name"
        >;
        $owner: Preset<
            D2RelationshipType,
            | "bidirectional"
            | "code"
            | "description"
            | "fromToName"
            | "lastUpdated"
            | "translations"
            | "toConstraint"
            | "id"
            | "lastUpdatedBy"
            | "created"
            | "toFromName"
            | "sharing"
            | "fromConstraint"
            | "createdBy"
            | "name"
        >;
    };
}

export interface D2ReportSchema {
    name: "D2Report";
    model: D2Report;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        cacheStrategy:
            | "NO_CACHE"
            | "CACHE_1_MINUTE"
            | "CACHE_5_MINUTES"
            | "CACHE_10_MINUTES"
            | "CACHE_15_MINUTES"
            | "CACHE_30_MINUTES"
            | "CACHE_1_HOUR"
            | "CACHE_6AM_TOMORROW"
            | "CACHE_TWO_WEEKS"
            | "RESPECT_SYSTEM_SETTING";
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        designContent: string;
        displayName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        name: string;
        publicAccess: string;
        relativePeriods: any;
        reportParams: D2ReportingParams;
        sharing: any;
        translations: D2Translation[];
        type: "JASPER_REPORT_TABLE" | "JASPER_JDBC" | "HTML";
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
        visualization: D2VisualizationSchema;
    };
    fieldPresets: {
        $all: Preset<D2Report, keyof D2Report>;
        $identifiable: Preset<D2Report, FieldPresets["identifiable"]>;
        $nameable: Preset<D2Report, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2Report,
            | "designContent"
            | "visualization"
            | "code"
            | "type"
            | "lastUpdated"
            | "relativePeriods"
            | "reportParams"
            | "translations"
            | "id"
            | "lastUpdatedBy"
            | "created"
            | "sharing"
            | "createdBy"
            | "name"
            | "cacheStrategy"
        >;
        $owner: Preset<
            D2Report,
            | "designContent"
            | "visualization"
            | "code"
            | "type"
            | "lastUpdated"
            | "relativePeriods"
            | "reportParams"
            | "translations"
            | "id"
            | "lastUpdatedBy"
            | "created"
            | "sharing"
            | "createdBy"
            | "name"
            | "cacheStrategy"
        >;
    };
}

export interface D2ReportTableSchema {
    name: "D2ReportTable";
    model: D2ReportTable;
    fields: {
        access: D2Access;
        aggregationType:
            | "SUM"
            | "AVERAGE"
            | "AVERAGE_SUM_ORG_UNIT"
            | "LAST"
            | "LAST_AVERAGE_ORG_UNIT"
            | "LAST_IN_PERIOD"
            | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
            | "FIRST"
            | "FIRST_AVERAGE_ORG_UNIT"
            | "COUNT"
            | "STDDEV"
            | "VARIANCE"
            | "MIN"
            | "MAX"
            | "NONE"
            | "CUSTOM"
            | "DEFAULT";
        attributeDimensions: any[];
        attributeValues: D2AttributeValueSchema[];
        categoryDimensions: D2CategoryDimensionSchema[];
        categoryOptionGroupSetDimensions: D2CategoryOptionGroupSetDimensionSchema[];
        code: Id;
        colSubTotals: boolean;
        colTotals: boolean;
        columnDimensions: string[];
        columns: any[];
        completedOnly: boolean;
        created: string;
        createdBy: D2UserSchema;
        cumulative: boolean;
        dataDimensionItems: any[];
        dataElementDimensions: D2TrackedEntityDataElementDimensionSchema[];
        dataElementGroupSetDimensions: D2DataElementGroupSetDimensionSchema[];
        description: string;
        digitGroupSeparator: "COMMA" | "SPACE" | "NONE";
        displayDensity: "COMFORTABLE" | "NORMAL" | "COMPACT" | "NONE";
        displayDescription: string;
        displayFormName: string;
        displayName: string;
        displayShortName: string;
        displaySubtitle: string;
        displayTitle: string;
        endDate: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        filterDimensions: string[];
        filters: any[];
        fontSize: "LARGE" | "NORMAL" | "SMALL";
        formName: string;
        hideEmptyColumns: boolean;
        hideEmptyRows: boolean;
        hideSubtitle: boolean;
        hideTitle: boolean;
        href: string;
        id: Id;
        interpretations: D2InterpretationSchema[];
        itemOrganisationUnitGroups: D2OrganisationUnitGroupSchema[];
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        legendDisplayStrategy: "FIXED" | "BY_DATA_ITEM";
        legendDisplayStyle: "FILL" | "TEXT";
        legendSet: D2LegendSetSchema;
        measureCriteria: string;
        name: string;
        numberType: "VALUE" | "ROW_PERCENTAGE" | "COLUMN_PERCENTAGE";
        orgUnitField: string;
        organisationUnitGroupSetDimensions: D2OrganisationUnitGroupSetDimensionSchema[];
        organisationUnitLevels: number[];
        organisationUnits: D2OrganisationUnitSchema[];
        parentGraphMap: D2MapSchema;
        periods: any[];
        programIndicatorDimensions: D2TrackedEntityProgramIndicatorDimensionSchema[];
        publicAccess: string;
        regression: boolean;
        relativePeriods: any;
        reportParams: any;
        rowDimensions: string[];
        rowSubTotals: boolean;
        rowTotals: boolean;
        rows: any[];
        sharing: any;
        shortName: string;
        showDimensionLabels: boolean;
        showHierarchy: boolean;
        skipRounding: boolean;
        sortOrder: number;
        startDate: string;
        subscribed: boolean;
        subscribers: string[];
        subtitle: string;
        timeField: string;
        title: string;
        topLimit: number;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
        userOrgUnitType: "DATA_CAPTURE" | "DATA_OUTPUT" | "TEI_SEARCH";
        userOrganisationUnit: boolean;
        userOrganisationUnitChildren: boolean;
        userOrganisationUnitGrandChildren: boolean;
    };
    fieldPresets: {
        $all: Preset<D2ReportTable, keyof D2ReportTable>;
        $identifiable: Preset<D2ReportTable, FieldPresets["identifiable"]>;
        $nameable: Preset<D2ReportTable, FieldPresets["nameable"]>;
        $persisted: Preset<D2ReportTable, never>;
        $owner: Preset<D2ReportTable, never>;
    };
}

export interface D2ReportingRateSchema {
    name: "D2ReportingRate";
    model: D2ReportingRate;
    fields: {
        access: D2Access;
        aggregationType:
            | "SUM"
            | "AVERAGE"
            | "AVERAGE_SUM_ORG_UNIT"
            | "LAST"
            | "LAST_AVERAGE_ORG_UNIT"
            | "LAST_IN_PERIOD"
            | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
            | "FIRST"
            | "FIRST_AVERAGE_ORG_UNIT"
            | "COUNT"
            | "STDDEV"
            | "VARIANCE"
            | "MIN"
            | "MAX"
            | "NONE"
            | "CUSTOM"
            | "DEFAULT";
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        dataSet: D2DataSetSchema;
        description: string;
        dimensionItem: string;
        dimensionItemType:
            | "DATA_ELEMENT"
            | "DATA_ELEMENT_OPERAND"
            | "INDICATOR"
            | "REPORTING_RATE"
            | "PROGRAM_DATA_ELEMENT"
            | "PROGRAM_ATTRIBUTE"
            | "PROGRAM_INDICATOR"
            | "PERIOD"
            | "ORGANISATION_UNIT"
            | "CATEGORY_OPTION"
            | "OPTION_GROUP"
            | "DATA_ELEMENT_GROUP"
            | "ORGANISATION_UNIT_GROUP"
            | "CATEGORY_OPTION_GROUP";
        displayDescription: string;
        displayFormName: string;
        displayName: string;
        displayShortName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        formName: string;
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        legendSet: D2LegendSetSchema;
        legendSets: D2LegendSetSchema[];
        metric:
            | "REPORTING_RATE"
            | "REPORTING_RATE_ON_TIME"
            | "ACTUAL_REPORTS"
            | "ACTUAL_REPORTS_ON_TIME"
            | "EXPECTED_REPORTS";
        name: string;
        periodOffset: number;
        publicAccess: string;
        sharing: any;
        shortName: string;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2ReportingRate, keyof D2ReportingRate>;
        $identifiable: Preset<D2ReportingRate, FieldPresets["identifiable"]>;
        $nameable: Preset<D2ReportingRate, FieldPresets["nameable"]>;
        $persisted: Preset<D2ReportingRate, never>;
        $owner: Preset<D2ReportingRate, never>;
    };
}

export interface D2SMSCommandSchema {
    name: "D2SMSCommand";
    model: D2SMSCommand;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        codeValueSeparator: string;
        completenessMethod: "ALL_DATAVALUE" | "AT_LEAST_ONE_DATAVALUE" | "DO_NOT_MARK_COMPLETE";
        created: string;
        createdBy: D2UserSchema;
        currentPeriodUsedForReporting: boolean;
        dataset: D2DataSetSchema;
        defaultMessage: string;
        displayName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        moreThanOneOrgUnitMessage: string;
        name: string;
        noUserMessage: string;
        parserType:
            | "KEY_VALUE_PARSER"
            | "J2ME_PARSER"
            | "ALERT_PARSER"
            | "UNREGISTERED_PARSER"
            | "TRACKED_ENTITY_REGISTRATION_PARSER"
            | "PROGRAM_STAGE_DATAENTRY_PARSER"
            | "EVENT_REGISTRATION_PARSER";
        program: D2ProgramSchema;
        programStage: D2ProgramStageSchema;
        publicAccess: string;
        receivedMessage: string;
        separator: string;
        sharing: any;
        smsCodes: any[];
        specialCharacters: any[];
        successMessage: string;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroup: D2UserGroupSchema;
        userGroupAccesses: D2UserGroupAccessSchema[];
        wrongFormatMessage: string;
    };
    fieldPresets: {
        $all: Preset<D2SMSCommand, keyof D2SMSCommand>;
        $identifiable: Preset<D2SMSCommand, FieldPresets["identifiable"]>;
        $nameable: Preset<D2SMSCommand, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2SMSCommand,
            | "moreThanOneOrgUnitMessage"
            | "smsCodes"
            | "specialCharacters"
            | "currentPeriodUsedForReporting"
            | "program"
            | "noUserMessage"
            | "lastUpdated"
            | "receivedMessage"
            | "defaultMessage"
            | "id"
            | "userGroup"
            | "programStage"
            | "completenessMethod"
            | "created"
            | "wrongFormatMessage"
            | "separator"
            | "successMessage"
            | "codeValueSeparator"
            | "parserType"
            | "name"
            | "dataset"
        >;
        $owner: Preset<
            D2SMSCommand,
            | "moreThanOneOrgUnitMessage"
            | "smsCodes"
            | "specialCharacters"
            | "currentPeriodUsedForReporting"
            | "program"
            | "noUserMessage"
            | "lastUpdated"
            | "receivedMessage"
            | "defaultMessage"
            | "id"
            | "userGroup"
            | "programStage"
            | "completenessMethod"
            | "created"
            | "wrongFormatMessage"
            | "separator"
            | "successMessage"
            | "codeValueSeparator"
            | "parserType"
            | "name"
            | "dataset"
        >;
    };
}

export interface D2SectionSchema {
    name: "D2Section";
    model: D2Section;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        categoryCombos: D2CategoryComboSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        dataElements: D2DataElementSchema[];
        dataSet: D2DataSetSchema;
        description: string;
        displayName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        greyedFields: D2DataElementOperandSchema[];
        href: string;
        id: Id;
        indicators: D2IndicatorSchema[];
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        name: string;
        publicAccess: string;
        sharing: any;
        showColumnTotals: boolean;
        showRowTotals: boolean;
        sortOrder: number;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2Section, keyof D2Section>;
        $identifiable: Preset<D2Section, FieldPresets["identifiable"]>;
        $nameable: Preset<D2Section, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2Section,
            | "code"
            | "greyedFields"
            | "description"
            | "lastUpdated"
            | "translations"
            | "id"
            | "dataSet"
            | "dataElements"
            | "showColumnTotals"
            | "lastUpdatedBy"
            | "created"
            | "attributeValues"
            | "indicators"
            | "sortOrder"
            | "name"
            | "showRowTotals"
        >;
        $owner: Preset<
            D2Section,
            | "code"
            | "greyedFields"
            | "description"
            | "lastUpdated"
            | "translations"
            | "id"
            | "dataSet"
            | "dataElements"
            | "showColumnTotals"
            | "lastUpdatedBy"
            | "created"
            | "attributeValues"
            | "indicators"
            | "sortOrder"
            | "name"
            | "showRowTotals"
        >;
    };
}

export interface D2SqlViewSchema {
    name: "D2SqlView";
    model: D2SqlView;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        cacheStrategy:
            | "NO_CACHE"
            | "CACHE_1_MINUTE"
            | "CACHE_5_MINUTES"
            | "CACHE_10_MINUTES"
            | "CACHE_15_MINUTES"
            | "CACHE_30_MINUTES"
            | "CACHE_1_HOUR"
            | "CACHE_6AM_TOMORROW"
            | "CACHE_TWO_WEEKS"
            | "RESPECT_SYSTEM_SETTING";
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        description: string;
        displayName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        name: string;
        publicAccess: string;
        sharing: any;
        sqlQuery: string;
        translations: D2Translation[];
        type: "VIEW" | "MATERIALIZED_VIEW" | "QUERY";
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2SqlView, keyof D2SqlView>;
        $identifiable: Preset<D2SqlView, FieldPresets["identifiable"]>;
        $nameable: Preset<D2SqlView, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2SqlView,
            | "code"
            | "description"
            | "type"
            | "lastUpdated"
            | "id"
            | "lastUpdatedBy"
            | "sqlQuery"
            | "created"
            | "attributeValues"
            | "sharing"
            | "createdBy"
            | "name"
            | "cacheStrategy"
        >;
        $owner: Preset<
            D2SqlView,
            | "code"
            | "description"
            | "type"
            | "lastUpdated"
            | "id"
            | "lastUpdatedBy"
            | "sqlQuery"
            | "created"
            | "attributeValues"
            | "sharing"
            | "createdBy"
            | "name"
            | "cacheStrategy"
        >;
    };
}

export interface D2TrackedEntityAttributeSchema {
    name: "D2TrackedEntityAttribute";
    model: D2TrackedEntityAttribute;
    fields: {
        access: D2Access;
        aggregationType:
            | "SUM"
            | "AVERAGE"
            | "AVERAGE_SUM_ORG_UNIT"
            | "LAST"
            | "LAST_AVERAGE_ORG_UNIT"
            | "LAST_IN_PERIOD"
            | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
            | "FIRST"
            | "FIRST_AVERAGE_ORG_UNIT"
            | "COUNT"
            | "STDDEV"
            | "VARIANCE"
            | "MIN"
            | "MAX"
            | "NONE"
            | "CUSTOM"
            | "DEFAULT";
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        confidential: boolean;
        created: string;
        createdBy: D2UserSchema;
        description: string;
        dimensionItem: string;
        dimensionItemType:
            | "DATA_ELEMENT"
            | "DATA_ELEMENT_OPERAND"
            | "INDICATOR"
            | "REPORTING_RATE"
            | "PROGRAM_DATA_ELEMENT"
            | "PROGRAM_ATTRIBUTE"
            | "PROGRAM_INDICATOR"
            | "PERIOD"
            | "ORGANISATION_UNIT"
            | "CATEGORY_OPTION"
            | "OPTION_GROUP"
            | "DATA_ELEMENT_GROUP"
            | "ORGANISATION_UNIT_GROUP"
            | "CATEGORY_OPTION_GROUP";
        displayDescription: string;
        displayFormName: string;
        displayInListNoProgram: boolean;
        displayName: string;
        displayOnVisitSchedule: boolean;
        displayShortName: string;
        expression: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        fieldMask: string;
        formName: string;
        generated: boolean;
        href: string;
        id: Id;
        inherit: boolean;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        legendSet: D2LegendSetSchema;
        legendSets: D2LegendSetSchema[];
        name: string;
        optionSet: D2OptionSetSchema;
        optionSetValue: boolean;
        orgunitScope: boolean;
        pattern: string;
        periodOffset: number;
        publicAccess: string;
        sharing: any;
        shortName: string;
        skipSynchronization: boolean;
        sortOrderInListNoProgram: number;
        sortOrderInVisitSchedule: number;
        style: D2Style;
        translations: D2Translation[];
        unique: boolean;
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
        valueType:
            | "TEXT"
            | "LONG_TEXT"
            | "LETTER"
            | "PHONE_NUMBER"
            | "EMAIL"
            | "BOOLEAN"
            | "TRUE_ONLY"
            | "DATE"
            | "DATETIME"
            | "TIME"
            | "NUMBER"
            | "UNIT_INTERVAL"
            | "PERCENTAGE"
            | "INTEGER"
            | "INTEGER_POSITIVE"
            | "INTEGER_NEGATIVE"
            | "INTEGER_ZERO_OR_POSITIVE"
            | "TRACKER_ASSOCIATE"
            | "USERNAME"
            | "COORDINATE"
            | "ORGANISATION_UNIT"
            | "AGE"
            | "URL"
            | "FILE_RESOURCE"
            | "IMAGE";
    };
    fieldPresets: {
        $all: Preset<D2TrackedEntityAttribute, keyof D2TrackedEntityAttribute>;
        $identifiable: Preset<D2TrackedEntityAttribute, FieldPresets["identifiable"]>;
        $nameable: Preset<D2TrackedEntityAttribute, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2TrackedEntityAttribute,
            | "lastUpdated"
            | "generated"
            | "translations"
            | "valueType"
            | "id"
            | "confidential"
            | "lastUpdatedBy"
            | "created"
            | "attributeValues"
            | "sharing"
            | "unique"
            | "name"
            | "legendSets"
            | "style"
            | "shortName"
            | "aggregationType"
            | "code"
            | "displayInListNoProgram"
            | "pattern"
            | "description"
            | "skipSynchronization"
            | "sortOrderInListNoProgram"
            | "optionSet"
            | "displayOnVisitSchedule"
            | "formName"
            | "sortOrderInVisitSchedule"
            | "orgunitScope"
            | "fieldMask"
            | "expression"
            | "createdBy"
            | "inherit"
        >;
        $owner: Preset<
            D2TrackedEntityAttribute,
            | "lastUpdated"
            | "generated"
            | "translations"
            | "valueType"
            | "id"
            | "confidential"
            | "lastUpdatedBy"
            | "created"
            | "attributeValues"
            | "sharing"
            | "unique"
            | "name"
            | "legendSets"
            | "style"
            | "shortName"
            | "aggregationType"
            | "code"
            | "displayInListNoProgram"
            | "pattern"
            | "description"
            | "skipSynchronization"
            | "sortOrderInListNoProgram"
            | "optionSet"
            | "displayOnVisitSchedule"
            | "formName"
            | "sortOrderInVisitSchedule"
            | "orgunitScope"
            | "fieldMask"
            | "expression"
            | "createdBy"
            | "inherit"
        >;
    };
}

export interface D2TrackedEntityAttributeValueSchema {
    name: "D2TrackedEntityAttributeValue";
    model: D2TrackedEntityAttributeValue;
    fields: {
        created: string;
        lastUpdated: string;
        storedBy: string;
        trackedEntityAttribute: D2TrackedEntityAttributeSchema;
        trackedEntityInstance: D2TrackedEntityInstanceSchema;
        value: string;
    };
    fieldPresets: {
        $all: Preset<D2TrackedEntityAttributeValue, keyof D2TrackedEntityAttributeValue>;
        $identifiable: Preset<D2TrackedEntityAttributeValue, FieldPresets["identifiable"]>;
        $nameable: Preset<D2TrackedEntityAttributeValue, FieldPresets["nameable"]>;
        $persisted: Preset<D2TrackedEntityAttributeValue, "lastUpdated" | "storedBy" | "created">;
        $owner: Preset<D2TrackedEntityAttributeValue, "lastUpdated" | "storedBy" | "created">;
    };
}

export interface D2TrackedEntityDataElementDimensionSchema {
    name: "D2TrackedEntityDataElementDimension";
    model: D2TrackedEntityDataElementDimension;
    fields: {
        dataElement: D2DataElementSchema;
        filter: string;
        legendSet: D2LegendSetSchema;
        programStage: D2ProgramStageSchema;
    };
    fieldPresets: {
        $all: Preset<D2TrackedEntityDataElementDimension, keyof D2TrackedEntityDataElementDimension>;
        $identifiable: Preset<D2TrackedEntityDataElementDimension, FieldPresets["identifiable"]>;
        $nameable: Preset<D2TrackedEntityDataElementDimension, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2TrackedEntityDataElementDimension,
            "filter" | "legendSet" | "programStage" | "dataElement"
        >;
        $owner: Preset<D2TrackedEntityDataElementDimension, "filter" | "legendSet" | "programStage" | "dataElement">;
    };
}

export interface D2TrackedEntityInstanceSchema {
    name: "D2TrackedEntityInstance";
    model: D2TrackedEntityInstance;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        created: string;
        createdAtClient: string;
        createdBy: D2UserSchema;
        createdByUserInfo: any;
        deleted: boolean;
        displayName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        geometry: any;
        href: string;
        id: Id;
        inactive: boolean;
        lastUpdated: string;
        lastUpdatedAtClient: string;
        lastUpdatedBy: D2UserSchema;
        lastUpdatedByUserInfo: any;
        name: string;
        organisationUnit: D2OrganisationUnitSchema;
        programInstances: D2ProgramInstanceSchema[];
        programOwners: any[];
        publicAccess: string;
        relationshipItems: any[];
        sharing: any;
        storedBy: string;
        trackedEntityAttributeValues: D2TrackedEntityAttributeValueSchema[];
        trackedEntityType: D2TrackedEntityTypeSchema;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2TrackedEntityInstance, keyof D2TrackedEntityInstance>;
        $identifiable: Preset<D2TrackedEntityInstance, FieldPresets["identifiable"]>;
        $nameable: Preset<D2TrackedEntityInstance, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2TrackedEntityInstance,
            | "programOwners"
            | "code"
            | "storedBy"
            | "programInstances"
            | "organisationUnit"
            | "createdAtClient"
            | "lastUpdatedByUserInfo"
            | "lastUpdated"
            | "inactive"
            | "relationshipItems"
            | "id"
            | "createdByUserInfo"
            | "lastUpdatedBy"
            | "created"
            | "deleted"
            | "trackedEntityType"
            | "geometry"
            | "trackedEntityAttributeValues"
            | "lastUpdatedAtClient"
        >;
        $owner: Preset<
            D2TrackedEntityInstance,
            | "code"
            | "storedBy"
            | "organisationUnit"
            | "createdAtClient"
            | "lastUpdatedByUserInfo"
            | "lastUpdated"
            | "inactive"
            | "id"
            | "createdByUserInfo"
            | "lastUpdatedBy"
            | "created"
            | "deleted"
            | "trackedEntityType"
            | "geometry"
            | "lastUpdatedAtClient"
        >;
    };
}

export interface D2TrackedEntityInstanceFilterSchema {
    name: "D2TrackedEntityInstanceFilter";
    model: D2TrackedEntityInstanceFilter;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        description: string;
        displayDescription: string;
        displayName: string;
        enrollmentCreatedPeriod: any;
        enrollmentStatus: "ACTIVE" | "COMPLETED" | "CANCELLED";
        eventFilters: any[];
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        followup: boolean;
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        name: string;
        program: D2ProgramSchema;
        publicAccess: string;
        sharing: any;
        sortOrder: number;
        style: D2Style;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2TrackedEntityInstanceFilter, keyof D2TrackedEntityInstanceFilter>;
        $identifiable: Preset<D2TrackedEntityInstanceFilter, FieldPresets["identifiable"]>;
        $nameable: Preset<D2TrackedEntityInstanceFilter, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2TrackedEntityInstanceFilter,
            | "code"
            | "description"
            | "program"
            | "enrollmentCreatedPeriod"
            | "lastUpdated"
            | "translations"
            | "id"
            | "lastUpdatedBy"
            | "created"
            | "followup"
            | "eventFilters"
            | "enrollmentStatus"
            | "sortOrder"
            | "name"
            | "style"
        >;
        $owner: Preset<
            D2TrackedEntityInstanceFilter,
            | "code"
            | "description"
            | "program"
            | "enrollmentCreatedPeriod"
            | "lastUpdated"
            | "translations"
            | "id"
            | "lastUpdatedBy"
            | "created"
            | "followup"
            | "eventFilters"
            | "enrollmentStatus"
            | "sortOrder"
            | "name"
            | "style"
        >;
    };
}

export interface D2TrackedEntityProgramIndicatorDimensionSchema {
    name: "D2TrackedEntityProgramIndicatorDimension";
    model: D2TrackedEntityProgramIndicatorDimension;
    fields: {
        filter: string;
        legendSet: D2LegendSetSchema;
        programIndicator: D2ProgramIndicatorSchema;
    };
    fieldPresets: {
        $all: Preset<D2TrackedEntityProgramIndicatorDimension, keyof D2TrackedEntityProgramIndicatorDimension>;
        $identifiable: Preset<D2TrackedEntityProgramIndicatorDimension, FieldPresets["identifiable"]>;
        $nameable: Preset<D2TrackedEntityProgramIndicatorDimension, FieldPresets["nameable"]>;
        $persisted: Preset<D2TrackedEntityProgramIndicatorDimension, "filter" | "legendSet" | "programIndicator">;
        $owner: Preset<D2TrackedEntityProgramIndicatorDimension, "filter" | "legendSet" | "programIndicator">;
    };
}

export interface D2TrackedEntityTypeSchema {
    name: "D2TrackedEntityType";
    model: D2TrackedEntityType;
    fields: {
        access: D2Access;
        allowAuditLog: boolean;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        description: string;
        displayDescription: string;
        displayFormName: string;
        displayName: string;
        displayShortName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        featureType: "NONE" | "MULTI_POLYGON" | "POLYGON" | "POINT" | "SYMBOL";
        formName: string;
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        maxTeiCountToReturn: number;
        minAttributesRequiredToSearch: number;
        name: string;
        publicAccess: string;
        sharing: any;
        shortName: string;
        style: D2Style;
        trackedEntityTypeAttributes: D2TrackedEntityTypeAttributeSchema[];
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
    };
    fieldPresets: {
        $all: Preset<D2TrackedEntityType, keyof D2TrackedEntityType>;
        $identifiable: Preset<D2TrackedEntityType, FieldPresets["identifiable"]>;
        $nameable: Preset<D2TrackedEntityType, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2TrackedEntityType,
            | "code"
            | "trackedEntityTypeAttributes"
            | "description"
            | "lastUpdated"
            | "allowAuditLog"
            | "translations"
            | "formName"
            | "featureType"
            | "minAttributesRequiredToSearch"
            | "id"
            | "lastUpdatedBy"
            | "created"
            | "attributeValues"
            | "sharing"
            | "maxTeiCountToReturn"
            | "createdBy"
            | "name"
            | "style"
        >;
        $owner: Preset<
            D2TrackedEntityType,
            | "code"
            | "trackedEntityTypeAttributes"
            | "description"
            | "lastUpdated"
            | "allowAuditLog"
            | "translations"
            | "formName"
            | "featureType"
            | "minAttributesRequiredToSearch"
            | "id"
            | "lastUpdatedBy"
            | "created"
            | "attributeValues"
            | "sharing"
            | "maxTeiCountToReturn"
            | "createdBy"
            | "name"
            | "style"
        >;
    };
}

export interface D2TrackedEntityTypeAttributeSchema {
    name: "D2TrackedEntityTypeAttribute";
    model: D2TrackedEntityTypeAttribute;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        displayInList: boolean;
        displayName: string;
        displayShortName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        mandatory: boolean;
        name: string;
        publicAccess: string;
        searchable: boolean;
        sharing: any;
        trackedEntityAttribute: D2TrackedEntityAttributeSchema;
        trackedEntityType: D2TrackedEntityTypeSchema;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
        valueType:
            | "TEXT"
            | "LONG_TEXT"
            | "LETTER"
            | "PHONE_NUMBER"
            | "EMAIL"
            | "BOOLEAN"
            | "TRUE_ONLY"
            | "DATE"
            | "DATETIME"
            | "TIME"
            | "NUMBER"
            | "UNIT_INTERVAL"
            | "PERCENTAGE"
            | "INTEGER"
            | "INTEGER_POSITIVE"
            | "INTEGER_NEGATIVE"
            | "INTEGER_ZERO_OR_POSITIVE"
            | "TRACKER_ASSOCIATE"
            | "USERNAME"
            | "COORDINATE"
            | "ORGANISATION_UNIT"
            | "AGE"
            | "URL"
            | "FILE_RESOURCE"
            | "IMAGE";
    };
    fieldPresets: {
        $all: Preset<D2TrackedEntityTypeAttribute, keyof D2TrackedEntityTypeAttribute>;
        $identifiable: Preset<D2TrackedEntityTypeAttribute, FieldPresets["identifiable"]>;
        $nameable: Preset<D2TrackedEntityTypeAttribute, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2TrackedEntityTypeAttribute,
            | "code"
            | "mandatory"
            | "trackedEntityAttribute"
            | "lastUpdated"
            | "id"
            | "lastUpdatedBy"
            | "created"
            | "searchable"
            | "displayInList"
            | "trackedEntityType"
        >;
        $owner: Preset<
            D2TrackedEntityTypeAttribute,
            | "code"
            | "mandatory"
            | "trackedEntityAttribute"
            | "lastUpdated"
            | "id"
            | "lastUpdatedBy"
            | "created"
            | "searchable"
            | "displayInList"
            | "trackedEntityType"
        >;
    };
}

export interface D2UserSchema {
    name: "D2User";
    model: D2User;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        avatar: D2FileResourceSchema;
        birthday: string;
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        dataViewOrganisationUnits: D2OrganisationUnitSchema[];
        displayName: string;
        education: string;
        email: string;
        employer: string;
        externalAccess: boolean;
        facebookMessenger: string;
        favorite: boolean;
        favorites: string[];
        firstName: string;
        gender: string;
        href: string;
        id: Id;
        interests: string;
        introduction: string;
        jobTitle: string;
        languages: string;
        lastCheckedInterpretations: string;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        name: string;
        nationality: string;
        organisationUnits: D2OrganisationUnitSchema[];
        phoneNumber: string;
        publicAccess: string;
        sharing: any;
        skype: string;
        surname: string;
        teiSearchOrganisationUnits: D2OrganisationUnitSchema[];
        telegram: string;
        translations: D2Translation[];
        twitter: string;
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userCredentials: D2UserCredentialsSchema;
        userGroupAccesses: D2UserGroupAccessSchema[];
        userGroups: D2UserGroupSchema[];
        welcomeMessage: string;
        whatsApp: string;
    };
    fieldPresets: {
        $all: Preset<D2User, keyof D2User>;
        $identifiable: Preset<D2User, FieldPresets["identifiable"]>;
        $nameable: Preset<D2User, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2User,
            | "birthday"
            | "code"
            | "education"
            | "gender"
            | "jobTitle"
            | "skype"
            | "lastUpdated"
            | "teiSearchOrganisationUnits"
            | "twitter"
            | "surname"
            | "employer"
            | "id"
            | "organisationUnits"
            | "facebookMessenger"
            | "introduction"
            | "email"
            | "dataViewOrganisationUnits"
            | "whatsApp"
            | "languages"
            | "created"
            | "welcomeMessage"
            | "userCredentials"
            | "attributeValues"
            | "telegram"
            | "avatar"
            | "lastCheckedInterpretations"
            | "userGroups"
            | "firstName"
            | "phoneNumber"
            | "nationality"
            | "interests"
        >;
        $owner: Preset<
            D2User,
            | "birthday"
            | "code"
            | "education"
            | "gender"
            | "jobTitle"
            | "skype"
            | "lastUpdated"
            | "teiSearchOrganisationUnits"
            | "twitter"
            | "surname"
            | "employer"
            | "id"
            | "organisationUnits"
            | "facebookMessenger"
            | "introduction"
            | "email"
            | "dataViewOrganisationUnits"
            | "whatsApp"
            | "languages"
            | "created"
            | "welcomeMessage"
            | "userCredentials"
            | "attributeValues"
            | "telegram"
            | "avatar"
            | "lastCheckedInterpretations"
            | "firstName"
            | "phoneNumber"
            | "nationality"
            | "interests"
        >;
    };
}

export interface D2UserAccessSchema {
    name: "D2UserAccess";
    model: D2UserAccess;
    fields: {};
    fieldPresets: {
        $all: Preset<D2UserAccess, keyof D2UserAccess>;
        $identifiable: Preset<D2UserAccess, FieldPresets["identifiable"]>;
        $nameable: Preset<D2UserAccess, FieldPresets["nameable"]>;
        $persisted: Preset<D2UserAccess, never>;
        $owner: Preset<D2UserAccess, never>;
    };
}

export interface D2UserAuthorityGroupSchema {
    name: "D2UserAuthorityGroup";
    model: D2UserAuthorityGroup;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        authorities: string[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        description: string;
        displayName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        name: string;
        publicAccess: string;
        sharing: any;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
        users: D2UserSchema[];
    };
    fieldPresets: {
        $all: Preset<D2UserAuthorityGroup, keyof D2UserAuthorityGroup>;
        $identifiable: Preset<D2UserAuthorityGroup, FieldPresets["identifiable"]>;
        $nameable: Preset<D2UserAuthorityGroup, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2UserAuthorityGroup,
            | "code"
            | "description"
            | "lastUpdated"
            | "translations"
            | "id"
            | "lastUpdatedBy"
            | "created"
            | "sharing"
            | "authorities"
            | "createdBy"
            | "name"
        >;
        $owner: Preset<
            D2UserAuthorityGroup,
            | "code"
            | "description"
            | "lastUpdated"
            | "translations"
            | "id"
            | "lastUpdatedBy"
            | "created"
            | "sharing"
            | "authorities"
            | "createdBy"
            | "name"
        >;
    };
}

export interface D2UserCredentialsSchema {
    name: "D2UserCredentials";
    model: D2UserCredentials;
    fields: {
        access: D2Access;
        accountExpiry: string;
        attributeValues: D2AttributeValueSchema[];
        catDimensionConstraints: D2CategorySchema[];
        code: Id;
        cogsDimensionConstraints: D2CategoryOptionGroupSetSchema[];
        created: string;
        createdBy: D2UserSchema;
        disabled: boolean;
        displayName: string;
        externalAccess: boolean;
        externalAuth: boolean;
        favorite: boolean;
        favorites: string[];
        href: string;
        id: Id;
        invitation: boolean;
        lastLogin: string;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        ldapId: string;
        name: string;
        openId: string;
        password: string;
        passwordLastUpdated: string;
        publicAccess: string;
        selfRegistered: boolean;
        sharing: any;
        translations: D2Translation[];
        twoFA: boolean;
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
        userInfo: D2UserSchema;
        userRoles: D2UserAuthorityGroupSchema[];
        username: string;
    };
    fieldPresets: {
        $all: Preset<D2UserCredentials, keyof D2UserCredentials>;
        $identifiable: Preset<D2UserCredentials, FieldPresets["identifiable"]>;
        $nameable: Preset<D2UserCredentials, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2UserCredentials,
            | "lastLogin"
            | "userInfo"
            | "code"
            | "openId"
            | "externalAuth"
            | "cogsDimensionConstraints"
            | "accountExpiry"
            | "catDimensionConstraints"
            | "lastUpdated"
            | "password"
            | "ldapId"
            | "disabled"
            | "id"
            | "twoFA"
            | "passwordLastUpdated"
            | "lastUpdatedBy"
            | "invitation"
            | "created"
            | "selfRegistered"
            | "userRoles"
            | "createdBy"
            | "username"
        >;
        $owner: Preset<
            D2UserCredentials,
            | "lastLogin"
            | "userInfo"
            | "code"
            | "openId"
            | "externalAuth"
            | "cogsDimensionConstraints"
            | "accountExpiry"
            | "catDimensionConstraints"
            | "lastUpdated"
            | "password"
            | "ldapId"
            | "disabled"
            | "id"
            | "twoFA"
            | "passwordLastUpdated"
            | "lastUpdatedBy"
            | "invitation"
            | "created"
            | "selfRegistered"
            | "userRoles"
            | "createdBy"
            | "username"
        >;
    };
}

export interface D2UserGroupSchema {
    name: "D2UserGroup";
    model: D2UserGroup;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        displayName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        managedByGroups: D2UserGroupSchema[];
        managedGroups: D2UserGroupSchema[];
        name: string;
        publicAccess: string;
        sharing: any;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
        users: D2UserSchema[];
    };
    fieldPresets: {
        $all: Preset<D2UserGroup, keyof D2UserGroup>;
        $identifiable: Preset<D2UserGroup, FieldPresets["identifiable"]>;
        $nameable: Preset<D2UserGroup, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2UserGroup,
            | "code"
            | "managedByGroups"
            | "lastUpdated"
            | "translations"
            | "id"
            | "lastUpdatedBy"
            | "created"
            | "attributeValues"
            | "sharing"
            | "users"
            | "managedGroups"
            | "createdBy"
            | "name"
        >;
        $owner: Preset<
            D2UserGroup,
            | "code"
            | "lastUpdated"
            | "translations"
            | "id"
            | "lastUpdatedBy"
            | "created"
            | "attributeValues"
            | "sharing"
            | "users"
            | "managedGroups"
            | "createdBy"
            | "name"
        >;
    };
}

export interface D2UserGroupAccessSchema {
    name: "D2UserGroupAccess";
    model: D2UserGroupAccess;
    fields: {};
    fieldPresets: {
        $all: Preset<D2UserGroupAccess, keyof D2UserGroupAccess>;
        $identifiable: Preset<D2UserGroupAccess, FieldPresets["identifiable"]>;
        $nameable: Preset<D2UserGroupAccess, FieldPresets["nameable"]>;
        $persisted: Preset<D2UserGroupAccess, never>;
        $owner: Preset<D2UserGroupAccess, never>;
    };
}

export interface D2ValidationNotificationTemplateSchema {
    name: "D2ValidationNotificationTemplate";
    model: D2ValidationNotificationTemplate;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        displayMessageTemplate: string;
        displayName: string;
        displaySubjectTemplate: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        messageTemplate: string;
        name: string;
        notifyParentOrganisationUnitOnly: boolean;
        notifyUsersInHierarchyOnly: boolean;
        publicAccess: string;
        recipientUserGroups: D2UserGroupSchema[];
        sendStrategy: "COLLECTIVE_SUMMARY" | "SINGLE_NOTIFICATION";
        sharing: any;
        subjectTemplate: string;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
        validationRules: D2ValidationRuleSchema[];
    };
    fieldPresets: {
        $all: Preset<D2ValidationNotificationTemplate, keyof D2ValidationNotificationTemplate>;
        $identifiable: Preset<D2ValidationNotificationTemplate, FieldPresets["identifiable"]>;
        $nameable: Preset<D2ValidationNotificationTemplate, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2ValidationNotificationTemplate,
            | "code"
            | "recipientUserGroups"
            | "lastUpdated"
            | "translations"
            | "id"
            | "subjectTemplate"
            | "sendStrategy"
            | "lastUpdatedBy"
            | "validationRules"
            | "created"
            | "notifyUsersInHierarchyOnly"
            | "name"
            | "messageTemplate"
        >;
        $owner: Preset<
            D2ValidationNotificationTemplate,
            | "code"
            | "recipientUserGroups"
            | "lastUpdated"
            | "translations"
            | "id"
            | "subjectTemplate"
            | "sendStrategy"
            | "lastUpdatedBy"
            | "validationRules"
            | "created"
            | "notifyUsersInHierarchyOnly"
            | "name"
            | "messageTemplate"
        >;
    };
}

export interface D2ValidationResultSchema {
    name: "D2ValidationResult";
    model: D2ValidationResult;
    fields: {
        attributeOptionCombo: D2CategoryOptionComboSchema;
        created: string;
        dayInPeriod: number;
        id: string;
        leftsideValue: number;
        notificationSent: boolean;
        organisationUnit: D2OrganisationUnitSchema;
        period: any;
        rightsideValue: number;
        validationRule: D2ValidationRuleSchema;
    };
    fieldPresets: {
        $all: Preset<D2ValidationResult, keyof D2ValidationResult>;
        $identifiable: Preset<D2ValidationResult, FieldPresets["identifiable"]>;
        $nameable: Preset<D2ValidationResult, FieldPresets["nameable"]>;
        $persisted: Preset<D2ValidationResult, "created" | "rightsideValue" | "leftsideValue" | "notificationSent">;
        $owner: Preset<D2ValidationResult, "created" | "rightsideValue" | "leftsideValue" | "notificationSent">;
    };
}

export interface D2ValidationRuleSchema {
    name: "D2ValidationRule";
    model: D2ValidationRule;
    fields: {
        access: D2Access;
        aggregateExportAttributeOptionCombo: string;
        aggregateExportCategoryOptionCombo: string;
        aggregationType:
            | "SUM"
            | "AVERAGE"
            | "AVERAGE_SUM_ORG_UNIT"
            | "LAST"
            | "LAST_AVERAGE_ORG_UNIT"
            | "LAST_IN_PERIOD"
            | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
            | "FIRST"
            | "FIRST_AVERAGE_ORG_UNIT"
            | "COUNT"
            | "STDDEV"
            | "VARIANCE"
            | "MIN"
            | "MAX"
            | "NONE"
            | "CUSTOM"
            | "DEFAULT";
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        description: string;
        dimensionItem: string;
        dimensionItemType:
            | "DATA_ELEMENT"
            | "DATA_ELEMENT_OPERAND"
            | "INDICATOR"
            | "REPORTING_RATE"
            | "PROGRAM_DATA_ELEMENT"
            | "PROGRAM_ATTRIBUTE"
            | "PROGRAM_INDICATOR"
            | "PERIOD"
            | "ORGANISATION_UNIT"
            | "CATEGORY_OPTION"
            | "OPTION_GROUP"
            | "DATA_ELEMENT_GROUP"
            | "ORGANISATION_UNIT_GROUP"
            | "CATEGORY_OPTION_GROUP";
        displayDescription: string;
        displayFormName: string;
        displayInstruction: string;
        displayName: string;
        displayShortName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        formName: string;
        href: string;
        id: Id;
        importance: "HIGH" | "MEDIUM" | "LOW";
        instruction: string;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        leftSide: D2ExpressionSchema;
        legendSet: D2LegendSetSchema;
        legendSets: D2LegendSetSchema[];
        name: string;
        notificationTemplates: D2ValidationNotificationTemplateSchema[];
        operator:
            | "equal_to"
            | "not_equal_to"
            | "greater_than"
            | "greater_than_or_equal_to"
            | "less_than"
            | "less_than_or_equal_to"
            | "compulsory_pair"
            | "exclusive_pair";
        organisationUnitLevels: number[];
        periodOffset: number;
        periodType: string;
        publicAccess: string;
        rightSide: D2ExpressionSchema;
        sharing: any;
        shortName: string;
        skipFormValidation: boolean;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
        validationRuleGroups: D2ValidationRuleGroupSchema[];
    };
    fieldPresets: {
        $all: Preset<D2ValidationRule, keyof D2ValidationRule>;
        $identifiable: Preset<D2ValidationRule, FieldPresets["identifiable"]>;
        $nameable: Preset<D2ValidationRule, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2ValidationRule,
            | "validationRuleGroups"
            | "code"
            | "importance"
            | "description"
            | "operator"
            | "organisationUnitLevels"
            | "lastUpdated"
            | "leftSide"
            | "notificationTemplates"
            | "translations"
            | "id"
            | "lastUpdatedBy"
            | "created"
            | "attributeValues"
            | "rightSide"
            | "sharing"
            | "periodType"
            | "createdBy"
            | "instruction"
            | "name"
            | "skipFormValidation"
        >;
        $owner: Preset<
            D2ValidationRule,
            | "code"
            | "importance"
            | "description"
            | "operator"
            | "organisationUnitLevels"
            | "lastUpdated"
            | "leftSide"
            | "translations"
            | "id"
            | "lastUpdatedBy"
            | "created"
            | "attributeValues"
            | "rightSide"
            | "sharing"
            | "periodType"
            | "createdBy"
            | "instruction"
            | "name"
            | "skipFormValidation"
        >;
    };
}

export interface D2ValidationRuleGroupSchema {
    name: "D2ValidationRuleGroup";
    model: D2ValidationRuleGroup;
    fields: {
        access: D2Access;
        attributeValues: D2AttributeValueSchema[];
        code: Id;
        created: string;
        createdBy: D2UserSchema;
        description: string;
        displayName: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        href: string;
        id: Id;
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        name: string;
        publicAccess: string;
        sharing: any;
        translations: D2Translation[];
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
        validationRules: D2ValidationRuleSchema[];
    };
    fieldPresets: {
        $all: Preset<D2ValidationRuleGroup, keyof D2ValidationRuleGroup>;
        $identifiable: Preset<D2ValidationRuleGroup, FieldPresets["identifiable"]>;
        $nameable: Preset<D2ValidationRuleGroup, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2ValidationRuleGroup,
            | "lastUpdatedBy"
            | "code"
            | "validationRules"
            | "created"
            | "attributeValues"
            | "description"
            | "sharing"
            | "lastUpdated"
            | "createdBy"
            | "translations"
            | "name"
            | "id"
        >;
        $owner: Preset<
            D2ValidationRuleGroup,
            | "lastUpdatedBy"
            | "code"
            | "validationRules"
            | "created"
            | "attributeValues"
            | "description"
            | "sharing"
            | "lastUpdated"
            | "createdBy"
            | "translations"
            | "name"
            | "id"
        >;
    };
}

export interface D2VisualizationSchema {
    name: "D2Visualization";
    model: D2Visualization;
    fields: {
        access: D2Access;
        aggregationType:
            | "SUM"
            | "AVERAGE"
            | "AVERAGE_SUM_ORG_UNIT"
            | "LAST"
            | "LAST_AVERAGE_ORG_UNIT"
            | "LAST_IN_PERIOD"
            | "LAST_IN_PERIOD_AVERAGE_ORG_UNIT"
            | "FIRST"
            | "FIRST_AVERAGE_ORG_UNIT"
            | "COUNT"
            | "STDDEV"
            | "VARIANCE"
            | "MIN"
            | "MAX"
            | "NONE"
            | "CUSTOM"
            | "DEFAULT";
        attributeDimensions: any[];
        attributeValues: D2AttributeValueSchema[];
        axes: any[];
        baseLineLabel: string;
        baseLineValue: number;
        categoryDimensions: D2CategoryDimensionSchema[];
        categoryOptionGroupSetDimensions: D2CategoryOptionGroupSetDimensionSchema[];
        code: Id;
        colSubTotals: boolean;
        colTotals: boolean;
        colorSet: string;
        columnDimensions: string[];
        columns: any[];
        completedOnly: boolean;
        created: string;
        createdBy: D2UserSchema;
        cumulativeValues: boolean;
        dataDimensionItems: any[];
        dataElementDimensions: D2TrackedEntityDataElementDimensionSchema[];
        dataElementGroupSetDimensions: D2DataElementGroupSetDimensionSchema[];
        description: string;
        digitGroupSeparator: "COMMA" | "SPACE" | "NONE";
        displayBaseLineLabel: string;
        displayDensity: "COMFORTABLE" | "NORMAL" | "COMPACT" | "NONE";
        displayDescription: string;
        displayDomainAxisLabel: string;
        displayFormName: string;
        displayName: string;
        displayRangeAxisLabel: string;
        displayShortName: string;
        displaySubtitle: string;
        displayTargetLineLabel: string;
        displayTitle: string;
        domainAxisLabel: string;
        endDate: string;
        externalAccess: boolean;
        favorite: boolean;
        favorites: string[];
        filterDimensions: string[];
        filters: any[];
        fontSize: "LARGE" | "NORMAL" | "SMALL";
        fontStyle: any;
        formName: string;
        hideEmptyColumns: boolean;
        hideEmptyRowItems: "NONE" | "BEFORE_FIRST" | "AFTER_LAST" | "BEFORE_FIRST_AFTER_LAST" | "ALL";
        hideEmptyRows: boolean;
        hideLegend: boolean;
        hideSubtitle: boolean;
        hideTitle: boolean;
        href: string;
        id: Id;
        interpretations: D2InterpretationSchema[];
        itemOrganisationUnitGroups: D2OrganisationUnitGroupSchema[];
        lastUpdated: string;
        lastUpdatedBy: D2UserSchema;
        legend: any;
        legendDisplayStrategy: "FIXED" | "BY_DATA_ITEM";
        legendDisplayStyle: "FILL" | "TEXT";
        legendSet: D2LegendSetSchema;
        measureCriteria: string;
        name: string;
        noSpaceBetweenColumns: boolean;
        numberType: "VALUE" | "ROW_PERCENTAGE" | "COLUMN_PERCENTAGE";
        optionalAxes: D2Axis[];
        orgUnitField: string;
        organisationUnitGroupSetDimensions: D2OrganisationUnitGroupSetDimensionSchema[];
        organisationUnitLevels: number[];
        organisationUnits: D2OrganisationUnitSchema[];
        outlierAnalysis: any;
        parentGraphMap: D2MapSchema;
        percentStackedValues: boolean;
        periods: any[];
        programIndicatorDimensions: D2TrackedEntityProgramIndicatorDimensionSchema[];
        publicAccess: string;
        rangeAxisDecimals: number;
        rangeAxisLabel: string;
        rangeAxisMaxValue: number;
        rangeAxisMinValue: number;
        rangeAxisSteps: number;
        regression: boolean;
        regressionType: "NONE" | "LINEAR" | "POLYNOMIAL" | "LOESS";
        relativePeriods: any;
        reportingParams: D2ReportingParams;
        rowDimensions: string[];
        rowSubTotals: boolean;
        rowTotals: boolean;
        rows: any[];
        series: any[];
        sharing: any;
        shortName: string;
        showData: boolean;
        showDimensionLabels: boolean;
        showHierarchy: boolean;
        skipRounding: boolean;
        sortOrder: number;
        startDate: string;
        subscribed: boolean;
        subscribers: string[];
        subtitle: string;
        targetLineLabel: string;
        targetLineValue: number;
        timeField: string;
        title: string;
        topLimit: number;
        translations: D2Translation[];
        type:
            | "COLUMN"
            | "STACKED_COLUMN"
            | "BAR"
            | "STACKED_BAR"
            | "LINE"
            | "AREA"
            | "STACKED_AREA"
            | "PIE"
            | "RADAR"
            | "GAUGE"
            | "YEAR_OVER_YEAR_LINE"
            | "YEAR_OVER_YEAR_COLUMN"
            | "SINGLE_VALUE"
            | "PIVOT_TABLE"
            | "SCATTER"
            | "BUBBLE";
        user: D2UserSchema;
        userAccesses: D2UserAccessSchema[];
        userGroupAccesses: D2UserGroupAccessSchema[];
        userOrgUnitType: "DATA_CAPTURE" | "DATA_OUTPUT" | "TEI_SEARCH";
        userOrganisationUnit: boolean;
        userOrganisationUnitChildren: boolean;
        userOrganisationUnitGrandChildren: boolean;
        visualizationPeriodName: string;
        yearlySeries: string[];
    };
    fieldPresets: {
        $all: Preset<D2Visualization, keyof D2Visualization>;
        $identifiable: Preset<D2Visualization, FieldPresets["identifiable"]>;
        $nameable: Preset<D2Visualization, FieldPresets["nameable"]>;
        $persisted: Preset<
            D2Visualization,
            | "dataElementGroupSetDimensions"
            | "endDate"
            | "legend"
            | "userOrganisationUnitChildren"
            | "axes"
            | "legendDisplayStyle"
            | "type"
            | "hideEmptyColumns"
            | "measureCriteria"
            | "lastUpdated"
            | "translations"
            | "yearlySeries"
            | "userOrganisationUnit"
            | "rowSubTotals"
            | "filterDimensions"
            | "id"
            | "interpretations"
            | "subscribers"
            | "cumulativeValues"
            | "fontStyle"
            | "optionalAxes"
            | "showDimensionLabels"
            | "sortOrder"
            | "subtitle"
            | "fontSize"
            | "topLimit"
            | "startDate"
            | "userOrganisationUnitGrandChildren"
            | "percentStackedValues"
            | "noSpaceBetweenColumns"
            | "periods"
            | "categoryDimensions"
            | "showHierarchy"
            | "reportingParams"
            | "hideTitle"
            | "rowDimensions"
            | "series"
            | "colorSet"
            | "skipRounding"
            | "showData"
            | "numberType"
            | "hideEmptyRows"
            | "itemOrganisationUnitGroups"
            | "displayDensity"
            | "lastUpdatedBy"
            | "created"
            | "regressionType"
            | "columnDimensions"
            | "completedOnly"
            | "colTotals"
            | "sharing"
            | "name"
            | "hideEmptyRowItems"
            | "favorites"
            | "aggregationType"
            | "dataDimensionItems"
            | "code"
            | "categoryOptionGroupSetDimensions"
            | "hideSubtitle"
            | "description"
            | "organisationUnitGroupSetDimensions"
            | "title"
            | "hideLegend"
            | "organisationUnitLevels"
            | "legendDisplayStrategy"
            | "colSubTotals"
            | "relativePeriods"
            | "organisationUnits"
            | "rowTotals"
            | "outlierAnalysis"
            | "digitGroupSeparator"
            | "createdBy"
            | "regression"
            | "legendSet"
            | "userOrgUnitType"
        >;
        $owner: Preset<
            D2Visualization,
            | "dataElementGroupSetDimensions"
            | "endDate"
            | "legend"
            | "userOrganisationUnitChildren"
            | "axes"
            | "legendDisplayStyle"
            | "type"
            | "hideEmptyColumns"
            | "measureCriteria"
            | "lastUpdated"
            | "translations"
            | "yearlySeries"
            | "userOrganisationUnit"
            | "rowSubTotals"
            | "filterDimensions"
            | "id"
            | "subscribers"
            | "cumulativeValues"
            | "fontStyle"
            | "optionalAxes"
            | "showDimensionLabels"
            | "sortOrder"
            | "subtitle"
            | "fontSize"
            | "topLimit"
            | "startDate"
            | "userOrganisationUnitGrandChildren"
            | "percentStackedValues"
            | "noSpaceBetweenColumns"
            | "periods"
            | "categoryDimensions"
            | "showHierarchy"
            | "reportingParams"
            | "hideTitle"
            | "rowDimensions"
            | "series"
            | "colorSet"
            | "skipRounding"
            | "showData"
            | "numberType"
            | "hideEmptyRows"
            | "itemOrganisationUnitGroups"
            | "displayDensity"
            | "lastUpdatedBy"
            | "created"
            | "regressionType"
            | "columnDimensions"
            | "completedOnly"
            | "colTotals"
            | "sharing"
            | "name"
            | "hideEmptyRowItems"
            | "favorites"
            | "aggregationType"
            | "dataDimensionItems"
            | "code"
            | "categoryOptionGroupSetDimensions"
            | "hideSubtitle"
            | "description"
            | "organisationUnitGroupSetDimensions"
            | "title"
            | "hideLegend"
            | "organisationUnitLevels"
            | "legendDisplayStrategy"
            | "colSubTotals"
            | "relativePeriods"
            | "organisationUnits"
            | "rowTotals"
            | "outlierAnalysis"
            | "digitGroupSeparator"
            | "createdBy"
            | "regression"
            | "legendSet"
            | "userOrgUnitType"
        >;
    };
}

export type D2Model =
    | D2AnalyticsPeriodBoundary
    | D2AnalyticsTableHook
    | D2Attribute
    | D2AttributeValue
    | D2Category
    | D2CategoryCombo
    | D2CategoryDimension
    | D2CategoryOption
    | D2CategoryOptionCombo
    | D2CategoryOptionGroup
    | D2CategoryOptionGroupSet
    | D2CategoryOptionGroupSetDimension
    | D2Chart
    | D2Constant
    | D2Dashboard
    | D2DashboardItem
    | D2DataApprovalLevel
    | D2DataApprovalWorkflow
    | D2DataElement
    | D2DataElementGroup
    | D2DataElementGroupSet
    | D2DataElementGroupSetDimension
    | D2DataElementOperand
    | D2DataEntryForm
    | D2DataInputPeriod
    | D2DataSet
    | D2DataSetElement
    | D2DataSetNotificationTemplate
    | D2Document
    | D2EventChart
    | D2EventReport
    | D2Expression
    | D2ExternalFileResource
    | D2ExternalMapLayer
    | D2FileResource
    | D2Icon
    | D2Indicator
    | D2IndicatorGroup
    | D2IndicatorGroupSet
    | D2IndicatorType
    | D2Interpretation
    | D2InterpretationComment
    | D2JobConfiguration
    | D2KeyJsonValue
    | D2Legend
    | D2LegendSet
    | D2Map
    | D2MapView
    | D2MessageConversation
    | D2MetadataVersion
    | D2MinMaxDataElement
    | D2OAuth2Client
    | D2Option
    | D2OptionGroup
    | D2OptionGroupSet
    | D2OptionSet
    | D2OrganisationUnit
    | D2OrganisationUnitGroup
    | D2OrganisationUnitGroupSet
    | D2OrganisationUnitGroupSetDimension
    | D2OrganisationUnitLevel
    | D2Predictor
    | D2PredictorGroup
    | D2Program
    | D2ProgramDataElementDimensionItem
    | D2ProgramIndicator
    | D2ProgramIndicatorGroup
    | D2ProgramInstance
    | D2ProgramNotificationTemplate
    | D2ProgramRule
    | D2ProgramRuleAction
    | D2ProgramRuleVariable
    | D2ProgramSection
    | D2ProgramStage
    | D2ProgramStageDataElement
    | D2ProgramStageInstance
    | D2ProgramStageInstanceFilter
    | D2ProgramStageSection
    | D2ProgramTrackedEntityAttribute
    | D2ProgramTrackedEntityAttributeDimensionItem
    | D2ProgramTrackedEntityAttributeGroup
    | D2PushAnalysis
    | D2Relationship
    | D2RelationshipType
    | D2Report
    | D2ReportTable
    | D2ReportingRate
    | D2SMSCommand
    | D2Section
    | D2SqlView
    | D2TrackedEntityAttribute
    | D2TrackedEntityAttributeValue
    | D2TrackedEntityDataElementDimension
    | D2TrackedEntityInstance
    | D2TrackedEntityInstanceFilter
    | D2TrackedEntityProgramIndicatorDimension
    | D2TrackedEntityType
    | D2TrackedEntityTypeAttribute
    | D2User
    | D2UserAccess
    | D2UserAuthorityGroup
    | D2UserCredentials
    | D2UserGroup
    | D2UserGroupAccess
    | D2ValidationNotificationTemplate
    | D2ValidationResult
    | D2ValidationRule
    | D2ValidationRuleGroup
    | D2Visualization;

export const models: Record<keyof D2ModelSchemas, D2SchemaProperties> = {
    analyticsPeriodBoundaries: {
        klass: "org.hisp.dhis.program.AnalyticsPeriodBoundary",
        shareable: false,
        metadata: false,
        plural: "analyticsPeriodBoundaries",
        displayName: "Analytics Period Boundary",
        collectionName: "analyticsPeriodBoundaries",
        nameableObject: false,
        translatable: false,
        identifiableObject: true,
        dataShareable: false,
        name: "analyticsPeriodBoundary",
        persisted: true,
        embeddedObject: true,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "offsetPeriodType",
                fieldName: "offsetPeriodType",
                propertyType: "TEXT",
                klass: "org.hisp.dhis.period.PeriodType",
            },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            {
                name: "analyticsPeriodBoundaryType",
                fieldName: "analyticsPeriodBoundaryType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.program.AnalyticsPeriodBoundaryType",
            },
            {
                name: "boundaryTarget",
                fieldName: "boundaryTarget",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "offsetPeriods",
                fieldName: "offsetPeriods",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
        ],
    },
    analyticsTableHooks: {
        klass: "org.hisp.dhis.analytics.AnalyticsTableHook",
        shareable: false,
        metadata: true,
        relativeApiEndpoint: "/analyticsTableHooks",
        plural: "analyticsTableHooks",
        displayName: "Analytics Table Hook",
        collectionName: "analyticsTableHooks",
        nameableObject: false,
        translatable: false,
        identifiableObject: true,
        dataShareable: false,
        name: "analyticsTableHook",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "analyticsTableType",
                fieldName: "analyticsTableType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.analytics.AnalyticsTableType",
            },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "sql", fieldName: "sql", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            {
                name: "phase",
                fieldName: "phase",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.analytics.AnalyticsTablePhase",
            },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "resourceTableType",
                fieldName: "resourceTableType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.resourcetable.ResourceTableType",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    attributes: {
        klass: "org.hisp.dhis.attribute.Attribute",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/attributes",
        plural: "attributes",
        displayName: "Attribute",
        collectionName: "attributes",
        nameableObject: true,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "attribute",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "indicatorAttribute",
                fieldName: "indicatorAttribute",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "indicatorGroupAttribute",
                fieldName: "indicatorGroupAttribute",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "userGroupAttribute",
                fieldName: "userGroupAttribute",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "dataElementAttribute",
                fieldName: "dataElementAttribute",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "constantAttribute",
                fieldName: "constantAttribute",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "valueType",
                fieldName: "valueType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.ValueType",
            },
            {
                name: "categoryOptionAttribute",
                fieldName: "categoryOptionAttribute",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            {
                name: "optionSetAttribute",
                fieldName: "optionSetAttribute",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "displayDescription", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "sqlViewAttribute",
                fieldName: "sqlViewAttribute",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "legendSetAttribute",
                fieldName: "legendSetAttribute",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            { name: "displayFormName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "trackedEntityAttributeAttribute",
                fieldName: "trackedEntityAttributeAttribute",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "organisationUnitAttribute",
                fieldName: "organisationUnitAttribute",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "dataSetAttribute",
                fieldName: "dataSetAttribute",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "documentAttribute",
                fieldName: "documentAttribute",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "unique",
                fieldName: "unique",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "sortOrder",
                fieldName: "sortOrder",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "validationRuleGroupAttribute",
                fieldName: "validationRuleGroupAttribute",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "shortName",
                fieldName: "shortName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "dataElementGroupAttribute",
                fieldName: "dataElementGroupAttribute",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "sectionAttribute",
                fieldName: "sectionAttribute",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "trackedEntityTypeAttribute",
                fieldName: "trackedEntityTypeAttribute",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "userAttribute",
                fieldName: "userAttribute",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "mandatory",
                fieldName: "mandatory",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "categoryOptionGroupAttribute",
                fieldName: "categoryOptionGroupAttribute",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            { name: "displayShortName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "programStageAttribute",
                fieldName: "programStageAttribute",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "programAttribute",
                fieldName: "programAttribute",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "optionSet",
                fieldName: "optionSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.option.OptionSet",
            },
            {
                name: "categoryAttribute",
                fieldName: "categoryAttribute",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "categoryOptionComboAttribute",
                fieldName: "categoryOptionComboAttribute",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "formName",
                fieldName: "formName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "categoryOptionGroupSetAttribute",
                fieldName: "categoryOptionGroupSetAttribute",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "validationRuleAttribute",
                fieldName: "validationRuleAttribute",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "programIndicatorAttribute",
                fieldName: "programIndicatorAttribute",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "organisationUnitGroupAttribute",
                fieldName: "organisationUnitGroupAttribute",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "dataElementGroupSetAttribute",
                fieldName: "dataElementGroupSetAttribute",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "organisationUnitGroupSetAttribute",
                fieldName: "organisationUnitGroupSetAttribute",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            {
                name: "optionAttribute",
                fieldName: "optionAttribute",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
        ],
    },
    attributeValues: {
        klass: "org.hisp.dhis.attribute.AttributeValue",
        shareable: false,
        metadata: false,
        plural: "attributeValues",
        displayName: "Attribute Value",
        collectionName: "attributeValues",
        nameableObject: false,
        translatable: false,
        identifiableObject: false,
        dataShareable: false,
        name: "attributeValues",
        persisted: false,
        embeddedObject: true,
        properties: [
            {
                name: "attribute",
                fieldName: "attribute",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.attribute.Attribute",
            },
            { name: "value", fieldName: "value", propertyType: "TEXT", klass: "java.lang.String" },
        ],
    },
    categories: {
        klass: "org.hisp.dhis.category.Category",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/categories",
        plural: "categories",
        displayName: "Category",
        collectionName: "categories",
        nameableObject: true,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "category",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "dataDimensionType",
                fieldName: "dataDimensionType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.DataDimensionType",
            },
            {
                name: "aggregationType",
                fieldName: "aggregationType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.analytics.AggregationType",
            },
            {
                name: "dimensionType",
                fieldName: "dimensionType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.DimensionType",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "displayShortName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "formName",
                fieldName: "formName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "categoryCombo",
                fieldName: "categoryCombos",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.category.CategoryCombo",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "categoryOption",
                fieldName: "categoryOptions",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.category.CategoryOption",
            },
            { name: "dimension", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "displayDescription", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "programStage",
                fieldName: "programStage",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.program.ProgramStage",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "allItems",
                fieldName: "allItems",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "dimensionalKeywords",
                fieldName: "dimensionalKeywords",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.common.DimensionalKeywords",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            { name: "displayFormName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "filter",
                fieldName: "filter",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "legendSet",
                fieldName: "legendSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "dataDimension",
                fieldName: "dataDimension",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "shortName",
                fieldName: "shortName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            {
                name: "item",
                fieldName: "items",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.common.DimensionalItemObject",
            },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    categoryCombos: {
        klass: "org.hisp.dhis.category.CategoryCombo",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/categoryCombos",
        plural: "categoryCombos",
        displayName: "Category Combo",
        collectionName: "categoryCombos",
        nameableObject: false,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "categoryCombo",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "dataDimensionType",
                fieldName: "dataDimensionType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.DataDimensionType",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            {
                name: "category",
                fieldName: "categories",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.category.Category",
            },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "categoryOptionCombo",
                fieldName: "optionCombos",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.category.CategoryOptionCombo",
            },
            { name: "isDefault", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "skipTotal",
                fieldName: "skipTotal",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    categoryDimensions: {
        klass: "org.hisp.dhis.category.CategoryDimension",
        shareable: false,
        metadata: false,
        plural: "categoryDimensions",
        displayName: "Category Dimension",
        collectionName: "categoryDimensions",
        nameableObject: false,
        translatable: false,
        identifiableObject: false,
        dataShareable: false,
        name: "categoryDimension",
        persisted: true,
        embeddedObject: true,
        properties: [
            {
                name: "categoryOption",
                fieldName: "items",
                propertyType: "REFERENCE",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.category.CategoryOption",
            },
            {
                name: "category",
                fieldName: "dimension",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.category.Category",
            },
        ],
    },
    categoryOptions: {
        klass: "org.hisp.dhis.category.CategoryOption",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/categoryOptions",
        plural: "categoryOptions",
        displayName: "Category Option",
        collectionName: "categoryOptions",
        nameableObject: true,
        translatable: true,
        identifiableObject: true,
        dataShareable: true,
        name: "categoryOption",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "aggregationType",
                fieldName: "aggregationType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.analytics.AggregationType",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "endDate",
                fieldName: "endDate",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "displayShortName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "periodOffset",
                fieldName: "periodOffset",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "formName",
                fieldName: "formName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            {
                name: "category",
                fieldName: "categories",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.category.Category",
            },
            {
                name: "organisationUnit",
                fieldName: "organisationUnits",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.organisationunit.OrganisationUnit",
            },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "displayDescription", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            { name: "dimensionItem", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            { name: "displayFormName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "categoryOptionCombo",
                fieldName: "categoryOptionCombos",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.category.CategoryOptionCombo",
            },
            { name: "isDefault", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "categoryOptionGroup",
                fieldName: "groups",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.category.CategoryOptionGroup",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "legendSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "legendSets",
                fieldName: "legendSets",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "style",
                fieldName: "style",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.common.ObjectStyle",
            },
            {
                name: "shortName",
                fieldName: "shortName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "startDate",
                fieldName: "startDate",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "dimensionItemType",
                fieldName: "dimensionItemType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.DimensionItemType",
            },
        ],
    },
    categoryOptionCombos: {
        klass: "org.hisp.dhis.category.CategoryOptionCombo",
        shareable: false,
        metadata: true,
        relativeApiEndpoint: "/categoryOptionCombos",
        plural: "categoryOptionCombos",
        displayName: "Category Option Combo",
        collectionName: "categoryOptionCombos",
        nameableObject: true,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "categoryOptionCombo",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "aggregationType",
                fieldName: "aggregationType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.analytics.AggregationType",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "displayShortName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "periodOffset",
                fieldName: "periodOffset",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "ignoreApproval",
                fieldName: "ignoreApproval",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "categoryCombo",
                fieldName: "categoryCombo",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.category.CategoryCombo",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "formName",
                fieldName: "formName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "categoryOption",
                fieldName: "categoryOptions",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.category.CategoryOption",
            },
            { name: "displayDescription", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            { name: "dimensionItem", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            { name: "displayFormName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "legendSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "legendSets",
                fieldName: "legendSets",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "shortName",
                fieldName: "shortName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "dimensionItemType",
                fieldName: "dimensionItemType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.DimensionItemType",
            },
        ],
    },
    categoryOptionGroups: {
        klass: "org.hisp.dhis.category.CategoryOptionGroup",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/categoryOptionGroups",
        plural: "categoryOptionGroups",
        displayName: "Category Option Group",
        collectionName: "categoryOptionGroups",
        nameableObject: true,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "categoryOptionGroup",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "dataDimensionType",
                fieldName: "dataDimensionType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.DataDimensionType",
            },
            {
                name: "aggregationType",
                fieldName: "aggregationType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.analytics.AggregationType",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "displayShortName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "periodOffset",
                fieldName: "periodOffset",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "formName",
                fieldName: "formName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "categoryOption",
                fieldName: "members",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.category.CategoryOption",
            },
            { name: "displayDescription", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            { name: "dimensionItem", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "groupSet",
                fieldName: "groupSets",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.category.CategoryOptionGroupSet",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            { name: "displayFormName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "legendSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "legendSets",
                fieldName: "legendSets",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "shortName",
                fieldName: "shortName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "dimensionItemType",
                fieldName: "dimensionItemType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.DimensionItemType",
            },
        ],
    },
    categoryOptionGroupSets: {
        klass: "org.hisp.dhis.category.CategoryOptionGroupSet",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/categoryOptionGroupSets",
        plural: "categoryOptionGroupSets",
        displayName: "Category Option Group Set",
        collectionName: "categoryOptionGroupSets",
        nameableObject: true,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "categoryOptionGroupSet",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "dataDimensionType",
                fieldName: "dataDimensionType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.DataDimensionType",
            },
            {
                name: "aggregationType",
                fieldName: "aggregationType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.analytics.AggregationType",
            },
            {
                name: "dimensionType",
                fieldName: "dimensionType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.DimensionType",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "displayShortName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "formName",
                fieldName: "formName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "dimension", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "displayDescription", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "programStage",
                fieldName: "programStage",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.program.ProgramStage",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "allItems",
                fieldName: "allItems",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "dimensionalKeywords",
                fieldName: "dimensionalKeywords",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.common.DimensionalKeywords",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            { name: "displayFormName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "filter",
                fieldName: "filter",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "categoryOptionGroup",
                fieldName: "members",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.category.CategoryOptionGroup",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "legendSet",
                fieldName: "legendSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "dataDimension",
                fieldName: "dataDimension",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "shortName",
                fieldName: "shortName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            {
                name: "item",
                fieldName: "items",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.common.DimensionalItemObject",
            },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    categoryOptionGroupSetDimensions: {
        klass: "org.hisp.dhis.category.CategoryOptionGroupSetDimension",
        shareable: false,
        metadata: false,
        plural: "categoryOptionGroupSetDimensions",
        displayName: "Category Option Group Set Dimension",
        collectionName: "categoryOptionGroupSetDimensions",
        nameableObject: false,
        translatable: false,
        identifiableObject: false,
        dataShareable: false,
        name: "categoryOptionGroupSetDimension",
        persisted: true,
        embeddedObject: true,
        properties: [
            {
                name: "categoryOptionGroup",
                fieldName: "items",
                propertyType: "REFERENCE",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.category.CategoryOptionGroup",
            },
            {
                name: "categoryOptionGroupSet",
                fieldName: "dimension",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.category.CategoryOptionGroupSet",
            },
        ],
    },
    charts: {
        klass: "org.hisp.dhis.chart.Chart",
        shareable: false,
        metadata: true,
        relativeApiEndpoint: "/charts",
        plural: "charts",
        displayName: "Chart",
        collectionName: "charts",
        nameableObject: true,
        translatable: false,
        identifiableObject: true,
        dataShareable: false,
        name: "chart",
        persisted: false,
        embeddedObject: false,
        properties: [
            {
                name: "dataElementGroupSetDimension",
                fieldName: "dataElementGroupSetDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.dataelement.DataElementGroupSetDimension",
            },
            {
                name: "showData",
                fieldName: "showData",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "orgUnitField",
                fieldName: "orgUnitField",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "endDate",
                fieldName: "endDate",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "baseLineValue",
                fieldName: "baseLineValue",
                propertyType: "NUMBER",
                klass: "java.lang.Double",
            },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "userOrganisationUnitChildren",
                fieldName: "userOrganisationUnitChildren",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            { name: "displaySubtitle", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "type",
                fieldName: "type",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.chart.ChartType",
            },
            { name: "subscribed", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            { name: "displayTitle", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "displayTargetLineLabel", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "attributeDimension",
                fieldName: "attributeDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.trackedentity.TrackedEntityAttributeDimension",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "yearlySerie",
                fieldName: "yearlySeries",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.List",
                itemKlass: "java.lang.String",
            },
            {
                name: "parentGraphMap",
                fieldName: "parentGraphMap",
                propertyType: "COMPLEX",
                klass: "java.util.Map",
            },
            {
                name: "userOrganisationUnit",
                fieldName: "userOrganisationUnit",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "filterDimension",
                fieldName: "filterDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.List",
                itemKlass: "java.lang.String",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "interpretation",
                fieldName: "interpretations",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.interpretation.Interpretation",
            },
            {
                name: "itemOrganisationUnitGroup",
                fieldName: "itemOrganisationUnitGroups",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.organisationunit.OrganisationUnitGroup",
            },
            { name: "displayDescription", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            { name: "displayDomainAxisLabel", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "programIndicatorDimension",
                fieldName: "programIndicatorDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.trackedentity.TrackedEntityProgramIndicatorDimension",
            },
            {
                name: "domainAxisLabel",
                fieldName: "domainAxisLabel",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "subscriber",
                fieldName: "subscribers",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "rangeAxisLabel",
                fieldName: "rangeAxisLabel",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "regressionType",
                fieldName: "regressionType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.RegressionType",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "completedOnly",
                fieldName: "completedOnly",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "cumulativeValues",
                fieldName: "cumulativeValues",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            { name: "displayFormName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "subtitle",
                fieldName: "subtitle",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "sortOrder",
                fieldName: "sortOrder",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "rangeAxisDecimals",
                fieldName: "rangeAxisDecimals",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "shortName",
                fieldName: "shortName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "topLimit",
                fieldName: "topLimit",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "startDate",
                fieldName: "startDate",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "hideEmptyRowItems",
                fieldName: "hideEmptyRowItems",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.HideEmptyItemStrategy",
            },
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "dataDimensionItem",
                fieldName: "dataDimensionItems",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.common.DataDimensionItem",
            },
            {
                name: "aggregationType",
                fieldName: "aggregationType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.analytics.AggregationType",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "categoryOptionGroupSetDimension",
                fieldName: "categoryOptionGroupSetDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.category.CategoryOptionGroupSetDimension",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "userOrganisationUnitGrandChildren",
                fieldName: "userOrganisationUnitGrandChildren",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "column",
                fieldName: "columns",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.common.DimensionalObject",
            },
            {
                name: "hideSubtitle",
                fieldName: "hideSubtitle",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "organisationUnitGroupSetDimension",
                fieldName: "organisationUnitGroupSetDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.organisationunit.OrganisationUnitGroupSetDimension",
            },
            { name: "title", fieldName: "title", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "hideLegend",
                fieldName: "hideLegend",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            { name: "displayShortName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "organisationUnitLevel",
                fieldName: "organisationUnitLevels",
                propertyType: "COLLECTION",
                itemPropertyType: "INTEGER",
                klass: "java.util.List",
                itemKlass: "java.lang.Integer",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "rangeAxisMinValue",
                fieldName: "rangeAxisMinValue",
                propertyType: "NUMBER",
                klass: "java.lang.Double",
            },
            {
                name: "percentStackedValues",
                fieldName: "percentStackedValues",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "seriesItem",
                fieldName: "seriesItems",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.chart.Series",
            },
            {
                name: "legendDisplayStrategy",
                fieldName: "legendDisplayStrategy",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.legend.LegendDisplayStrategy",
            },
            {
                name: "noSpaceBetweenColumns",
                fieldName: "noSpaceBetweenColumns",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "relativePeriods",
                fieldName: "relatives",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.period.RelativePeriods",
            },
            {
                name: "dataElementDimension",
                fieldName: "dataElementDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.trackedentity.TrackedEntityDataElementDimension",
            },
            {
                name: "rangeAxisSteps",
                fieldName: "rangeAxisSteps",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "targetLineLabel",
                fieldName: "targetLineLabel",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "formName",
                fieldName: "formName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "period",
                fieldName: "periods",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.period.Period",
            },
            {
                name: "organisationUnit",
                fieldName: "organisationUnits",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.organisationunit.OrganisationUnit",
            },
            {
                name: "categoryDimension",
                fieldName: "categoryDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.category.CategoryDimension",
            },
            { name: "displayRangeAxisLabel", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "timeField",
                fieldName: "timeField",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "targetLineValue",
                fieldName: "targetLineValue",
                propertyType: "NUMBER",
                klass: "java.lang.Double",
            },
            {
                name: "filter",
                fieldName: "filters",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.common.DimensionalObject",
            },
            {
                name: "row",
                fieldName: "rows",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.common.DimensionalObject",
            },
            {
                name: "baseLineLabel",
                fieldName: "baseLineLabel",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "digitGroupSeparator",
                fieldName: "digitGroupSeparator",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.DigitGroupSeparator",
            },
            {
                name: "hideTitle",
                fieldName: "hideTitle",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "series",
                fieldName: "series",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "legendSet",
                fieldName: "legendSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "userOrgUnitType",
                fieldName: "userOrgUnitType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.analytics.UserOrgUnitType",
            },
            {
                name: "rangeAxisMaxValue",
                fieldName: "rangeAxisMaxValue",
                propertyType: "NUMBER",
                klass: "java.lang.Double",
            },
            {
                name: "category",
                fieldName: "category",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "displayBaseLineLabel", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
        ],
    },
    constants: {
        klass: "org.hisp.dhis.constant.Constant",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/constants",
        plural: "constants",
        displayName: "Constant",
        collectionName: "constants",
        nameableObject: true,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "constant",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "displayShortName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "formName",
                fieldName: "formName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "value",
                fieldName: "value",
                propertyType: "NUMBER",
                klass: "java.lang.Double",
            },
            { name: "displayDescription", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            { name: "displayFormName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "shortName",
                fieldName: "shortName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    dashboards: {
        klass: "org.hisp.dhis.dashboard.Dashboard",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/dashboards",
        plural: "dashboards",
        displayName: "Dashboard",
        collectionName: "dashboards",
        nameableObject: true,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "dashboard",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "displayShortName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "restrictFilters",
                fieldName: "restrictFilters",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "formName",
                fieldName: "formName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "displayDescription", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            { name: "displayFormName", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "itemCount", propertyType: "INTEGER", klass: "java.lang.Integer" },
            {
                name: "dashboardItem",
                fieldName: "items",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.dashboard.DashboardItem",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "shortName",
                fieldName: "shortName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "allowedFilter",
                fieldName: "allowedFilters",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.List",
                itemKlass: "java.lang.String",
            },
        ],
    },
    dashboardItems: {
        klass: "org.hisp.dhis.dashboard.DashboardItem",
        shareable: false,
        metadata: false,
        relativeApiEndpoint: "/dashboardItems",
        plural: "dashboardItems",
        displayName: "Dashboard Item",
        collectionName: "dashboardItems",
        nameableObject: false,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "dashboardItem",
        persisted: true,
        embeddedObject: true,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "report",
                fieldName: "reports",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.report.Report",
            },
            {
                name: "visualization",
                fieldName: "visualization",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.visualization.Visualization",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "type",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.dashboard.DashboardItemType",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "reportTable",
                fieldName: "reportTable",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.reporttable.ReportTable",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "appKey",
                fieldName: "appKey",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "text", fieldName: "text", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "map",
                fieldName: "map",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.mapping.Map",
            },
            { name: "contentCount", propertyType: "INTEGER", klass: "java.lang.Integer" },
            {
                name: "height",
                fieldName: "height",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "shape",
                fieldName: "shape",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.dashboard.DashboardItemShape",
            },
            { name: "interpretationCount", propertyType: "INTEGER", klass: "java.lang.Integer" },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "resource",
                fieldName: "resources",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.document.Document",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "user",
                fieldName: "users",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.user.User",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "eventReport",
                fieldName: "eventReport",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.eventreport.EventReport",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "eventChart",
                fieldName: "eventChart",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.eventchart.EventChart",
            },
            {
                name: "width",
                fieldName: "width",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            { name: "x", fieldName: "x", propertyType: "INTEGER", klass: "java.lang.Integer" },
            {
                name: "messages",
                fieldName: "messages",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            { name: "y", fieldName: "y", propertyType: "INTEGER", klass: "java.lang.Integer" },
            {
                name: "interpretationLikeCount",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            {
                name: "chart",
                fieldName: "chart",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.chart.Chart",
            },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    dataApprovalLevels: {
        klass: "org.hisp.dhis.dataapproval.DataApprovalLevel",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/dataApprovalLevels",
        plural: "dataApprovalLevels",
        displayName: "Data Approval Level",
        collectionName: "dataApprovalLevels",
        nameableObject: false,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "dataApprovalLevel",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "categoryOptionGroupSet",
                fieldName: "categoryOptionGroupSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.category.CategoryOptionGroupSet",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "orgUnitLevelName",
                fieldName: "orgUnitLevelName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "level",
                fieldName: "level",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "orgUnitLevel",
                fieldName: "orgUnitLevel",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    dataApprovalWorkflows: {
        klass: "org.hisp.dhis.dataapproval.DataApprovalWorkflow",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/dataApprovalWorkflows",
        plural: "dataApprovalWorkflows",
        displayName: "Data Approval Workflow",
        collectionName: "dataApprovalWorkflows",
        nameableObject: false,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "dataApprovalWorkflow",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "dataApprovalLevel",
                fieldName: "levels",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.dataapproval.DataApprovalLevel",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "categoryCombo",
                fieldName: "categoryCombo",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.category.CategoryCombo",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "periodType",
                fieldName: "periodType",
                propertyType: "TEXT",
                klass: "org.hisp.dhis.period.PeriodType",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "dataSet",
                fieldName: "dataSets",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.dataset.DataSet",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    dataElements: {
        klass: "org.hisp.dhis.dataelement.DataElement",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/dataElements",
        plural: "dataElements",
        displayName: "Data Element",
        collectionName: "dataElements",
        nameableObject: true,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "dataElement",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "aggregationType",
                fieldName: "aggregationType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.analytics.AggregationType",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "domainType",
                fieldName: "domainType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.dataelement.DataElementDomain",
            },
            {
                name: "dataSetElements",
                fieldName: "dataSetElements",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.dataset.DataSetElement",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "displayShortName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "periodOffset",
                fieldName: "periodOffset",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "optionSet",
                fieldName: "optionSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.option.OptionSet",
            },
            {
                name: "categoryCombo",
                fieldName: "categoryCombo",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.category.CategoryCombo",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "valueType",
                fieldName: "valueType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.ValueType",
            },
            {
                name: "formName",
                fieldName: "formName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "commentOptionSet",
                fieldName: "commentOptionSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.option.OptionSet",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "fieldMask",
                fieldName: "fieldMask",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "displayDescription", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "valueTypeOptions",
                fieldName: "valueTypeOptions",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.common.ValueTypeOptions",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            { name: "dimensionItem", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "dataElementGroup",
                fieldName: "groups",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.dataelement.DataElementGroup",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            { name: "displayFormName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "zeroIsSignificant",
                fieldName: "zeroIsSignificant",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            { name: "url", fieldName: "url", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "legendSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "legendSets",
                fieldName: "legendSets",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "aggregationLevels",
                fieldName: "aggregationLevels",
                propertyType: "COLLECTION",
                itemPropertyType: "INTEGER",
                klass: "java.util.List",
                itemKlass: "java.lang.Integer",
            },
            {
                name: "style",
                fieldName: "style",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.common.ObjectStyle",
            },
            {
                name: "shortName",
                fieldName: "shortName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            { name: "optionSetValue", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "dimensionItemType",
                fieldName: "dimensionItemType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.DimensionItemType",
            },
        ],
    },
    dataElementGroups: {
        klass: "org.hisp.dhis.dataelement.DataElementGroup",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/dataElementGroups",
        plural: "dataElementGroups",
        displayName: "Data Element Group",
        collectionName: "dataElementGroups",
        nameableObject: true,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "dataElementGroup",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "aggregationType",
                fieldName: "aggregationType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.analytics.AggregationType",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "displayShortName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "periodOffset",
                fieldName: "periodOffset",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "formName",
                fieldName: "formName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "dataElement",
                fieldName: "members",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.dataelement.DataElement",
            },
            { name: "displayDescription", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            { name: "dimensionItem", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "groupSet",
                fieldName: "groupSets",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.dataelement.DataElementGroupSet",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            { name: "displayFormName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "legendSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "legendSets",
                fieldName: "legendSets",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "shortName",
                fieldName: "shortName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "dimensionItemType",
                fieldName: "dimensionItemType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.DimensionItemType",
            },
        ],
    },
    dataElementGroupSets: {
        klass: "org.hisp.dhis.dataelement.DataElementGroupSet",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/dataElementGroupSets",
        plural: "dataElementGroupSets",
        displayName: "Data Element Group Set",
        collectionName: "dataElementGroupSets",
        nameableObject: true,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "dataElementGroupSet",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "dataDimensionType",
                fieldName: "dataDimensionType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.DataDimensionType",
            },
            {
                name: "aggregationType",
                fieldName: "aggregationType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.analytics.AggregationType",
            },
            {
                name: "dimensionType",
                fieldName: "dimensionType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.DimensionType",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "displayShortName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "formName",
                fieldName: "formName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "dimension", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "displayDescription", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "programStage",
                fieldName: "programStage",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.program.ProgramStage",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "allItems",
                fieldName: "allItems",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "dataElementGroup",
                fieldName: "members",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.dataelement.DataElementGroup",
            },
            {
                name: "dimensionalKeywords",
                fieldName: "dimensionalKeywords",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.common.DimensionalKeywords",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            { name: "displayFormName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "filter",
                fieldName: "filter",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "compulsory",
                fieldName: "compulsory",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "legendSet",
                fieldName: "legendSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "dataDimension",
                fieldName: "dataDimension",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "shortName",
                fieldName: "shortName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            {
                name: "item",
                fieldName: "items",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.common.DimensionalItemObject",
            },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    dataElementGroupSetDimensions: {
        klass: "org.hisp.dhis.dataelement.DataElementGroupSetDimension",
        shareable: false,
        metadata: false,
        plural: "dataElementGroupSetDimensions",
        displayName: "Data Element Group Set Dimension",
        collectionName: "dataElementGroupSetDimensions",
        nameableObject: false,
        translatable: false,
        identifiableObject: false,
        dataShareable: false,
        name: "dataElementGroupSetDimension",
        persisted: true,
        embeddedObject: true,
        properties: [
            {
                name: "dataElementGroup",
                fieldName: "items",
                propertyType: "REFERENCE",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.dataelement.DataElementGroup",
            },
            {
                name: "dataElementGroupSet",
                fieldName: "dimension",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.dataelement.DataElementGroupSet",
            },
        ],
    },
    dataElementOperands: {
        klass: "org.hisp.dhis.dataelement.DataElementOperand",
        shareable: false,
        metadata: false,
        relativeApiEndpoint: "/dataElementOperands",
        plural: "dataElementOperands",
        displayName: "Data Element Operand",
        collectionName: "dataElementOperands",
        nameableObject: true,
        translatable: false,
        identifiableObject: true,
        dataShareable: false,
        name: "dataElementOperand",
        persisted: true,
        embeddedObject: true,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "aggregationType",
                fieldName: "aggregationType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.analytics.AggregationType",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "categoryOptionCombo",
                fieldName: "categoryOptionCombo",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.category.CategoryOptionCombo",
            },
            { name: "displayShortName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "periodOffset",
                fieldName: "periodOffset",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "formName",
                fieldName: "formName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "displayDescription", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            { name: "dimensionItem", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "dataElement",
                fieldName: "dataElement",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.dataelement.DataElement",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            { name: "displayFormName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            {
                name: "attributeOptionCombo",
                fieldName: "attributeOptionCombo",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.category.CategoryOptionCombo",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "legendSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "legendSets",
                fieldName: "legendSets",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "shortName",
                fieldName: "shortName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "dimensionItemType",
                fieldName: "dimensionItemType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.DimensionItemType",
            },
        ],
    },
    dataEntryForms: {
        klass: "org.hisp.dhis.dataentryform.DataEntryForm",
        shareable: false,
        metadata: true,
        relativeApiEndpoint: "/dataEntryForms",
        plural: "dataEntryForms",
        displayName: "Data Entry Form",
        collectionName: "dataEntryForms",
        nameableObject: false,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "dataEntryForm",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "htmlCode",
                fieldName: "htmlCode",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "format",
                fieldName: "format",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "style",
                fieldName: "style",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.DisplayDensity",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    dataInputPeriods: {
        klass: "org.hisp.dhis.dataset.DataInputPeriod",
        shareable: false,
        metadata: false,
        plural: "dataInputPeriods",
        displayName: "Data Input Period",
        collectionName: "dataInputPeriods",
        nameableObject: false,
        translatable: false,
        identifiableObject: false,
        dataShareable: false,
        name: "dataInputPeriods",
        persisted: true,
        embeddedObject: true,
        properties: [
            {
                name: "period",
                fieldName: "period",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.period.Period",
            },
            {
                name: "closingDate",
                fieldName: "closingDate",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "openingDate",
                fieldName: "openingDate",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
        ],
    },
    dataSets: {
        klass: "org.hisp.dhis.dataset.DataSet",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/dataSets",
        plural: "dataSets",
        displayName: "Data Set",
        collectionName: "dataSets",
        nameableObject: true,
        translatable: true,
        identifiableObject: true,
        dataShareable: true,
        name: "dataSet",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "dataEntryForm",
                fieldName: "dataEntryForm",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.dataentryform.DataEntryForm",
            },
            {
                name: "validCompleteOnly",
                fieldName: "validCompleteOnly",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "dataSetElement",
                fieldName: "dataSetElements",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.dataset.DataSetElement",
            },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "skipOffline",
                fieldName: "skipOffline",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "compulsoryFieldsCompleteOnly",
                fieldName: "compulsoryFieldsCompleteOnly",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "categoryCombo",
                fieldName: "categoryCombo",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.category.CategoryCombo",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "dataInputPeriods",
                fieldName: "dataInputPeriods",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.dataset.DataInputPeriod",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "interpretation",
                fieldName: "interpretations",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.interpretation.Interpretation",
            },
            { name: "displayDescription", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            { name: "formType", propertyType: "CONSTANT", klass: "org.hisp.dhis.dataset.FormType" },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "workflow",
                fieldName: "workflow",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.dataapproval.DataApprovalWorkflow",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "indicator",
                fieldName: "indicators",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.indicator.Indicator",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            { name: "displayFormName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "version",
                fieldName: "version",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "section",
                fieldName: "sections",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.dataset.Section",
            },
            {
                name: "timelyDays",
                fieldName: "timelyDays",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "legendSets",
                fieldName: "legendSets",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "style",
                fieldName: "style",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.common.ObjectStyle",
            },
            {
                name: "notificationRecipients",
                fieldName: "notificationRecipients",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.UserGroup",
            },
            {
                name: "shortName",
                fieldName: "shortName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "dimensionItemType",
                fieldName: "dimensionItemType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.DimensionItemType",
            },
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "aggregationType",
                fieldName: "aggregationType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.analytics.AggregationType",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "dataElementDecoration",
                fieldName: "dataElementDecoration",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "notifyCompletingUser",
                fieldName: "notifyCompletingUser",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "noValueRequiresComment",
                fieldName: "noValueRequiresComment",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "compulsoryDataElementOperand",
                fieldName: "compulsoryDataElementOperands",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.dataelement.DataElementOperand",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "displayShortName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "fieldCombinationRequired",
                fieldName: "fieldCombinationRequired",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "periodOffset",
                fieldName: "periodOffset",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "formName",
                fieldName: "formName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "organisationUnit",
                fieldName: "sources",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.organisationunit.OrganisationUnit",
            },
            {
                name: "renderHorizontally",
                fieldName: "renderHorizontally",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "renderAsTabs",
                fieldName: "renderAsTabs",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            { name: "dimensionItem", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "mobile",
                fieldName: "mobile",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "openPeriodsAfterCoEndDate",
                fieldName: "openPeriodsAfterCoEndDate",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "periodType",
                fieldName: "periodType",
                propertyType: "TEXT",
                klass: "org.hisp.dhis.period.PeriodType",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "legendSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "openFuturePeriods",
                fieldName: "openFuturePeriods",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "expiryDays",
                fieldName: "expiryDays",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
        ],
    },
    dataSetElements: {
        klass: "org.hisp.dhis.dataset.DataSetElement",
        shareable: false,
        metadata: false,
        plural: "dataSetElements",
        displayName: "Data Set Element",
        collectionName: "dataSetElements",
        nameableObject: false,
        translatable: false,
        identifiableObject: false,
        dataShareable: false,
        name: "dataSetElement",
        persisted: true,
        embeddedObject: true,
        properties: [
            {
                name: "dataElement",
                fieldName: "dataElement",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.dataelement.DataElement",
            },
            {
                name: "categoryCombo",
                fieldName: "categoryCombo",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.category.CategoryCombo",
            },
            {
                name: "dataSet",
                fieldName: "dataSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.dataset.DataSet",
            },
        ],
    },
    dataSetNotificationTemplates: {
        klass: "org.hisp.dhis.dataset.notifications.DataSetNotificationTemplate",
        shareable: false,
        metadata: true,
        relativeApiEndpoint: "/dataSetNotificationTemplates",
        plural: "dataSetNotificationTemplates",
        displayName: "Data Set Notification Template",
        collectionName: "dataSetNotificationTemplates",
        nameableObject: false,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "dataSetNotificationTemplate",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "relativeScheduledDays",
                fieldName: "relativeScheduledDays",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "subjectTemplate",
                fieldName: "subjectTemplate",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "dataSetNotificationTrigger",
                fieldName: "dataSetNotificationTrigger",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.dataset.notifications.DataSetNotificationTrigger",
            },
            {
                name: "sendStrategy",
                fieldName: "sendStrategy",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.notification.SendStrategy",
            },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "deliveryChannels",
                fieldName: "deliveryChannels",
                propertyType: "COLLECTION",
                itemPropertyType: "CONSTANT",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.common.DeliveryChannel",
            },
            { name: "displaySubjectTemplate", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "notifyUsersInHierarchyOnly",
                fieldName: "notifyUsersInHierarchyOnly",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "notificationRecipient",
                fieldName: "notificationRecipient",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.dataset.notifications.DataSetNotificationRecipient",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "notifyParentOrganisationUnitOnly",
                fieldName: "notifyParentOrganisationUnitOnly",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "dataSet",
                fieldName: "dataSets",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.dataset.DataSet",
            },
            { name: "displayMessageTemplate", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            {
                name: "recipientUserGroup",
                fieldName: "recipientUserGroup",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.UserGroup",
            },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "messageTemplate",
                fieldName: "messageTemplate",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
        ],
    },
    documents: {
        klass: "org.hisp.dhis.document.Document",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/documents",
        plural: "documents",
        displayName: "Document",
        collectionName: "documents",
        nameableObject: false,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "document",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attachment",
                fieldName: "attachment",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            {
                name: "contentType",
                fieldName: "contentType",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            { name: "url", fieldName: "url", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "external",
                fieldName: "external",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    eventCharts: {
        klass: "org.hisp.dhis.eventchart.EventChart",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/eventCharts",
        plural: "eventCharts",
        displayName: "Event Chart",
        collectionName: "eventCharts",
        nameableObject: true,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "eventChart",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "dataElementGroupSetDimension",
                fieldName: "dataElementGroupSetDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.dataelement.DataElementGroupSetDimension",
            },
            {
                name: "orgUnitField",
                fieldName: "orgUnitField",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "endDate",
                fieldName: "endDate",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "baseLineValue",
                fieldName: "baseLineValue",
                propertyType: "NUMBER",
                klass: "java.lang.Double",
            },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "userOrganisationUnitChildren",
                fieldName: "userOrganisationUnitChildren",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            { name: "displaySubtitle", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "program",
                fieldName: "program",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.program.Program",
            },
            {
                name: "type",
                fieldName: "type",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.chart.ChartType",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            { name: "subscribed", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            { name: "displayTitle", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "displayTargetLineLabel", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "attributeDimension",
                fieldName: "attributeDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.trackedentity.TrackedEntityAttributeDimension",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "yearlySerie",
                fieldName: "yearlySeries",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.List",
                itemKlass: "java.lang.String",
            },
            {
                name: "userOrganisationUnit",
                fieldName: "userOrganisationUnit",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "filterDimension",
                fieldName: "filterDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.List",
                itemKlass: "java.lang.String",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            {
                name: "interpretation",
                fieldName: "interpretations",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.interpretation.Interpretation",
            },
            { name: "displayDescription", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "attributeValueDimension",
                fieldName: "attributeValueDimension",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.trackedentity.TrackedEntityAttribute",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "domainAxisLabel",
                fieldName: "domainAxisLabel",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "subscriber",
                fieldName: "subscribers",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "cumulativeValues",
                fieldName: "cumulativeValues",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "sortOrder",
                fieldName: "sortOrder",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "subtitle",
                fieldName: "subtitle",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "rangeAxisDecimals",
                fieldName: "rangeAxisDecimals",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "shortName",
                fieldName: "shortName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "topLimit",
                fieldName: "topLimit",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "startDate",
                fieldName: "startDate",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "collapseDataDimensions",
                fieldName: "collapseDataDimensions",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "userOrganisationUnitGrandChildren",
                fieldName: "userOrganisationUnitGrandChildren",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "column",
                fieldName: "columns",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.common.DimensionalObject",
            },
            { name: "displayShortName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "percentStackedValues",
                fieldName: "percentStackedValues",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "noSpaceBetweenColumns",
                fieldName: "noSpaceBetweenColumns",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "dataElementDimension",
                fieldName: "dataElementDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.trackedentity.TrackedEntityDataElementDimension",
            },
            {
                name: "rangeAxisSteps",
                fieldName: "rangeAxisSteps",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "formName",
                fieldName: "formName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "period",
                fieldName: "periods",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.period.Period",
            },
            {
                name: "categoryDimension",
                fieldName: "categoryDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.category.CategoryDimension",
            },
            { name: "displayRangeAxisLabel", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "hideTitle",
                fieldName: "hideTitle",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "rowDimension",
                fieldName: "rowDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.List",
                itemKlass: "java.lang.String",
            },
            {
                name: "eventStatus",
                fieldName: "eventStatus",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.event.EventStatus",
            },
            { name: "displayBaseLineLabel", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "showData",
                fieldName: "showData",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "parentGraphMap",
                fieldName: "parentGraphMap",
                propertyType: "COMPLEX",
                klass: "java.util.Map",
            },
            {
                name: "hideNaData",
                fieldName: "hideNaData",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "itemOrganisationUnitGroup",
                fieldName: "itemOrganisationUnitGroups",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.organisationunit.OrganisationUnitGroup",
            },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            { name: "displayDomainAxisLabel", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "programIndicatorDimension",
                fieldName: "programIndicatorDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.trackedentity.TrackedEntityProgramIndicatorDimension",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "rangeAxisLabel",
                fieldName: "rangeAxisLabel",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "regressionType",
                fieldName: "regressionType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.RegressionType",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "columnDimension",
                fieldName: "columnDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.List",
                itemKlass: "java.lang.String",
            },
            {
                name: "completedOnly",
                fieldName: "completedOnly",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            { name: "displayFormName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "programStatus",
                fieldName: "programStatus",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.program.ProgramStatus",
            },
            {
                name: "hideEmptyRowItems",
                fieldName: "hideEmptyRowItems",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.HideEmptyItemStrategy",
            },
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "aggregationType",
                fieldName: "aggregationType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.analytics.AggregationType",
            },
            {
                name: "dataDimensionItem",
                fieldName: "dataDimensionItems",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.common.DataDimensionItem",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "categoryOptionGroupSetDimension",
                fieldName: "categoryOptionGroupSetDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.category.CategoryOptionGroupSetDimension",
            },
            {
                name: "hideSubtitle",
                fieldName: "hideSubtitle",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "outputType",
                fieldName: "outputType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.analytics.EventOutputType",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "organisationUnitGroupSetDimension",
                fieldName: "organisationUnitGroupSetDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.organisationunit.OrganisationUnitGroupSetDimension",
            },
            { name: "title", fieldName: "title", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "hideLegend",
                fieldName: "hideLegend",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "rangeAxisMinValue",
                fieldName: "rangeAxisMinValue",
                propertyType: "NUMBER",
                klass: "java.lang.Double",
            },
            {
                name: "organisationUnitLevel",
                fieldName: "organisationUnitLevels",
                propertyType: "COLLECTION",
                itemPropertyType: "INTEGER",
                klass: "java.util.List",
                itemKlass: "java.lang.Integer",
            },
            {
                name: "legendDisplayStrategy",
                fieldName: "legendDisplayStrategy",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.legend.LegendDisplayStrategy",
            },
            {
                name: "dataElementValueDimension",
                fieldName: "dataElementValueDimension",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.dataelement.DataElement",
            },
            {
                name: "relativePeriods",
                fieldName: "relatives",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.period.RelativePeriods",
            },
            {
                name: "targetLineLabel",
                fieldName: "targetLineLabel",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "organisationUnit",
                fieldName: "organisationUnits",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.organisationunit.OrganisationUnit",
            },
            {
                name: "value",
                fieldName: "value",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.common.DimensionalItemObject",
            },
            {
                name: "programStage",
                fieldName: "programStage",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.program.ProgramStage",
            },
            {
                name: "timeField",
                fieldName: "timeField",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "targetLineValue",
                fieldName: "targetLineValue",
                propertyType: "NUMBER",
                klass: "java.lang.Double",
            },
            {
                name: "filter",
                fieldName: "filters",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.common.DimensionalObject",
            },
            {
                name: "row",
                fieldName: "rows",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.common.DimensionalObject",
            },
            {
                name: "baseLineLabel",
                fieldName: "baseLineLabel",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "digitGroupSeparator",
                fieldName: "digitGroupSeparator",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.DigitGroupSeparator",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "legendSet",
                fieldName: "legendSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "userOrgUnitType",
                fieldName: "userOrgUnitType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.analytics.UserOrgUnitType",
            },
            {
                name: "rangeAxisMaxValue",
                fieldName: "rangeAxisMaxValue",
                propertyType: "NUMBER",
                klass: "java.lang.Double",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
        ],
    },
    eventReports: {
        klass: "org.hisp.dhis.eventreport.EventReport",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/eventReports",
        plural: "eventReports",
        displayName: "Event Report",
        collectionName: "eventReports",
        nameableObject: true,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "eventReport",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "dataElementGroupSetDimension",
                fieldName: "dataElementGroupSetDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.dataelement.DataElementGroupSetDimension",
            },
            {
                name: "orgUnitField",
                fieldName: "orgUnitField",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "endDate",
                fieldName: "endDate",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "userOrganisationUnitChildren",
                fieldName: "userOrganisationUnitChildren",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            { name: "displaySubtitle", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "program",
                fieldName: "program",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.program.Program",
            },
            { name: "subscribed", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            { name: "displayTitle", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "hideEmptyRows",
                fieldName: "hideEmptyRows",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "attributeDimension",
                fieldName: "attributeDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.trackedentity.TrackedEntityAttributeDimension",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "parentGraphMap",
                fieldName: "parentGraphMap",
                propertyType: "COMPLEX",
                klass: "java.util.Map",
            },
            {
                name: "userOrganisationUnit",
                fieldName: "userOrganisationUnit",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "filterDimension",
                fieldName: "filterDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.List",
                itemKlass: "java.lang.String",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "rowSubTotals",
                fieldName: "rowSubTotals",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "hideNaData",
                fieldName: "hideNaData",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "interpretation",
                fieldName: "interpretations",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.interpretation.Interpretation",
            },
            {
                name: "itemOrganisationUnitGroup",
                fieldName: "itemOrganisationUnitGroups",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.organisationunit.OrganisationUnitGroup",
            },
            {
                name: "displayDensity",
                fieldName: "displayDensity",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.DisplayDensity",
            },
            { name: "displayDescription", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "attributeValueDimension",
                fieldName: "attributeValueDimension",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.trackedentity.TrackedEntityAttribute",
            },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "programIndicatorDimension",
                fieldName: "programIndicatorDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.trackedentity.TrackedEntityProgramIndicatorDimension",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "subscriber",
                fieldName: "subscribers",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "dataType",
                fieldName: "dataType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.analytics.EventDataType",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "columnDimension",
                fieldName: "columnDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.List",
                itemKlass: "java.lang.String",
            },
            {
                name: "completedOnly",
                fieldName: "completedOnly",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "colTotals",
                fieldName: "colTotals",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            { name: "displayFormName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "showDimensionLabels",
                fieldName: "showDimensionLabels",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "subtitle",
                fieldName: "subtitle",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "sortOrder",
                fieldName: "sortOrder",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "fontSize",
                fieldName: "fontSize",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.FontSize",
            },
            {
                name: "shortName",
                fieldName: "shortName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "topLimit",
                fieldName: "topLimit",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "startDate",
                fieldName: "startDate",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "collapseDataDimensions",
                fieldName: "collapseDataDimensions",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "programStatus",
                fieldName: "programStatus",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.program.ProgramStatus",
            },
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "dataDimensionItem",
                fieldName: "dataDimensionItems",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.common.DataDimensionItem",
            },
            {
                name: "aggregationType",
                fieldName: "aggregationType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.analytics.AggregationType",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "categoryOptionGroupSetDimension",
                fieldName: "categoryOptionGroupSetDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.category.CategoryOptionGroupSetDimension",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "userOrganisationUnitGrandChildren",
                fieldName: "userOrganisationUnitGrandChildren",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "column",
                fieldName: "columns",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.common.DimensionalObject",
            },
            {
                name: "hideSubtitle",
                fieldName: "hideSubtitle",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "outputType",
                fieldName: "outputType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.analytics.EventOutputType",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "organisationUnitGroupSetDimension",
                fieldName: "organisationUnitGroupSetDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.organisationunit.OrganisationUnitGroupSetDimension",
            },
            { name: "title", fieldName: "title", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "displayShortName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "organisationUnitLevel",
                fieldName: "organisationUnitLevels",
                propertyType: "COLLECTION",
                itemPropertyType: "INTEGER",
                klass: "java.util.List",
                itemKlass: "java.lang.Integer",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "colSubTotals",
                fieldName: "colSubTotals",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "dataElementValueDimension",
                fieldName: "dataElementValueDimension",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.dataelement.DataElement",
            },
            {
                name: "relativePeriods",
                fieldName: "relatives",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.period.RelativePeriods",
            },
            {
                name: "dataElementDimension",
                fieldName: "dataElementDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.trackedentity.TrackedEntityDataElementDimension",
            },
            {
                name: "formName",
                fieldName: "formName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "period",
                fieldName: "periods",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.period.Period",
            },
            {
                name: "organisationUnit",
                fieldName: "organisationUnits",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.organisationunit.OrganisationUnit",
            },
            {
                name: "value",
                fieldName: "value",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.common.DimensionalItemObject",
            },
            {
                name: "categoryDimension",
                fieldName: "categoryDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.category.CategoryDimension",
            },
            {
                name: "showHierarchy",
                fieldName: "showHierarchy",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "programStage",
                fieldName: "programStage",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.program.ProgramStage",
            },
            {
                name: "rowTotals",
                fieldName: "rowTotals",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "timeField",
                fieldName: "timeField",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "filter",
                fieldName: "filters",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.common.DimensionalObject",
            },
            {
                name: "row",
                fieldName: "rows",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.common.DimensionalObject",
            },
            {
                name: "digitGroupSeparator",
                fieldName: "digitGroupSeparator",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.DigitGroupSeparator",
            },
            {
                name: "hideTitle",
                fieldName: "hideTitle",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "rowDimension",
                fieldName: "rowDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.List",
                itemKlass: "java.lang.String",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "eventStatus",
                fieldName: "eventStatus",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.event.EventStatus",
            },
            {
                name: "userOrgUnitType",
                fieldName: "userOrgUnitType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.analytics.UserOrgUnitType",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
        ],
    },
    expressions: {
        klass: "org.hisp.dhis.expression.Expression",
        shareable: false,
        metadata: false,
        relativeApiEndpoint: "/expressions",
        plural: "expressions",
        displayName: "Expression",
        collectionName: "expressions",
        nameableObject: false,
        translatable: false,
        identifiableObject: false,
        dataShareable: false,
        name: "expression",
        persisted: true,
        embeddedObject: true,
        properties: [
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "expression",
                fieldName: "expression",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "missingValueStrategy",
                fieldName: "missingValueStrategy",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.expression.MissingValueStrategy",
            },
            {
                name: "slidingWindow",
                fieldName: "slidingWindow",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
        ],
    },
    externalFileResources: {
        klass: "org.hisp.dhis.fileresource.ExternalFileResource",
        shareable: false,
        metadata: false,
        relativeApiEndpoint: "/externalFileResources",
        plural: "externalFileResources",
        displayName: "External File Resource",
        collectionName: "externalFileResources",
        nameableObject: false,
        translatable: false,
        identifiableObject: true,
        dataShareable: false,
        name: "externalFileResource",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "expires",
                fieldName: "expires",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "accessToken",
                fieldName: "accessToken",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "fileResource",
                fieldName: "fileResource",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.fileresource.FileResource",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    externalMapLayers: {
        klass: "org.hisp.dhis.mapping.ExternalMapLayer",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/externalMapLayers",
        plural: "externalMapLayers",
        displayName: "External Map Layer",
        collectionName: "externalMapLayers",
        nameableObject: false,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "externalMapLayer",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "imageFormat",
                fieldName: "imageFormat",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.mapping.ImageFormat",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "legendSetUrl",
                fieldName: "legendSetUrl",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "mapService",
                fieldName: "mapService",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.mapping.MapService",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "layers",
                fieldName: "layers",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "mapLayerPosition",
                fieldName: "mapLayerPosition",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.mapping.MapLayerPosition",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            { name: "url", fieldName: "url", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "legendSet",
                fieldName: "legendSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "attribution",
                fieldName: "attribution",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    fileResources: {
        klass: "org.hisp.dhis.fileresource.FileResource",
        shareable: false,
        metadata: false,
        relativeApiEndpoint: "/fileResources",
        plural: "fileResources",
        displayName: "File Resource",
        collectionName: "fileResources",
        nameableObject: false,
        translatable: false,
        identifiableObject: true,
        dataShareable: false,
        name: "identifiableObject",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "contentMd5",
                fieldName: "contentMd5",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "storageStatus",
                fieldName: "storageStatus",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.fileresource.FileResourceStorageStatus",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "contentType",
                fieldName: "contentType",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            {
                name: "domain",
                fieldName: "domain",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.fileresource.FileResourceDomain",
            },
            {
                name: "hasMultipleStorageFiles",
                fieldName: "hasMultipleStorageFiles",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "contentLength",
                fieldName: "contentLength",
                propertyType: "TEXT",
                klass: "java.lang.Long",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    icons: {
        klass: "org.hisp.dhis.icon.Icon",
        shareable: false,
        metadata: false,
        relativeApiEndpoint: "/icons",
        plural: "icons",
        displayName: "Icon",
        collectionName: "icons",
        nameableObject: false,
        translatable: false,
        identifiableObject: false,
        dataShareable: false,
        name: "icon",
        persisted: false,
        embeddedObject: false,
        properties: [],
    },
    indicators: {
        klass: "org.hisp.dhis.indicator.Indicator",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/indicators",
        plural: "indicators",
        displayName: "Indicator",
        collectionName: "indicators",
        nameableObject: true,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "indicator",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "aggregateExportCategoryOptionCombo",
                fieldName: "aggregateExportCategoryOptionCombo",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "displayNumeratorDescription",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "denominatorDescription",
                fieldName: "denominatorDescription",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "indicatorType",
                fieldName: "indicatorType",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.indicator.IndicatorType",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "numeratorDescription",
                fieldName: "numeratorDescription",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "displayDescription", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "indicatorGroup",
                fieldName: "groups",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.indicator.IndicatorGroup",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            { name: "displayFormName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "numerator",
                fieldName: "numerator",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "denominator",
                fieldName: "denominator",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "annualized",
                fieldName: "annualized",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "dataSet",
                fieldName: "dataSets",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.dataset.DataSet",
            },
            {
                name: "legendSets",
                fieldName: "legendSets",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "style",
                fieldName: "style",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.common.ObjectStyle",
            },
            {
                name: "shortName",
                fieldName: "shortName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "aggregateExportAttributeOptionCombo",
                fieldName: "aggregateExportAttributeOptionCombo",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "dimensionItemType",
                fieldName: "dimensionItemType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.DimensionItemType",
            },
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "aggregationType",
                fieldName: "aggregationType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.analytics.AggregationType",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "displayShortName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "periodOffset",
                fieldName: "periodOffset",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "formName",
                fieldName: "formName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "displayDenominatorDescription",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "dimensionItem", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "url", fieldName: "url", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "decimals",
                fieldName: "decimals",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "legendSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.legend.LegendSet",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
        ],
    },
    indicatorGroups: {
        klass: "org.hisp.dhis.indicator.IndicatorGroup",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/indicatorGroups",
        plural: "indicatorGroups",
        displayName: "Indicator Group",
        collectionName: "indicatorGroups",
        nameableObject: false,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "indicatorGroup",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "indicator",
                fieldName: "members",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.indicator.Indicator",
            },
            {
                name: "indicatorGroupSet",
                fieldName: "groupSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.indicator.IndicatorGroupSet",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    indicatorGroupSets: {
        klass: "org.hisp.dhis.indicator.IndicatorGroupSet",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/indicatorGroupSets",
        plural: "indicatorGroupSets",
        displayName: "Indicator Group Set",
        collectionName: "indicatorGroupSets",
        nameableObject: false,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "indicatorGroupSet",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "indicatorGroup",
                fieldName: "members",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.indicator.IndicatorGroup",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "compulsory",
                fieldName: "compulsory",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    indicatorTypes: {
        klass: "org.hisp.dhis.indicator.IndicatorType",
        shareable: false,
        metadata: true,
        relativeApiEndpoint: "/indicatorTypes",
        plural: "indicatorTypes",
        displayName: "Indicator Type",
        collectionName: "indicatorTypes",
        nameableObject: false,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "indicatorType",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "number",
                fieldName: "number",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            {
                name: "factor",
                fieldName: "factor",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    interpretations: {
        klass: "org.hisp.dhis.interpretation.Interpretation",
        shareable: true,
        metadata: false,
        relativeApiEndpoint: "/interpretations",
        plural: "interpretations",
        displayName: "Interpretation",
        collectionName: "interpretations",
        nameableObject: false,
        translatable: false,
        identifiableObject: true,
        dataShareable: false,
        name: "interpretation",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "visualization",
                fieldName: "visualization",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.visualization.Visualization",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "likeByUser",
                fieldName: "likedBy",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.User",
            },
            {
                name: "organisationUnit",
                fieldName: "organisationUnit",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.organisationunit.OrganisationUnit",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "type",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.analytics.AnalyticsFavoriteType",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "reportTable",
                fieldName: "reportTable",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.reporttable.ReportTable",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "text", fieldName: "text", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "map",
                fieldName: "map",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.mapping.Map",
            },
            {
                name: "dataSet",
                fieldName: "dataSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.dataset.DataSet",
            },
            {
                name: "likes",
                fieldName: "likes",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "period",
                fieldName: "period",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.period.Period",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "comment",
                fieldName: "comments",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.interpretation.InterpretationComment",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "eventReport",
                fieldName: "eventReport",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.eventreport.EventReport",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            {
                name: "mentions",
                fieldName: "mentions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.interpretation.Mention",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "eventChart",
                fieldName: "eventChart",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.eventchart.EventChart",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            {
                name: "chart",
                fieldName: "chart",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.chart.Chart",
            },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    interpretationComments: {
        klass: "org.hisp.dhis.interpretation.InterpretationComment",
        shareable: false,
        metadata: false,
        plural: "interpretationComments",
        displayName: "Interpretation Comment",
        collectionName: "interpretationComments",
        nameableObject: false,
        translatable: false,
        identifiableObject: true,
        dataShareable: false,
        name: "interpretationComment",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "mentions",
                fieldName: "mentions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.interpretation.Mention",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "text", fieldName: "text", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    jobConfigurations: {
        klass: "org.hisp.dhis.scheduling.JobConfiguration",
        shareable: false,
        metadata: true,
        relativeApiEndpoint: "/jobConfigurations",
        plural: "jobConfigurations",
        displayName: "Job Configuration",
        collectionName: "jobConfigurations",
        nameableObject: false,
        translatable: false,
        identifiableObject: true,
        dataShareable: false,
        name: "jobConfiguration",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "jobStatus",
                fieldName: "jobStatus",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.scheduling.JobStatus",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "enabled",
                fieldName: "enabled",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "leaderOnlyJob",
                fieldName: "leaderOnlyJob",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "jobType",
                fieldName: "jobType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.scheduling.JobType",
            },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "nextExecutionTime",
                fieldName: "nextExecutionTime",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "cronExpression",
                fieldName: "cronExpression",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "schedulingType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.scheduling.SchedulingType",
            },
            {
                name: "lastRuntimeExecution",
                fieldName: "lastRuntimeExecution",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "delay",
                fieldName: "delay",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            {
                name: "lastExecutedStatus",
                fieldName: "lastExecutedStatus",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.scheduling.JobStatus",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "jobParameters",
                fieldName: "jobParameters",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.scheduling.JobParameters",
            },
            {
                name: "lastExecuted",
                fieldName: "lastExecuted",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            { name: "configurable", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "userUid",
                fieldName: "userUid",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
        ],
    },
    dataStores: {
        klass: "org.hisp.dhis.keyjsonvalue.KeyJsonValue",
        shareable: true,
        metadata: false,
        relativeApiEndpoint: "/dataStore",
        plural: "dataStores",
        displayName: "Key Json Value",
        collectionName: "dataStores",
        nameableObject: false,
        translatable: false,
        identifiableObject: true,
        dataShareable: false,
        name: "identifiableObject",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "value", fieldName: "value", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "key", fieldName: "key", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "namespace",
                fieldName: "namespace",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    legends: {
        klass: "org.hisp.dhis.legend.Legend",
        shareable: false,
        metadata: false,
        plural: "legends",
        displayName: "Legend",
        collectionName: "legends",
        nameableObject: false,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "legend",
        persisted: true,
        embeddedObject: true,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "endValue",
                fieldName: "endValue",
                propertyType: "NUMBER",
                klass: "java.lang.Double",
            },
            { name: "color", fieldName: "color", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "startValue",
                fieldName: "startValue",
                propertyType: "NUMBER",
                klass: "java.lang.Double",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            { name: "image", fieldName: "image", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    legendSets: {
        klass: "org.hisp.dhis.legend.LegendSet",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/legendSets",
        plural: "legendSets",
        displayName: "Legend Set",
        collectionName: "legendSets",
        nameableObject: false,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "legendSet",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "symbolizer",
                fieldName: "symbolizer",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "legend",
                fieldName: "legends",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.legend.Legend",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    maps: {
        klass: "org.hisp.dhis.mapping.Map",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/maps",
        plural: "maps",
        displayName: "Map",
        collectionName: "maps",
        nameableObject: true,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "map",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "basemap",
                fieldName: "basemap",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "latitude",
                fieldName: "latitude",
                propertyType: "NUMBER",
                klass: "java.lang.Double",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "title", fieldName: "title", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "displayShortName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            { name: "subscribed", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "formName",
                fieldName: "formName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "mapView",
                fieldName: "mapViews",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.mapping.MapView",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "interpretation",
                fieldName: "interpretations",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.interpretation.Interpretation",
            },
            {
                name: "longitude",
                fieldName: "longitude",
                propertyType: "NUMBER",
                klass: "java.lang.Double",
            },
            { name: "displayDescription", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "subscriber",
                fieldName: "subscribers",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "zoom",
                fieldName: "zoom",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            { name: "displayFormName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "shortName",
                fieldName: "shortName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    mapViews: {
        klass: "org.hisp.dhis.mapping.MapView",
        shareable: false,
        metadata: true,
        relativeApiEndpoint: "/mapViews",
        plural: "mapViews",
        displayName: "Map View",
        collectionName: "mapViews",
        nameableObject: true,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "mapView",
        persisted: true,
        embeddedObject: true,
        properties: [
            {
                name: "dataElementGroupSetDimension",
                fieldName: "dataElementGroupSetDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.dataelement.DataElementGroupSetDimension",
            },
            {
                name: "orgUnitField",
                fieldName: "orgUnitField",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "endDate",
                fieldName: "endDate",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "userOrganisationUnitChildren",
                fieldName: "userOrganisationUnitChildren",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            { name: "displaySubtitle", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "program",
                fieldName: "program",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.program.Program",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            { name: "subscribed", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            { name: "displayTitle", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "attributeDimension",
                fieldName: "attributeDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.trackedentity.TrackedEntityAttributeDimension",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "eventCoordinateField",
                fieldName: "eventCoordinateField",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "userOrganisationUnit",
                fieldName: "userOrganisationUnit",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "organisationUnitSelectionMode",
                fieldName: "organisationUnitSelectionMode",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.OrganisationUnitSelectionMode",
            },
            {
                name: "filterDimension",
                fieldName: "filterDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.List",
                itemKlass: "java.lang.String",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            {
                name: "interpretation",
                fieldName: "interpretations",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.interpretation.Interpretation",
            },
            { name: "displayDescription", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "method",
                fieldName: "method",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "subscriber",
                fieldName: "subscribers",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "renderingStrategy",
                fieldName: "renderingStrategy",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.mapping.MapViewRenderingStrategy",
            },
            {
                name: "labels",
                fieldName: "labels",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "sortOrder",
                fieldName: "sortOrder",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "subtitle",
                fieldName: "subtitle",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "shortName",
                fieldName: "shortName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "topLimit",
                fieldName: "topLimit",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "startDate",
                fieldName: "startDate",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "noDataColor",
                fieldName: "noDataColor",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "userOrganisationUnitGrandChildren",
                fieldName: "userOrganisationUnitGrandChildren",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "column",
                fieldName: "columns",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.common.DimensionalObject",
            },
            {
                name: "styleDataItem",
                fieldName: "styleDataItem",
                propertyType: "COMPLEX",
                klass: "java.lang.Object",
            },
            {
                name: "labelFontColor",
                fieldName: "labelFontColor",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "layer", fieldName: "layer", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "displayShortName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "dataElementDimension",
                fieldName: "dataElementDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.trackedentity.TrackedEntityDataElementDimension",
            },
            {
                name: "formName",
                fieldName: "formName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "period",
                fieldName: "periods",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.period.Period",
            },
            {
                name: "categoryDimension",
                fieldName: "categoryDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.category.CategoryDimension",
            },
            {
                name: "labelFontStyle",
                fieldName: "labelFontStyle",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "radiusHigh",
                fieldName: "radiusHigh",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "hideTitle",
                fieldName: "hideTitle",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "eventClustering",
                fieldName: "eventClustering",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "colorLow",
                fieldName: "colorLow",
                propertyType: "COLOR",
                klass: "java.lang.String",
            },
            {
                name: "eventStatus",
                fieldName: "eventStatus",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.mapping.EventStatus",
            },
            {
                name: "opacity",
                fieldName: "opacity",
                propertyType: "NUMBER",
                klass: "java.lang.Double",
            },
            {
                name: "config",
                fieldName: "config",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "colorScale",
                fieldName: "colorScale",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "parentLevel",
                fieldName: "parentLevel",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "parentGraphMap",
                fieldName: "parentGraphMap",
                propertyType: "COMPLEX",
                klass: "java.util.Map",
            },
            {
                name: "itemOrganisationUnitGroup",
                fieldName: "itemOrganisationUnitGroups",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.organisationunit.OrganisationUnitGroup",
            },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "programIndicatorDimension",
                fieldName: "programIndicatorDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.trackedentity.TrackedEntityProgramIndicatorDimension",
            },
            {
                name: "labelFontSize",
                fieldName: "labelFontSize",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "columnDimension",
                fieldName: "columnDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.List",
                itemKlass: "java.lang.String",
            },
            {
                name: "colorHigh",
                fieldName: "colorHigh",
                propertyType: "COLOR",
                klass: "java.lang.String",
            },
            {
                name: "completedOnly",
                fieldName: "completedOnly",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "eventPointRadius",
                fieldName: "eventPointRadius",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "areaRadius",
                fieldName: "areaRadius",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            { name: "displayFormName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "programStatus",
                fieldName: "programStatus",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.program.ProgramStatus",
            },
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "aggregationType",
                fieldName: "aggregationType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.analytics.AggregationType",
            },
            {
                name: "dataDimensionItem",
                fieldName: "dataDimensionItems",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.common.DataDimensionItem",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "categoryOptionGroupSetDimension",
                fieldName: "categoryOptionGroupSetDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.category.CategoryOptionGroupSetDimension",
            },
            {
                name: "hidden",
                fieldName: "hidden",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "thematicMapType",
                fieldName: "thematicMapType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.mapping.ThematicMapType",
            },
            {
                name: "classes",
                fieldName: "classes",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "hideSubtitle",
                fieldName: "hideSubtitle",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "organisationUnitGroupSetDimension",
                fieldName: "organisationUnitGroupSetDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.organisationunit.OrganisationUnitGroupSetDimension",
            },
            { name: "title", fieldName: "title", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "organisationUnitLevel",
                fieldName: "organisationUnitLevels",
                propertyType: "COLLECTION",
                itemPropertyType: "INTEGER",
                klass: "java.util.List",
                itemKlass: "java.lang.Integer",
            },
            {
                name: "organisationUnitGroupSet",
                fieldName: "organisationUnitGroupSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.organisationunit.OrganisationUnitGroupSet",
            },
            {
                name: "followUp",
                fieldName: "followUp",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "relativePeriods",
                fieldName: "relatives",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.period.RelativePeriods",
            },
            {
                name: "organisationUnit",
                fieldName: "organisationUnits",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.organisationunit.OrganisationUnit",
            },
            {
                name: "eventPointColor",
                fieldName: "eventPointColor",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "programStage",
                fieldName: "programStage",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.program.ProgramStage",
            },
            {
                name: "labelFontWeight",
                fieldName: "labelFontWeight",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "timeField",
                fieldName: "timeField",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "filter",
                fieldName: "filters",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.common.DimensionalObject",
            },
            {
                name: "parentGraph",
                fieldName: "parentGraph",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "row",
                fieldName: "rows",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.common.DimensionalObject",
            },
            {
                name: "radiusLow",
                fieldName: "radiusLow",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "digitGroupSeparator",
                fieldName: "digitGroupSeparator",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.DigitGroupSeparator",
            },
            {
                name: "trackedEntityType",
                fieldName: "trackedEntityType",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.trackedentity.TrackedEntityType",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "legendSet",
                fieldName: "legendSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "userOrgUnitType",
                fieldName: "userOrgUnitType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.analytics.UserOrgUnitType",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
        ],
    },
    messageConversations: {
        klass: "org.hisp.dhis.message.MessageConversation",
        shareable: false,
        metadata: false,
        relativeApiEndpoint: "/messageConversations",
        plural: "messageConversations",
        displayName: "Message Conversation",
        collectionName: "messageConversations",
        nameableObject: false,
        translatable: false,
        identifiableObject: true,
        dataShareable: false,
        name: "messageConversation",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "messageCount",
                fieldName: "messageCount",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "subject",
                fieldName: "subject",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "followUp",
                fieldName: "followUp",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "messageType",
                fieldName: "messageType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.message.MessageType",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "userMessage",
                fieldName: "userMessages",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.message.UserMessage",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "userSurname",
                fieldName: "userSurname",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "lastSenderSurname",
                fieldName: "lastSenderSurname",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "read",
                fieldName: "read",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "lastSender",
                fieldName: "lastSender",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "lastMessage",
                fieldName: "lastMessage",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "priority",
                fieldName: "priority",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.message.MessageConversationPriority",
            },
            {
                name: "lastSenderFirstname",
                fieldName: "lastSenderFirstname",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "message",
                fieldName: "messages",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.message.Message",
            },
            {
                name: "userFirstname",
                fieldName: "userFirstname",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "assignee",
                fieldName: "assignee",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "status",
                fieldName: "status",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.message.MessageConversationStatus",
            },
        ],
    },
    metadataVersions: {
        klass: "org.hisp.dhis.metadata.version.MetadataVersion",
        shareable: false,
        metadata: false,
        relativeApiEndpoint: "/metadata/version",
        plural: "metadataVersions",
        displayName: "Metadata Version",
        collectionName: "metadataVersions",
        nameableObject: false,
        translatable: false,
        identifiableObject: true,
        dataShareable: false,
        name: "metadataVersion",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "type",
                fieldName: "type",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.metadata.version.VersionType",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "importDate",
                fieldName: "importDate",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "hashCode",
                fieldName: "hashCode",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    minMaxDataElements: {
        klass: "org.hisp.dhis.minmax.MinMaxDataElement",
        shareable: false,
        metadata: false,
        relativeApiEndpoint: "/minMaxDataElements",
        plural: "minMaxDataElements",
        displayName: "Min Max Data Element",
        collectionName: "minMaxDataElements",
        nameableObject: false,
        translatable: false,
        identifiableObject: false,
        dataShareable: false,
        name: "minMaxDataElement",
        persisted: true,
        embeddedObject: false,
        properties: [
            { name: "min", fieldName: "min", propertyType: "INTEGER", klass: "java.lang.Integer" },
            {
                name: "generated",
                fieldName: "generated",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            { name: "max", fieldName: "max", propertyType: "INTEGER", klass: "java.lang.Integer" },
            {
                name: "dataElement",
                fieldName: "dataElement",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.dataelement.DataElement",
            },
            {
                name: "source",
                fieldName: "source",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.organisationunit.OrganisationUnit",
            },
            {
                name: "optionCombo",
                fieldName: "optionCombo",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.category.CategoryOptionCombo",
            },
        ],
    },
    oAuth2Clients: {
        klass: "org.hisp.dhis.security.oauth2.OAuth2Client",
        shareable: false,
        metadata: true,
        relativeApiEndpoint: "/oAuth2Clients",
        plural: "oAuth2Clients",
        displayName: "O Auth2 Client",
        collectionName: "oAuth2Clients",
        nameableObject: false,
        translatable: false,
        identifiableObject: true,
        dataShareable: false,
        name: "oAuth2Client",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "secret",
                fieldName: "secret",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "redirectUri",
                fieldName: "redirectUris",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.List",
                itemKlass: "java.lang.String",
            },
            {
                name: "grantType",
                fieldName: "grantTypes",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.List",
                itemKlass: "java.lang.String",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "cid",
                fieldName: "cid",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
        ],
    },
    options: {
        klass: "org.hisp.dhis.option.Option",
        shareable: false,
        metadata: true,
        relativeApiEndpoint: "/options",
        plural: "options",
        displayName: "Option",
        collectionName: "options",
        nameableObject: true,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "option",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            { name: "code", fieldName: "code", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "displayShortName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "optionSet",
                fieldName: "optionSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.option.OptionSet",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "formName",
                fieldName: "formName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "displayDescription", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            { name: "displayFormName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "sortOrder",
                fieldName: "sortOrder",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "style",
                fieldName: "style",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.common.ObjectStyle",
            },
            {
                name: "shortName",
                fieldName: "shortName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    optionGroups: {
        klass: "org.hisp.dhis.option.OptionGroup",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/optionGroups",
        plural: "optionGroups",
        displayName: "Option Group",
        collectionName: "optionGroups",
        nameableObject: true,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "optionGroup",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "aggregationType",
                fieldName: "aggregationType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.analytics.AggregationType",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "displayShortName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "periodOffset",
                fieldName: "periodOffset",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "optionSet",
                fieldName: "optionSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.option.OptionSet",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "formName",
                fieldName: "formName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "option",
                fieldName: "members",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.option.Option",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "displayDescription", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            { name: "dimensionItem", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            { name: "displayFormName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "legendSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "legendSets",
                fieldName: "legendSets",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "shortName",
                fieldName: "shortName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "dimensionItemType",
                fieldName: "dimensionItemType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.DimensionItemType",
            },
        ],
    },
    optionGroupSets: {
        klass: "org.hisp.dhis.option.OptionGroupSet",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/optionGroupSets",
        plural: "optionGroupSets",
        displayName: "Option Group Set",
        collectionName: "optionGroupSets",
        nameableObject: true,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "optionGroupSet",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "dataDimensionType",
                fieldName: "dataDimensionType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.DataDimensionType",
            },
            {
                name: "aggregationType",
                fieldName: "aggregationType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.analytics.AggregationType",
            },
            {
                name: "dimensionType",
                fieldName: "dimensionType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.DimensionType",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "optionGroup",
                fieldName: "members",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.option.OptionGroup",
            },
            { name: "displayShortName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "optionSet",
                fieldName: "optionSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.option.OptionSet",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "formName",
                fieldName: "formName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "dimension", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "displayDescription", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "programStage",
                fieldName: "programStage",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.program.ProgramStage",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "allItems",
                fieldName: "allItems",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "dimensionalKeywords",
                fieldName: "dimensionalKeywords",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.common.DimensionalKeywords",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            { name: "displayFormName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "filter",
                fieldName: "filter",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "legendSet",
                fieldName: "legendSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "dataDimension",
                fieldName: "dataDimension",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "shortName",
                fieldName: "shortName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            {
                name: "item",
                fieldName: "items",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.common.DimensionalItemObject",
            },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    optionSets: {
        klass: "org.hisp.dhis.option.OptionSet",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/optionSets",
        plural: "optionSets",
        displayName: "Option Set",
        collectionName: "optionSets",
        nameableObject: false,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "optionSet",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "valueType",
                fieldName: "valueType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.ValueType",
            },
            {
                name: "option",
                fieldName: "options",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.option.Option",
            },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "version",
                fieldName: "version",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    organisationUnits: {
        klass: "org.hisp.dhis.organisationunit.OrganisationUnit",
        shareable: false,
        metadata: true,
        relativeApiEndpoint: "/organisationUnits",
        plural: "organisationUnits",
        displayName: "Organisation Unit",
        collectionName: "organisationUnits",
        nameableObject: true,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "organisationUnit",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "parent",
                fieldName: "parent",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.organisationunit.OrganisationUnit",
            },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "type", fieldName: "type", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "path", fieldName: "path", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "child",
                fieldName: "children",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.organisationunit.OrganisationUnit",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "organisationUnitGroup",
                fieldName: "groups",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.organisationunit.OrganisationUnitGroup",
            },
            {
                name: "organisationUnit",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.organisationunit.OrganisationUnit",
            },
            { name: "displayDescription", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "image",
                fieldName: "image",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.fileresource.FileResource",
            },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "level",
                fieldName: "hierarchyLevel",
                propertyType: "TEXT",
                klass: "java.lang.Integer",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            { name: "displayFormName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "userItem",
                fieldName: "users",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.User",
            },
            {
                name: "phoneNumber",
                fieldName: "phoneNumber",
                propertyType: "PHONENUMBER",
                klass: "java.lang.String",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "dataSet",
                fieldName: "dataSets",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.dataset.DataSet",
            },
            {
                name: "legendSets",
                fieldName: "legendSets",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "program",
                fieldName: "programs",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.program.Program",
            },
            {
                name: "shortName",
                fieldName: "shortName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "dimensionItemType",
                fieldName: "dimensionItemType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.DimensionItemType",
            },
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "aggregationType",
                fieldName: "aggregationType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.analytics.AggregationType",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "contactPerson",
                fieldName: "contactPerson",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "displayShortName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "periodOffset",
                fieldName: "periodOffset",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "formName",
                fieldName: "formName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "openingDate",
                fieldName: "openingDate",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            { name: "email", fieldName: "email", propertyType: "EMAIL", klass: "java.lang.String" },
            {
                name: "address",
                fieldName: "address",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "dimensionItem", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "memberCount",
                fieldName: "memberCount",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            { name: "leaf", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            { name: "url", fieldName: "url", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "closedDate",
                fieldName: "closedDate",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "legendSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "geometry",
                fieldName: "geometry",
                propertyType: "COMPLEX",
                klass: "org.locationtech.jts.geom.Geometry",
            },
            {
                name: "comment",
                fieldName: "comment",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
        ],
    },
    organisationUnitGroups: {
        klass: "org.hisp.dhis.organisationunit.OrganisationUnitGroup",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/organisationUnitGroups",
        plural: "organisationUnitGroups",
        displayName: "Organisation Unit Group",
        collectionName: "organisationUnitGroups",
        nameableObject: true,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "organisationUnitGroup",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "symbol",
                fieldName: "symbol",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "aggregationType",
                fieldName: "aggregationType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.analytics.AggregationType",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "color", fieldName: "color", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "displayShortName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "periodOffset",
                fieldName: "periodOffset",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "formName",
                fieldName: "formName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "featureType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.organisationunit.FeatureType",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "organisationUnit",
                fieldName: "members",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.organisationunit.OrganisationUnit",
            },
            { name: "displayDescription", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            { name: "dimensionItem", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "groupSet",
                fieldName: "groupSets",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.organisationunit.OrganisationUnitGroupSet",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            { name: "displayFormName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "legendSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "legendSets",
                fieldName: "legendSets",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "geometry",
                fieldName: "geometry",
                propertyType: "COMPLEX",
                klass: "org.locationtech.jts.geom.Geometry",
            },
            {
                name: "shortName",
                fieldName: "shortName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "dimensionItemType",
                fieldName: "dimensionItemType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.DimensionItemType",
            },
        ],
    },
    organisationUnitGroupSets: {
        klass: "org.hisp.dhis.organisationunit.OrganisationUnitGroupSet",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/organisationUnitGroupSets",
        plural: "organisationUnitGroupSets",
        displayName: "Organisation Unit Group Set",
        collectionName: "organisationUnitGroupSets",
        nameableObject: true,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "organisationUnitGroupSet",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "dataDimensionType",
                fieldName: "dataDimensionType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.DataDimensionType",
            },
            {
                name: "aggregationType",
                fieldName: "aggregationType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.analytics.AggregationType",
            },
            {
                name: "dimensionType",
                fieldName: "dimensionType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.DimensionType",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "displayShortName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "formName",
                fieldName: "formName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "organisationUnitGroup",
                fieldName: "organisationUnitGroups",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.organisationunit.OrganisationUnitGroup",
            },
            { name: "dimension", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "displayDescription", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "programStage",
                fieldName: "programStage",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.program.ProgramStage",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "allItems",
                fieldName: "allItems",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "dimensionalKeywords",
                fieldName: "dimensionalKeywords",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.common.DimensionalKeywords",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            { name: "displayFormName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "filter",
                fieldName: "filter",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "compulsory",
                fieldName: "compulsory",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "includeSubhierarchyInAnalytics",
                fieldName: "includeSubhierarchyInAnalytics",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "legendSet",
                fieldName: "legendSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "dataDimension",
                fieldName: "dataDimension",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "shortName",
                fieldName: "shortName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            {
                name: "item",
                fieldName: "items",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.common.DimensionalItemObject",
            },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    organisationUnitGroupSetDimensions: {
        klass: "org.hisp.dhis.organisationunit.OrganisationUnitGroupSetDimension",
        shareable: false,
        metadata: false,
        plural: "organisationUnitGroupSetDimensions",
        displayName: "Organisation Unit Group Set Dimension",
        collectionName: "organisationUnitGroupSetDimensions",
        nameableObject: false,
        translatable: false,
        identifiableObject: false,
        dataShareable: false,
        name: "organisationUnitGroupSetDimension",
        persisted: true,
        embeddedObject: true,
        properties: [
            {
                name: "organisationUnitGroupSet",
                fieldName: "dimension",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.organisationunit.OrganisationUnitGroupSet",
            },
            {
                name: "organisationUnitGroup",
                fieldName: "items",
                propertyType: "REFERENCE",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.organisationunit.OrganisationUnitGroup",
            },
        ],
    },
    organisationUnitLevels: {
        klass: "org.hisp.dhis.organisationunit.OrganisationUnitLevel",
        shareable: false,
        metadata: true,
        relativeApiEndpoint: "/organisationUnitLevels",
        plural: "organisationUnitLevels",
        displayName: "Organisation Unit Level",
        collectionName: "organisationUnitLevels",
        nameableObject: false,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "organisationUnitLevel",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "offlineLevels",
                fieldName: "offlineLevels",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "level",
                fieldName: "level",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    predictors: {
        klass: "org.hisp.dhis.predictor.Predictor",
        shareable: false,
        metadata: true,
        relativeApiEndpoint: "/predictors",
        plural: "predictors",
        displayName: "Predictor",
        collectionName: "predictors",
        nameableObject: true,
        translatable: false,
        identifiableObject: true,
        dataShareable: false,
        name: "Predictor",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "outputCombo",
                fieldName: "outputCombo",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.category.CategoryOptionCombo",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "generator",
                fieldName: "generator",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.expression.Expression",
            },
            { name: "displayShortName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "organisationUnitLevel",
                fieldName: "organisationUnitLevels",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.organisationunit.OrganisationUnitLevel",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "output",
                fieldName: "output",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.dataelement.DataElement",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "sampleSkipTest",
                fieldName: "sampleSkipTest",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.expression.Expression",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "formName",
                fieldName: "formName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            {
                name: "sequentialSampleCount",
                fieldName: "sequentialSampleCount",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "displayDescription", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "annualSampleCount",
                fieldName: "annualSampleCount",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sequentialSkipCount",
                fieldName: "sequentialSkipCount",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "predictorGroup",
                fieldName: "groups",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.predictor.PredictorGroup",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            { name: "displayFormName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "periodType",
                fieldName: "periodType",
                propertyType: "TEXT",
                klass: "org.hisp.dhis.period.PeriodType",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "shortName",
                fieldName: "shortName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    predictorGroups: {
        klass: "org.hisp.dhis.predictor.PredictorGroup",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/predictorGroups",
        plural: "predictorGroups",
        displayName: "Predictor Group",
        collectionName: "predictorGroups",
        nameableObject: false,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "predictorGroup",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "predictor",
                fieldName: "members",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.predictor.Predictor",
            },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    programs: {
        klass: "org.hisp.dhis.program.Program",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/programs",
        plural: "programs",
        displayName: "Program",
        collectionName: "programs",
        nameableObject: true,
        translatable: true,
        identifiableObject: true,
        dataShareable: true,
        name: "program",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "dataEntryForm",
                fieldName: "dataEntryForm",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.dataentryform.DataEntryForm",
            },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "ignoreOverdueEvents",
                fieldName: "ignoreOverdueEvents",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "skipOffline",
                fieldName: "skipOffline",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "programIndicator",
                fieldName: "programIndicators",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.program.ProgramIndicator",
            },
            { name: "displayIncidentDateLabel", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "categoryCombo",
                fieldName: "categoryCombo",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.category.CategoryCombo",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "displayDescription", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "enrollmentDateLabel",
                fieldName: "enrollmentDateLabel",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "onlyEnrollOnce",
                fieldName: "onlyEnrollOnce",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            { name: "displayFormName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "version",
                fieldName: "version",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            { name: "displayEnrollmentDateLabel", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "maxTeiCountToReturn",
                fieldName: "maxTeiCountToReturn",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "selectIncidentDatesInFuture",
                fieldName: "selectIncidentDatesInFuture",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "incidentDateLabel",
                fieldName: "incidentDateLabel",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "userRole",
                fieldName: "userRoles",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAuthorityGroup",
            },
            {
                name: "expiryPeriodType",
                fieldName: "expiryPeriodType",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.period.PeriodType",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "selectEnrollmentDatesInFuture",
                fieldName: "selectEnrollmentDatesInFuture",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            { name: "registration", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "style",
                fieldName: "style",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.common.ObjectStyle",
            },
            {
                name: "shortName",
                fieldName: "shortName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "useFirstStageDuringRegistration",
                fieldName: "useFirstStageDuringRegistration",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "programRuleVariable",
                fieldName: "programRuleVariables",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.programrule.ProgramRuleVariable",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "programTrackedEntityAttribute",
                fieldName: "programAttributes",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.program.ProgramTrackedEntityAttribute",
            },
            {
                name: "completeEventsExpiryDays",
                fieldName: "completeEventsExpiryDays",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "relatedProgram",
                fieldName: "relatedProgram",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.program.Program",
            },
            { name: "displayShortName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            { name: "withoutRegistration", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "notificationTemplate",
                fieldName: "notificationTemplates",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.program.notification.ProgramNotificationTemplate",
            },
            {
                name: "formName",
                fieldName: "formName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "featureType",
                fieldName: "featureType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.organisationunit.FeatureType",
            },
            {
                name: "minAttributesRequiredToSearch",
                fieldName: "minAttributesRequiredToSearch",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "displayFrontPageList",
                fieldName: "displayFrontPageList",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "organisationUnit",
                fieldName: "organisationUnits",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.organisationunit.OrganisationUnit",
            },
            {
                name: "programType",
                fieldName: "programType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.program.ProgramType",
            },
            {
                name: "accessLevel",
                fieldName: "accessLevel",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.AccessLevel",
            },
            {
                name: "programSection",
                fieldName: "programSections",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.program.ProgramSection",
            },
            {
                name: "programStage",
                fieldName: "programStages",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.program.ProgramStage",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "trackedEntityType",
                fieldName: "trackedEntityType",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.trackedentity.TrackedEntityType",
            },
            {
                name: "displayIncidentDate",
                fieldName: "displayIncidentDate",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "expiryDays",
                fieldName: "expiryDays",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
        ],
    },
    programDataElements: {
        klass: "org.hisp.dhis.program.ProgramDataElementDimensionItem",
        shareable: false,
        metadata: false,
        relativeApiEndpoint: "/programDataElements",
        plural: "programDataElements",
        displayName: "Program Data Element Dimension Item",
        collectionName: "programDataElements",
        nameableObject: true,
        translatable: false,
        identifiableObject: true,
        dataShareable: false,
        name: "programDataElement",
        persisted: false,
        embeddedObject: true,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "aggregationType",
                fieldName: "aggregationType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.analytics.AggregationType",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "program",
                fieldName: "program",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.program.Program",
            },
            { name: "displayShortName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "periodOffset",
                fieldName: "periodOffset",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "valueType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.ValueType",
            },
            {
                name: "formName",
                fieldName: "formName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "displayDescription", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            { name: "dimensionItem", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "dataElement",
                fieldName: "dataElement",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.dataelement.DataElement",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            { name: "displayFormName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "legendSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "legendSets",
                fieldName: "legendSets",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "shortName",
                fieldName: "shortName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "dimensionItemType",
                fieldName: "dimensionItemType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.DimensionItemType",
            },
        ],
    },
    programIndicators: {
        klass: "org.hisp.dhis.program.ProgramIndicator",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/programIndicators",
        plural: "programIndicators",
        displayName: "Program Indicator",
        collectionName: "programIndicators",
        nameableObject: true,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "programIndicator",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "aggregationType",
                fieldName: "aggregationType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.analytics.AggregationType",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "displayInForm",
                fieldName: "displayInForm",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "aggregateExportCategoryOptionCombo",
                fieldName: "aggregateExportCategoryOptionCombo",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "program",
                fieldName: "program",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.program.Program",
            },
            { name: "displayShortName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "periodOffset",
                fieldName: "periodOffset",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "formName",
                fieldName: "formName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "programIndicatorGroups",
                fieldName: "groups",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.program.ProgramIndicatorGroup",
            },
            {
                name: "analyticsPeriodBoundary",
                fieldName: "analyticsPeriodBoundaries",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.program.AnalyticsPeriodBoundary",
            },
            { name: "displayDescription", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "expression",
                fieldName: "expression",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "dimensionItem", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            { name: "displayFormName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "filter",
                fieldName: "filter",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            {
                name: "decimals",
                fieldName: "decimals",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "legendSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "analyticsType",
                fieldName: "analyticsType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.program.AnalyticsType",
            },
            {
                name: "legendSets",
                fieldName: "legendSets",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "style",
                fieldName: "style",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.common.ObjectStyle",
            },
            {
                name: "shortName",
                fieldName: "shortName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            {
                name: "aggregateExportAttributeOptionCombo",
                fieldName: "aggregateExportAttributeOptionCombo",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "dimensionItemType",
                fieldName: "dimensionItemType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.DimensionItemType",
            },
        ],
    },
    programIndicatorGroups: {
        klass: "org.hisp.dhis.program.ProgramIndicatorGroup",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/programIndicatorGroups",
        plural: "programIndicatorGroups",
        displayName: "Program Indicator Group",
        collectionName: "programIndicatorGroups",
        nameableObject: false,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "programIndicatorGroup",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "programIndicator",
                fieldName: "members",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.program.ProgramIndicator",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    programInstances: {
        klass: "org.hisp.dhis.program.ProgramInstance",
        shareable: false,
        metadata: false,
        relativeApiEndpoint: "/programInstances",
        plural: "programInstances",
        displayName: "Program Instance",
        collectionName: "programInstances",
        nameableObject: false,
        translatable: false,
        identifiableObject: true,
        dataShareable: false,
        name: "programInstance",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "storedBy",
                fieldName: "storedBy",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "endDate",
                fieldName: "endDate",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "organisationUnit",
                fieldName: "organisationUnit",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.organisationunit.OrganisationUnit",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "enrollmentDate",
                fieldName: "enrollmentDate",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "createdAtClient",
                fieldName: "createdAtClient",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "program",
                fieldName: "program",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.program.Program",
            },
            {
                name: "messageConversation",
                fieldName: "messageConversations",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.message.MessageConversation",
            },
            {
                name: "trackedEntityComment",
                fieldName: "comments",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.trackedentitycomment.TrackedEntityComment",
            },
            {
                name: "lastUpdatedByUserInfo",
                fieldName: "lastUpdatedByUserInfo",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.program.UserInfoSnapshot",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "relationshipItem",
                fieldName: "relationshipItems",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.relationship.RelationshipItem",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "createdByUserInfo",
                fieldName: "createdByUserInfo",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.program.UserInfoSnapshot",
            },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "programStageInstance",
                fieldName: "programStageInstances",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.program.ProgramStageInstance",
            },
            {
                name: "trackedEntityInstance",
                fieldName: "entityInstance",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.trackedentity.TrackedEntityInstance",
            },
            {
                name: "followup",
                fieldName: "followup",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "deleted",
                fieldName: "deleted",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "geometry",
                fieldName: "geometry",
                propertyType: "COMPLEX",
                klass: "org.locationtech.jts.geom.Geometry",
            },
            {
                name: "incidentDate",
                fieldName: "incidentDate",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "completedBy",
                fieldName: "completedBy",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "status",
                fieldName: "status",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.program.ProgramStatus",
            },
            {
                name: "lastUpdatedAtClient",
                fieldName: "lastUpdatedAtClient",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
        ],
    },
    programNotificationTemplates: {
        klass: "org.hisp.dhis.program.notification.ProgramNotificationTemplate",
        shareable: false,
        metadata: true,
        relativeApiEndpoint: "/programNotificationTemplates",
        plural: "programNotificationTemplates",
        displayName: "Program Notification Template",
        collectionName: "programNotificationTemplates",
        nameableObject: false,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "programNotificationTemplate",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "notificationTrigger",
                fieldName: "notificationTrigger",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.program.notification.NotificationTrigger",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "relativeScheduledDays",
                fieldName: "relativeScheduledDays",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "subjectTemplate",
                fieldName: "subjectTemplate",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "deliveryChannels",
                fieldName: "deliveryChannels",
                propertyType: "COLLECTION",
                itemPropertyType: "CONSTANT",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.common.DeliveryChannel",
            },
            {
                name: "recipientDataElement",
                fieldName: "recipientDataElement",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.dataelement.DataElement",
            },
            { name: "displaySubjectTemplate", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "notifyUsersInHierarchyOnly",
                fieldName: "notifyUsersInHierarchyOnly",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "sendRepeatable",
                fieldName: "sendRepeatable",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "notificationRecipient",
                fieldName: "notificationRecipient",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.program.notification.ProgramNotificationRecipient",
            },
            {
                name: "recipientProgramAttribute",
                fieldName: "recipientProgramAttribute",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.trackedentity.TrackedEntityAttribute",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "notifyParentOrganisationUnitOnly",
                fieldName: "notifyParentOrganisationUnitOnly",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "displayMessageTemplate", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            {
                name: "recipientUserGroup",
                fieldName: "recipientUserGroup",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.UserGroup",
            },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "messageTemplate",
                fieldName: "messageTemplate",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
        ],
    },
    programRules: {
        klass: "org.hisp.dhis.programrule.ProgramRule",
        shareable: false,
        metadata: true,
        relativeApiEndpoint: "/programRules",
        plural: "programRules",
        displayName: "Program Rule",
        collectionName: "programRules",
        nameableObject: false,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "programRule",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "program",
                fieldName: "program",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.program.Program",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "programStage",
                fieldName: "programStage",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.program.ProgramStage",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "priority",
                fieldName: "priority",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "condition",
                fieldName: "condition",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "programRuleAction",
                fieldName: "programRuleActions",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.programrule.ProgramRuleAction",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    programRuleActions: {
        klass: "org.hisp.dhis.programrule.ProgramRuleAction",
        shareable: false,
        metadata: true,
        relativeApiEndpoint: "/programRuleActions",
        plural: "programRuleActions",
        displayName: "Program Rule Action",
        collectionName: "programRuleActions",
        nameableObject: false,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "programRuleAction",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "evaluationEnvironment",
                fieldName: "programRuleActionEvaluationEnvironments",
                propertyType: "COLLECTION",
                itemPropertyType: "CONSTANT",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.programrule.ProgramRuleActionEvaluationEnvironment",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "data", fieldName: "data", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "optionGroup",
                fieldName: "optionGroup",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.option.OptionGroup",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "templateUid",
                fieldName: "templateUid",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "content",
                fieldName: "content",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "trackedEntityAttribute",
                fieldName: "attribute",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.trackedentity.TrackedEntityAttribute",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            { name: "displayContent", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "programIndicator",
                fieldName: "programIndicator",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.program.ProgramIndicator",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "programRule",
                fieldName: "programRule",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.programrule.ProgramRule",
            },
            {
                name: "programStageSection",
                fieldName: "programStageSection",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.program.ProgramStageSection",
            },
            {
                name: "programRuleActionType",
                fieldName: "programRuleActionType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.programrule.ProgramRuleActionType",
            },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "programStage",
                fieldName: "programStage",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.program.ProgramStage",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "dataElement",
                fieldName: "dataElement",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.dataelement.DataElement",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "evaluationTime",
                fieldName: "programRuleActionEvaluationTime",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.programrule.ProgramRuleActionEvaluationTime",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "location",
                fieldName: "location",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "option",
                fieldName: "option",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.option.Option",
            },
        ],
    },
    programRuleVariables: {
        klass: "org.hisp.dhis.programrule.ProgramRuleVariable",
        shareable: false,
        metadata: true,
        relativeApiEndpoint: "/programRuleVariables",
        plural: "programRuleVariables",
        displayName: "Program Rule Variable",
        collectionName: "programRuleVariables",
        nameableObject: false,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "programRuleVariable",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "programRuleVariableSourceType",
                fieldName: "sourceType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.programrule.ProgramRuleVariableSourceType",
            },
            {
                name: "program",
                fieldName: "program",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.program.Program",
            },
            {
                name: "trackedEntityAttribute",
                fieldName: "attribute",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.trackedentity.TrackedEntityAttribute",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "programStage",
                fieldName: "programStage",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.program.ProgramStage",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "useCodeForOptionSet",
                fieldName: "useCodeForOptionSet",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "dataElement",
                fieldName: "dataElement",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.dataelement.DataElement",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    programSections: {
        klass: "org.hisp.dhis.program.ProgramSection",
        shareable: false,
        metadata: true,
        relativeApiEndpoint: "/programSections",
        plural: "programSections",
        displayName: "Program Section",
        collectionName: "programSections",
        nameableObject: true,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "programSection",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "program",
                fieldName: "program",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.program.Program",
            },
            { name: "displayShortName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "formName",
                fieldName: "formName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "renderType",
                fieldName: "renderType",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.render.DeviceRenderTypeMap",
            },
            { name: "displayDescription", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            { name: "displayFormName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "sortOrder",
                fieldName: "sortOrder",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "trackedEntityAttributes",
                fieldName: "trackedEntityAttributes",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.trackedentity.TrackedEntityAttribute",
            },
            {
                name: "style",
                fieldName: "style",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.common.ObjectStyle",
            },
            {
                name: "shortName",
                fieldName: "shortName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    programStages: {
        klass: "org.hisp.dhis.program.ProgramStage",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/programStages",
        plural: "programStages",
        displayName: "Program Stage",
        collectionName: "programStages",
        nameableObject: true,
        translatable: true,
        identifiableObject: true,
        dataShareable: true,
        name: "programStage",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "dataEntryForm",
                fieldName: "dataEntryForm",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.dataentryform.DataEntryForm",
            },
            {
                name: "allowGenerateNextVisit",
                fieldName: "allowGenerateNextVisit",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "reportDateToUse",
                fieldName: "reportDateToUse",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "program",
                fieldName: "program",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.program.Program",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "programStageDataElement",
                fieldName: "programStageDataElements",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.program.ProgramStageDataElement",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "displayDescription",
                fieldName: "displayDescription",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            { name: "formType", propertyType: "CONSTANT", klass: "org.hisp.dhis.dataset.FormType" },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "generatedByEnrollmentDate",
                fieldName: "generatedByEnrollmentDate",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            { name: "displayFormName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "sortOrder",
                fieldName: "sortOrder",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "hideDueDate",
                fieldName: "hideDueDate",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "enableUserAssignment",
                fieldName: "enableUserAssignment",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "style",
                fieldName: "style",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.common.ObjectStyle",
            },
            {
                name: "shortName",
                fieldName: "shortName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "minDaysFromStart",
                fieldName: "minDaysFromStart",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "standardInterval",
                fieldName: "standardInterval",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "dueDateLabel",
                fieldName: "dueDateLabel",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "executionDateLabel",
                fieldName: "executionDateLabel",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "preGenerateUID",
                fieldName: "preGenerateUID",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "displayShortName", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "displayExecutionDateLabel", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "notificationTemplate",
                fieldName: "notificationTemplates",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.program.notification.ProgramNotificationTemplate",
            },
            {
                name: "openAfterEnrollment",
                fieldName: "openAfterEnrollment",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "repeatable",
                fieldName: "repeatable",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "formName",
                fieldName: "formName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "featureType",
                fieldName: "featureType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.organisationunit.FeatureType",
            },
            {
                name: "remindCompleted",
                fieldName: "remindCompleted",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "displayGenerateEventBox",
                fieldName: "displayGenerateEventBox",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "nextScheduleDate",
                fieldName: "nextScheduleDate",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.dataelement.DataElement",
            },
            {
                name: "validationStrategy",
                fieldName: "validationStrategy",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.program.ValidationStrategy",
            },
            {
                name: "autoGenerateEvent",
                fieldName: "autoGenerateEvent",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "periodType",
                fieldName: "periodType",
                propertyType: "TEXT",
                klass: "org.hisp.dhis.period.PeriodType",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            { name: "displayDueDateLabel", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "blockEntryForm",
                fieldName: "blockEntryForm",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            {
                name: "programStageSection",
                fieldName: "programStageSections",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.program.ProgramStageSection",
            },
        ],
    },
    programStageDataElements: {
        klass: "org.hisp.dhis.program.ProgramStageDataElement",
        shareable: false,
        metadata: false,
        plural: "programStageDataElements",
        displayName: "Program Stage Data Element",
        collectionName: "programStageDataElements",
        nameableObject: false,
        translatable: false,
        identifiableObject: true,
        dataShareable: false,
        name: "programStageDataElement",
        persisted: true,
        embeddedObject: true,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "displayInReports",
                fieldName: "displayInReports",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "skipSynchronization",
                fieldName: "skipSynchronization",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "renderOptionsAsRadio",
                fieldName: "renderOptionsAsRadio",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "allowFutureDate",
                fieldName: "allowFutureDate",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "renderType",
                fieldName: "renderType",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.render.DeviceRenderTypeMap",
            },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "programStage",
                fieldName: "programStage",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.program.ProgramStage",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "dataElement",
                fieldName: "dataElement",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.dataelement.DataElement",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "compulsory",
                fieldName: "compulsory",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "allowProvidedElsewhere",
                fieldName: "allowProvidedElsewhere",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "sortOrder",
                fieldName: "sortOrder",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    programStageInstances: {
        klass: "org.hisp.dhis.program.ProgramStageInstance",
        shareable: false,
        metadata: false,
        relativeApiEndpoint: "/programStageInstances",
        plural: "programStageInstances",
        displayName: "Program Stage Instance",
        collectionName: "programStageInstances",
        nameableObject: false,
        translatable: false,
        identifiableObject: true,
        dataShareable: false,
        name: "softDeletableObject",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "storedBy",
                fieldName: "storedBy",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "organisationUnit",
                fieldName: "organisationUnit",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.organisationunit.OrganisationUnit",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "dueDate",
                fieldName: "dueDate",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "createdAtClient",
                fieldName: "createdAtClient",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "messageConversations",
                fieldName: "messageConversations",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.message.MessageConversation",
            },
            {
                name: "lastUpdatedByUserInfo",
                fieldName: "lastUpdatedByUserInfo",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.program.UserInfoSnapshot",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "eventDataValues",
                fieldName: "eventDataValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.eventdatavalue.EventDataValue",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "relationshipItem",
                fieldName: "relationshipItems",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.relationship.RelationshipItem",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "createdByUserInfo",
                fieldName: "createdByUserInfo",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.program.UserInfoSnapshot",
            },
            {
                name: "assignedUser",
                fieldName: "assignedUser",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "programStage",
                fieldName: "programStage",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.program.ProgramStage",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "comments",
                fieldName: "comments",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.trackedentitycomment.TrackedEntityComment",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            { name: "creatableInSearchScope", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            { name: "completed", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "completedDate",
                fieldName: "completedDate",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "programInstance",
                fieldName: "programInstance",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.program.ProgramInstance",
            },
            {
                name: "deleted",
                fieldName: "deleted",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            {
                name: "attributeOptionCombo",
                fieldName: "attributeOptionCombo",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.category.CategoryOptionCombo",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "geometry",
                fieldName: "geometry",
                propertyType: "COMPLEX",
                klass: "org.locationtech.jts.geom.Geometry",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "completedBy",
                fieldName: "completedBy",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "status",
                fieldName: "status",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.event.EventStatus",
            },
            {
                name: "lastUpdatedAtClient",
                fieldName: "lastUpdatedAtClient",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "eventDate",
                fieldName: "executionDate",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
        ],
    },
    eventFilters: {
        klass: "org.hisp.dhis.programstagefilter.ProgramStageInstanceFilter",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/eventFilters",
        plural: "eventFilters",
        displayName: "Program Stage Instance Filter",
        collectionName: "eventFilters",
        nameableObject: false,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "programStageInstanceFilter",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "eventQueryCriteria",
                fieldName: "eventQueryCriteria",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.programstagefilter.EventQueryCriteria",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "program",
                fieldName: "program",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "displayDescription", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "programStage",
                fieldName: "programStage",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    programStageSections: {
        klass: "org.hisp.dhis.program.ProgramStageSection",
        shareable: false,
        metadata: true,
        relativeApiEndpoint: "/programStageSections",
        plural: "programStageSections",
        displayName: "Program Stage Section",
        collectionName: "programStageSections",
        nameableObject: true,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "programStageSection",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "displayShortName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "programIndicator",
                fieldName: "programIndicators",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.program.ProgramIndicator",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "formName",
                fieldName: "formName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "renderType",
                fieldName: "renderType",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.render.DeviceRenderTypeMap",
            },
            {
                name: "dataElement",
                fieldName: "dataElements",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.dataelement.DataElement",
            },
            { name: "displayDescription", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "programStage",
                fieldName: "programStage",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.program.ProgramStage",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            { name: "displayFormName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "sortOrder",
                fieldName: "sortOrder",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "style",
                fieldName: "style",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.common.ObjectStyle",
            },
            {
                name: "shortName",
                fieldName: "shortName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    programTrackedEntityAttributes: {
        klass: "org.hisp.dhis.program.ProgramTrackedEntityAttribute",
        shareable: false,
        metadata: false,
        plural: "programTrackedEntityAttributes",
        displayName: "Program Tracked Entity Attribute",
        collectionName: "programTrackedEntityAttributes",
        nameableObject: false,
        translatable: false,
        identifiableObject: true,
        dataShareable: false,
        name: "programTrackedEntityAttribute",
        persisted: true,
        embeddedObject: true,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "programTrackedEntityAttributeGroups",
                fieldName: "groups",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.program.ProgramTrackedEntityAttributeGroup",
            },
            {
                name: "program",
                fieldName: "program",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.program.Program",
            },
            {
                name: "mandatory",
                fieldName: "mandatory",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "trackedEntityAttribute",
                fieldName: "attribute",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.trackedentity.TrackedEntityAttribute",
            },
            { name: "displayShortName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "renderOptionsAsRadio",
                fieldName: "renderOptionsAsRadio",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "valueType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.ValueType",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "allowFutureDate",
                fieldName: "allowFutureDate",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "renderType",
                fieldName: "renderType",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.render.DeviceRenderTypeMap",
            },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "searchable",
                fieldName: "searchable",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "displayInList",
                fieldName: "displayInList",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "sortOrder",
                fieldName: "sortOrder",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    programTrackedEntityAttributeDimensionItems: {
        klass: "org.hisp.dhis.program.ProgramTrackedEntityAttributeDimensionItem",
        shareable: false,
        metadata: false,
        plural: "programTrackedEntityAttributeDimensionItems",
        displayName: "Program Tracked Entity Attribute Dimension Item",
        collectionName: "programTrackedEntityAttributeDimensionItems",
        nameableObject: true,
        translatable: false,
        identifiableObject: true,
        dataShareable: false,
        name: "programAttributeDimension",
        persisted: false,
        embeddedObject: true,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "aggregationType",
                fieldName: "aggregationType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.analytics.AggregationType",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "program",
                fieldName: "program",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.program.Program",
            },
            { name: "displayShortName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "periodOffset",
                fieldName: "periodOffset",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "formName",
                fieldName: "formName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            {
                name: "attribute",
                fieldName: "attribute",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.trackedentity.TrackedEntityAttribute",
            },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "displayDescription", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            { name: "dimensionItem", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            { name: "displayFormName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "legendSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "legendSets",
                fieldName: "legendSets",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "shortName",
                fieldName: "shortName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "dimensionItemType",
                fieldName: "dimensionItemType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.DimensionItemType",
            },
        ],
    },
    programTrackedEntityAttributeGroups: {
        klass: "org.hisp.dhis.program.ProgramTrackedEntityAttributeGroup",
        shareable: false,
        metadata: true,
        relativeApiEndpoint: "/programTrackedEntityAttributeGroups",
        plural: "programTrackedEntityAttributeGroups",
        displayName: "Program Tracked Entity Attribute Group",
        collectionName: "programTrackedEntityAttributeGroups",
        nameableObject: true,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "programTrackedEntityAttributeGroup",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "uniqunessType",
                fieldName: "uniqunessType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.program.UniqunessType",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "displayShortName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "formName",
                fieldName: "formName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "displayDescription", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            { name: "displayFormName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "attribute",
                fieldName: "attributes",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.program.ProgramTrackedEntityAttribute",
            },
            {
                name: "shortName",
                fieldName: "shortName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    pushAnalysis: {
        klass: "org.hisp.dhis.pushanalysis.PushAnalysis",
        shareable: false,
        metadata: true,
        relativeApiEndpoint: "/pushAnalysis",
        plural: "pushAnalysis",
        displayName: "Push Analysis",
        collectionName: "pushAnalysis",
        nameableObject: false,
        translatable: false,
        identifiableObject: true,
        dataShareable: false,
        name: "pushanalysis",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "recipientUserGroups",
                fieldName: "recipientUserGroups",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroup",
            },
            { name: "title", fieldName: "title", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            {
                name: "dashboard",
                fieldName: "dashboard",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.dashboard.Dashboard",
            },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "message",
                fieldName: "message",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    relationships: {
        klass: "org.hisp.dhis.relationship.Relationship",
        shareable: false,
        metadata: false,
        relativeApiEndpoint: "/relationships",
        plural: "relationships",
        displayName: "Relationship",
        collectionName: "relationships",
        nameableObject: true,
        translatable: false,
        identifiableObject: true,
        dataShareable: false,
        name: "relationship",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "displayShortName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "formName",
                fieldName: "formName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "from",
                fieldName: "from",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.relationship.RelationshipItem",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "displayDescription", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "relationshipType",
                fieldName: "relationshipType",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.relationship.RelationshipType",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            { name: "displayFormName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "style",
                fieldName: "style",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.common.ObjectStyle",
            },
            {
                name: "to",
                fieldName: "to",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.relationship.RelationshipItem",
            },
            {
                name: "shortName",
                fieldName: "shortName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    relationshipTypes: {
        klass: "org.hisp.dhis.relationship.RelationshipType",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/relationshipTypes",
        plural: "relationshipTypes",
        displayName: "Relationship Type",
        collectionName: "relationshipTypes",
        nameableObject: false,
        translatable: true,
        identifiableObject: true,
        dataShareable: true,
        name: "relationshipType",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "bidirectional",
                fieldName: "bidirectional",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "fromToName",
                fieldName: "fromToName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            { name: "displayFromToName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "toConstraint",
                fieldName: "toConstraint",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.relationship.RelationshipConstraint",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "toFromName",
                fieldName: "toFromName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            { name: "displayToFromName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "fromConstraint",
                fieldName: "fromConstraint",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.relationship.RelationshipConstraint",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    reports: {
        klass: "org.hisp.dhis.report.Report",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/reports",
        plural: "reports",
        displayName: "Report",
        collectionName: "reports",
        nameableObject: false,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "report",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "designContent",
                fieldName: "designContent",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "visualization",
                fieldName: "visualization",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.visualization.Visualization",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "type",
                fieldName: "type",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.report.ReportType",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "relativePeriods",
                fieldName: "relatives",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.period.RelativePeriods",
            },
            {
                name: "reportParams",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.visualization.ReportingParams",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "cacheStrategy",
                fieldName: "cacheStrategy",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.cache.CacheStrategy",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    reportTables: {
        klass: "org.hisp.dhis.reporttable.ReportTable",
        shareable: false,
        metadata: true,
        relativeApiEndpoint: "/reportTables",
        plural: "reportTables",
        displayName: "Report Table",
        collectionName: "reportTables",
        nameableObject: true,
        translatable: false,
        identifiableObject: true,
        dataShareable: false,
        name: "reportTable",
        persisted: false,
        embeddedObject: false,
        properties: [
            {
                name: "dataElementGroupSetDimension",
                fieldName: "dataElementGroupSetDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.dataelement.DataElementGroupSetDimension",
            },
            {
                name: "orgUnitField",
                fieldName: "orgUnitField",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "numberType",
                fieldName: "numberType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.analytics.NumberType",
            },
            {
                name: "endDate",
                fieldName: "endDate",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "userOrganisationUnitChildren",
                fieldName: "userOrganisationUnitChildren",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            { name: "displaySubtitle", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "legendDisplayStyle",
                fieldName: "legendDisplayStyle",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.legend.LegendDisplayStyle",
            },
            {
                name: "hideEmptyColumns",
                fieldName: "hideEmptyColumns",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "measureCriteria",
                fieldName: "measureCriteria",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "subscribed", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            { name: "displayTitle", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "hideEmptyRows",
                fieldName: "hideEmptyRows",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "attributeDimension",
                fieldName: "attributeDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.trackedentity.TrackedEntityAttributeDimension",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "reportParams",
                fieldName: "reportParams",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.reporttable.ReportParams",
            },
            {
                name: "parentGraphMap",
                fieldName: "parentGraphMap",
                propertyType: "COMPLEX",
                klass: "java.util.Map",
            },
            {
                name: "userOrganisationUnit",
                fieldName: "userOrganisationUnit",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "filterDimension",
                fieldName: "filterDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.List",
                itemKlass: "java.lang.String",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "rowSubTotals",
                fieldName: "rowSubTotals",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "interpretation",
                fieldName: "interpretations",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.interpretation.Interpretation",
            },
            {
                name: "itemOrganisationUnitGroup",
                fieldName: "itemOrganisationUnitGroups",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.organisationunit.OrganisationUnitGroup",
            },
            {
                name: "displayDensity",
                fieldName: "displayDensity",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.DisplayDensity",
            },
            { name: "displayDescription", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "programIndicatorDimension",
                fieldName: "programIndicatorDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.trackedentity.TrackedEntityProgramIndicatorDimension",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "subscriber",
                fieldName: "subscribers",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "columnDimension",
                fieldName: "columnDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.List",
                itemKlass: "java.lang.String",
            },
            {
                name: "completedOnly",
                fieldName: "completedOnly",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "colTotals",
                fieldName: "colTotals",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            { name: "displayFormName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "showDimensionLabels",
                fieldName: "showDimensionLabels",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "subtitle",
                fieldName: "subtitle",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "sortOrder",
                fieldName: "sortOrder",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "fontSize",
                fieldName: "fontSize",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.FontSize",
            },
            {
                name: "shortName",
                fieldName: "shortName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "topLimit",
                fieldName: "topLimit",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "startDate",
                fieldName: "startDate",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "dataDimensionItem",
                fieldName: "dataDimensionItems",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.common.DataDimensionItem",
            },
            {
                name: "aggregationType",
                fieldName: "aggregationType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.analytics.AggregationType",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "categoryOptionGroupSetDimension",
                fieldName: "categoryOptionGroupSetDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.category.CategoryOptionGroupSetDimension",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "userOrganisationUnitGrandChildren",
                fieldName: "userOrganisationUnitGrandChildren",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "column",
                fieldName: "columns",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.common.DimensionalObject",
            },
            {
                name: "hideSubtitle",
                fieldName: "hideSubtitle",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "organisationUnitGroupSetDimension",
                fieldName: "organisationUnitGroupSetDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.organisationunit.OrganisationUnitGroupSetDimension",
            },
            { name: "title", fieldName: "title", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "displayShortName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "organisationUnitLevel",
                fieldName: "organisationUnitLevels",
                propertyType: "COLLECTION",
                itemPropertyType: "INTEGER",
                klass: "java.util.List",
                itemKlass: "java.lang.Integer",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "legendDisplayStrategy",
                fieldName: "legendDisplayStrategy",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.legend.LegendDisplayStrategy",
            },
            {
                name: "colSubTotals",
                fieldName: "colSubTotals",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "relativePeriods",
                fieldName: "relatives",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.period.RelativePeriods",
            },
            {
                name: "dataElementDimension",
                fieldName: "dataElementDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.trackedentity.TrackedEntityDataElementDimension",
            },
            {
                name: "formName",
                fieldName: "formName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "period",
                fieldName: "periods",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.period.Period",
            },
            {
                name: "organisationUnit",
                fieldName: "organisationUnits",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.organisationunit.OrganisationUnit",
            },
            {
                name: "categoryDimension",
                fieldName: "categoryDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.category.CategoryDimension",
            },
            {
                name: "showHierarchy",
                fieldName: "showHierarchy",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "rowTotals",
                fieldName: "rowTotals",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "timeField",
                fieldName: "timeField",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "filter",
                fieldName: "filters",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.common.DimensionalObject",
            },
            {
                name: "cumulative",
                fieldName: "cumulative",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "row",
                fieldName: "rows",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.common.DimensionalObject",
            },
            {
                name: "digitGroupSeparator",
                fieldName: "digitGroupSeparator",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.DigitGroupSeparator",
            },
            {
                name: "hideTitle",
                fieldName: "hideTitle",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "rowDimension",
                fieldName: "rowDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.List",
                itemKlass: "java.lang.String",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "regression",
                fieldName: "regression",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "legendSet",
                fieldName: "legendSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "userOrgUnitType",
                fieldName: "userOrgUnitType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.analytics.UserOrgUnitType",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            {
                name: "skipRounding",
                fieldName: "skipRounding",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
        ],
    },
    reportingRates: {
        klass: "org.hisp.dhis.common.ReportingRate",
        shareable: false,
        metadata: false,
        plural: "reportingRates",
        displayName: "Reporting Rate",
        collectionName: "reportingRates",
        nameableObject: true,
        translatable: false,
        identifiableObject: true,
        dataShareable: false,
        name: "reportingRate",
        persisted: false,
        embeddedObject: true,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "aggregationType",
                fieldName: "aggregationType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.analytics.AggregationType",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "displayShortName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "periodOffset",
                fieldName: "periodOffset",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "formName",
                fieldName: "formName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "dataSet",
                fieldName: "dataSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.dataset.DataSet",
            },
            { name: "displayDescription", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            { name: "dimensionItem", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            { name: "displayFormName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "metric",
                fieldName: "metric",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.ReportingRateMetric",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "legendSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "legendSets",
                fieldName: "legendSets",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "shortName",
                fieldName: "shortName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "dimensionItemType",
                fieldName: "dimensionItemType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.DimensionItemType",
            },
        ],
    },
    smsCommands: {
        klass: "org.hisp.dhis.sms.command.SMSCommand",
        shareable: false,
        metadata: true,
        relativeApiEndpoint: "/smsCommands",
        plural: "smsCommands",
        displayName: "S M S Command",
        collectionName: "smsCommands",
        nameableObject: false,
        translatable: false,
        identifiableObject: true,
        dataShareable: false,
        name: "smscommand",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "moreThanOneOrgUnitMessage",
                fieldName: "moreThanOneOrgUnitMessage",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "smsCode",
                fieldName: "codes",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.sms.command.code.SMSCode",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "specialCharacter",
                fieldName: "specialCharacters",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.sms.command.SMSSpecialCharacter",
            },
            {
                name: "currentPeriodUsedForReporting",
                fieldName: "currentPeriodUsedForReporting",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "program",
                fieldName: "program",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.program.Program",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "noUserMessage",
                fieldName: "noUserMessage",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "receivedMessage",
                fieldName: "receivedMessage",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "defaultMessage",
                fieldName: "defaultMessage",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "userGroup",
                fieldName: "userGroup",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.UserGroup",
            },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "programStage",
                fieldName: "programStage",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.program.ProgramStage",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "completenessMethod",
                fieldName: "completenessMethod",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.sms.command.CompletenessMethod",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "wrongFormatMessage",
                fieldName: "wrongFormatMessage",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "separator",
                fieldName: "separator",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "successMessage",
                fieldName: "successMessage",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "codeValueSeparator",
                fieldName: "codeValueSeparator",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "parserType",
                fieldName: "parserType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.sms.parse.ParserType",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            {
                name: "dataset",
                fieldName: "dataset",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.dataset.DataSet",
            },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    sections: {
        klass: "org.hisp.dhis.dataset.Section",
        shareable: false,
        metadata: true,
        relativeApiEndpoint: "/sections",
        plural: "sections",
        displayName: "Section",
        collectionName: "sections",
        nameableObject: false,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "section",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "greyedField",
                fieldName: "greyedFields",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.dataelement.DataElementOperand",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "categoryCombos",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.category.CategoryCombo",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "dataSet",
                fieldName: "dataSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.dataset.DataSet",
            },
            {
                name: "dataElement",
                fieldName: "dataElements",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.dataelement.DataElement",
            },
            {
                name: "showColumnTotals",
                fieldName: "showColumnTotals",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "indicator",
                fieldName: "indicators",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.indicator.Indicator",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "sortOrder",
                fieldName: "sortOrder",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            {
                name: "showRowTotals",
                fieldName: "showRowTotals",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    sqlViews: {
        klass: "org.hisp.dhis.sqlview.SqlView",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/sqlViews",
        plural: "sqlViews",
        displayName: "Sql View",
        collectionName: "sqlViews",
        nameableObject: false,
        translatable: false,
        identifiableObject: true,
        dataShareable: true,
        name: "sqlView",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "type",
                fieldName: "type",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.sqlview.SqlViewType",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "sqlQuery",
                fieldName: "sqlQuery",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "cacheStrategy",
                fieldName: "cacheStrategy",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.cache.CacheStrategy",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    trackedEntityAttributes: {
        klass: "org.hisp.dhis.trackedentity.TrackedEntityAttribute",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/trackedEntityAttributes",
        plural: "trackedEntityAttributes",
        displayName: "Tracked Entity Attribute",
        collectionName: "trackedEntityAttributes",
        nameableObject: true,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "trackedEntityAttribute",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "generated",
                fieldName: "generated",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "valueType",
                fieldName: "valueType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.ValueType",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "confidential",
                fieldName: "confidential",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            { name: "displayDescription", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            { name: "displayFormName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "unique",
                fieldName: "unique",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "legendSets",
                fieldName: "legendSets",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "style",
                fieldName: "style",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.common.ObjectStyle",
            },
            {
                name: "shortName",
                fieldName: "shortName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "dimensionItemType",
                fieldName: "dimensionItemType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.DimensionItemType",
            },
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "aggregationType",
                fieldName: "aggregationType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.analytics.AggregationType",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "displayInListNoProgram",
                fieldName: "displayInListNoProgram",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "pattern",
                fieldName: "pattern",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "skipSynchronization",
                fieldName: "skipSynchronization",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            { name: "displayShortName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "sortOrderInListNoProgram",
                fieldName: "sortOrderInListNoProgram",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "periodOffset",
                fieldName: "periodOffset",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "optionSet",
                fieldName: "optionSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.option.OptionSet",
            },
            {
                name: "displayOnVisitSchedule",
                fieldName: "displayOnVisitSchedule",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "formName",
                fieldName: "formName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "sortOrderInVisitSchedule",
                fieldName: "sortOrderInVisitSchedule",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "orgunitScope",
                fieldName: "orgunitScope",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "fieldMask",
                fieldName: "fieldMask",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "expression",
                fieldName: "expression",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "dimensionItem", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "inherit",
                fieldName: "inherit",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "legendSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.legend.LegendSet",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "optionSetValue", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    trackedEntityAttributeValues: {
        klass: "org.hisp.dhis.trackedentityattributevalue.TrackedEntityAttributeValue",
        shareable: false,
        metadata: false,
        relativeApiEndpoint: "/trackedEntityAttributeValues",
        plural: "trackedEntityAttributeValues",
        displayName: "Tracked Entity Attribute Value",
        collectionName: "trackedEntityAttributeValues",
        nameableObject: false,
        translatable: false,
        identifiableObject: false,
        dataShareable: false,
        name: "trackedEntityAttributeValue",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "storedBy",
                fieldName: "storedBy",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            { name: "value", fieldName: "value", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "trackedEntityAttribute",
                fieldName: "attribute",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.trackedentity.TrackedEntityAttribute",
            },
            {
                name: "trackedEntityInstance",
                fieldName: "entityInstance",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.trackedentity.TrackedEntityInstance",
            },
        ],
    },
    trackedEntityDataElementDimensions: {
        klass: "org.hisp.dhis.trackedentity.TrackedEntityDataElementDimension",
        shareable: false,
        metadata: false,
        plural: "trackedEntityDataElementDimensions",
        displayName: "Tracked Entity Data Element Dimension",
        collectionName: "trackedEntityDataElementDimensions",
        nameableObject: false,
        translatable: false,
        identifiableObject: false,
        dataShareable: false,
        name: "dataElementDimension",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "filter",
                fieldName: "filter",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "legendSet",
                fieldName: "legendSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "programStage",
                fieldName: "programStage",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.program.ProgramStage",
            },
            {
                name: "dataElement",
                fieldName: "dataElement",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.dataelement.DataElement",
            },
        ],
    },
    trackedEntityInstances: {
        klass: "org.hisp.dhis.trackedentity.TrackedEntityInstance",
        shareable: false,
        metadata: false,
        relativeApiEndpoint: "/trackedEntityInstances",
        plural: "trackedEntityInstances",
        displayName: "Tracked Entity Instance",
        collectionName: "trackedEntityInstances",
        nameableObject: false,
        translatable: false,
        identifiableObject: true,
        dataShareable: false,
        name: "trackedEntityInstance",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "programOwners",
                fieldName: "programOwners",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.trackedentity.TrackedEntityProgramOwner",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "storedBy",
                fieldName: "storedBy",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "programInstance",
                fieldName: "programInstances",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.program.ProgramInstance",
            },
            {
                name: "organisationUnit",
                fieldName: "organisationUnit",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.organisationunit.OrganisationUnit",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "createdAtClient",
                fieldName: "createdAtClient",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "lastUpdatedByUserInfo",
                fieldName: "lastUpdatedByUserInfo",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.program.UserInfoSnapshot",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "inactive",
                fieldName: "inactive",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "relationshipItem",
                fieldName: "relationshipItems",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.relationship.RelationshipItem",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "createdByUserInfo",
                fieldName: "createdByUserInfo",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.program.UserInfoSnapshot",
            },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "deleted",
                fieldName: "deleted",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "trackedEntityType",
                fieldName: "trackedEntityType",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.trackedentity.TrackedEntityType",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "geometry",
                fieldName: "geometry",
                propertyType: "COMPLEX",
                klass: "org.locationtech.jts.geom.Geometry",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "trackedEntityAttributeValue",
                fieldName: "trackedEntityAttributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.trackedentityattributevalue.TrackedEntityAttributeValue",
            },
            {
                name: "lastUpdatedAtClient",
                fieldName: "lastUpdatedAtClient",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
        ],
    },
    trackedEntityInstanceFilters: {
        klass: "org.hisp.dhis.trackedentityfilter.TrackedEntityInstanceFilter",
        shareable: false,
        metadata: true,
        relativeApiEndpoint: "/trackedEntityInstanceFilters",
        plural: "trackedEntityInstanceFilters",
        displayName: "Tracked Entity Instance Filter",
        collectionName: "trackedEntityInstanceFilters",
        nameableObject: false,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "trackedEntityInstanceFilter",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "program",
                fieldName: "program",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.program.Program",
            },
            {
                name: "enrollmentCreatedPeriod",
                fieldName: "enrollmentCreatedPeriod",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.trackedentityfilter.FilterPeriod",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "displayDescription", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "followup",
                fieldName: "followup",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "eventFilters",
                fieldName: "eventFilters",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.trackedentityfilter.EventFilter",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "enrollmentStatus",
                fieldName: "enrollmentStatus",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.program.ProgramStatus",
            },
            {
                name: "sortOrder",
                fieldName: "sortOrder",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "style",
                fieldName: "style",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.common.ObjectStyle",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    dataElementDimensions: {
        klass: "org.hisp.dhis.trackedentity.TrackedEntityProgramIndicatorDimension",
        shareable: false,
        metadata: false,
        plural: "dataElementDimensions",
        displayName: "Tracked Entity Program Indicator Dimension",
        collectionName: "dataElementDimensions",
        nameableObject: false,
        translatable: false,
        identifiableObject: false,
        dataShareable: false,
        name: "programIndicatorDimension",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "filter",
                fieldName: "filter",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "legendSet",
                fieldName: "legendSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "programIndicator",
                fieldName: "programIndicator",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.program.ProgramIndicator",
            },
        ],
    },
    trackedEntityTypes: {
        klass: "org.hisp.dhis.trackedentity.TrackedEntityType",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/trackedEntityTypes",
        plural: "trackedEntityTypes",
        displayName: "Tracked Entity Type",
        collectionName: "trackedEntityTypes",
        nameableObject: true,
        translatable: true,
        identifiableObject: true,
        dataShareable: true,
        name: "trackedEntityType",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "trackedEntityTypeAttribute",
                fieldName: "trackedEntityTypeAttributes",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.trackedentity.TrackedEntityTypeAttribute",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "displayShortName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "allowAuditLog",
                fieldName: "allowAuditLog",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "formName",
                fieldName: "formName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "featureType",
                fieldName: "featureType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.organisationunit.FeatureType",
            },
            {
                name: "minAttributesRequiredToSearch",
                fieldName: "minAttributesRequiredToSearch",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "displayDescription", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            { name: "displayFormName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "maxTeiCountToReturn",
                fieldName: "maxTeiCountToReturn",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "style",
                fieldName: "style",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.common.ObjectStyle",
            },
            {
                name: "shortName",
                fieldName: "shortName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    trackedEntityTypeAttributes: {
        klass: "org.hisp.dhis.trackedentity.TrackedEntityTypeAttribute",
        shareable: false,
        metadata: false,
        plural: "trackedEntityTypeAttributes",
        displayName: "Tracked Entity Type Attribute",
        collectionName: "trackedEntityTypeAttributes",
        nameableObject: false,
        translatable: false,
        identifiableObject: true,
        dataShareable: false,
        name: "trackedEntityTypeAttribute",
        persisted: true,
        embeddedObject: true,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "mandatory",
                fieldName: "mandatory",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "trackedEntityAttribute",
                fieldName: "trackedEntityAttribute",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.trackedentity.TrackedEntityAttribute",
            },
            { name: "displayShortName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "valueType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.ValueType",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "searchable",
                fieldName: "searchable",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "displayInList",
                fieldName: "displayInList",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "trackedEntityType",
                fieldName: "trackedEntityType",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.trackedentity.TrackedEntityType",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    users: {
        klass: "org.hisp.dhis.user.User",
        shareable: false,
        metadata: true,
        relativeApiEndpoint: "/users",
        plural: "users",
        displayName: "User",
        collectionName: "users",
        nameableObject: false,
        translatable: false,
        identifiableObject: true,
        dataShareable: false,
        name: "user",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "birthday",
                fieldName: "birthday",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "education",
                fieldName: "education",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "gender",
                fieldName: "gender",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "jobTitle",
                fieldName: "jobTitle",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            { name: "skype", fieldName: "skype", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "teiSearchOrganisationUnit",
                fieldName: "teiSearchOrganisationUnits",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.organisationunit.OrganisationUnit",
            },
            {
                name: "twitter",
                fieldName: "twitter",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "surname",
                fieldName: "surname",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "employer",
                fieldName: "employer",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            {
                name: "organisationUnit",
                fieldName: "organisationUnits",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.organisationunit.OrganisationUnit",
            },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "facebookMessenger",
                fieldName: "facebookMessenger",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "introduction",
                fieldName: "introduction",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "email", fieldName: "email", propertyType: "EMAIL", klass: "java.lang.String" },
            {
                name: "dataViewOrganisationUnit",
                fieldName: "dataViewOrganisationUnits",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.organisationunit.OrganisationUnit",
            },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "whatsApp",
                fieldName: "whatsApp",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "languages",
                fieldName: "languages",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "welcomeMessage",
                fieldName: "welcomeMessage",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "userCredentials",
                fieldName: "userCredentials",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.UserCredentials",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "telegram",
                fieldName: "telegram",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "avatar",
                fieldName: "avatar",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.fileresource.FileResource",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "lastCheckedInterpretations",
                fieldName: "lastCheckedInterpretations",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "userGroup",
                fieldName: "groups",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroup",
            },
            {
                name: "firstName",
                fieldName: "firstName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "phoneNumber",
                fieldName: "phoneNumber",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "nationality",
                fieldName: "nationality",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "interests",
                fieldName: "interests",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    userAccesses: {
        klass: "org.hisp.dhis.user.sharing.UserAccess",
        shareable: false,
        metadata: false,
        plural: "userAccesses",
        displayName: "User Access",
        collectionName: "userAccesses",
        nameableObject: false,
        translatable: false,
        identifiableObject: false,
        dataShareable: false,
        name: "userAccess",
        persisted: false,
        embeddedObject: false,
        properties: [],
    },
    userRoles: {
        klass: "org.hisp.dhis.user.UserAuthorityGroup",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/userRoles",
        plural: "userRoles",
        displayName: "User Authority Group",
        collectionName: "userRoles",
        nameableObject: false,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "userRole",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "authority",
                fieldName: "authorities",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "userObject",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.user.User",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    userCredentials: {
        klass: "org.hisp.dhis.user.UserCredentials",
        shareable: false,
        metadata: false,
        plural: "userCredentials",
        displayName: "User Credentials",
        collectionName: "userCredentials",
        nameableObject: false,
        translatable: false,
        identifiableObject: true,
        dataShareable: false,
        name: "userCredentials",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "lastLogin",
                fieldName: "lastLogin",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "userInfo",
                fieldName: "userInfo",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "openId",
                fieldName: "openId",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "externalAuth",
                fieldName: "externalAuth",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "cogsDimensionConstraint",
                fieldName: "cogsDimensionConstraints",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.category.CategoryOptionGroupSet",
            },
            {
                name: "accountExpiry",
                fieldName: "accountExpiry",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "catDimensionConstraint",
                fieldName: "catDimensionConstraints",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.category.Category",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "password",
                fieldName: "password",
                propertyType: "PASSWORD",
                klass: "java.lang.String",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "ldapId",
                fieldName: "ldapId",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "disabled",
                fieldName: "disabled",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "twoFA",
                fieldName: "twoFA",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "passwordLastUpdated",
                fieldName: "passwordLastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "invitation",
                fieldName: "invitation",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "selfRegistered",
                fieldName: "selfRegistered",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "userRole",
                fieldName: "userAuthorityGroups",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAuthorityGroup",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "username",
                fieldName: "username",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
        ],
    },
    userGroups: {
        klass: "org.hisp.dhis.user.UserGroup",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/userGroups",
        plural: "userGroups",
        displayName: "User Group",
        collectionName: "userGroups",
        nameableObject: false,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "userGroup",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "managedByGroup",
                fieldName: "managedByGroups",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroup",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "user",
                fieldName: "members",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.User",
            },
            {
                name: "managedGroup",
                fieldName: "managedGroups",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroup",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    userGroupAccesses: {
        klass: "org.hisp.dhis.user.sharing.UserGroupAccess",
        shareable: false,
        metadata: false,
        plural: "userGroupAccesses",
        displayName: "User Group Access",
        collectionName: "userGroupAccesses",
        nameableObject: false,
        translatable: false,
        identifiableObject: false,
        dataShareable: false,
        name: "userGroupAccess",
        persisted: false,
        embeddedObject: false,
        properties: [],
    },
    validationNotificationTemplates: {
        klass: "org.hisp.dhis.validation.notification.ValidationNotificationTemplate",
        shareable: false,
        metadata: true,
        relativeApiEndpoint: "/validationNotificationTemplates",
        plural: "validationNotificationTemplates",
        displayName: "Validation Notification Template",
        collectionName: "validationNotificationTemplates",
        nameableObject: false,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "identifiableObject",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "recipientUserGroups",
                fieldName: "recipientUserGroups",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroup",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "subjectTemplate",
                fieldName: "subjectTemplate",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "sendStrategy",
                fieldName: "sendStrategy",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.notification.SendStrategy",
            },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "validationRules",
                fieldName: "validationRules",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.validation.ValidationRule",
            },
            { name: "displaySubjectTemplate", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "notifyUsersInHierarchyOnly",
                fieldName: "notifyUsersInHierarchyOnly",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "notifyParentOrganisationUnitOnly",
                fieldName: "notifyParentOrganisationUnitOnly",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "displayMessageTemplate", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "messageTemplate",
                fieldName: "messageTemplate",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
        ],
    },
    validationResults: {
        klass: "org.hisp.dhis.validation.ValidationResult",
        shareable: false,
        metadata: false,
        relativeApiEndpoint: "/validationResults",
        plural: "validationResults",
        displayName: "Validation Result",
        collectionName: "validationResults",
        nameableObject: false,
        translatable: false,
        identifiableObject: false,
        dataShareable: false,
        name: "validationResult",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "period",
                fieldName: "period",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.period.Period",
            },
            {
                name: "organisationUnit",
                fieldName: "organisationUnit",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.organisationunit.OrganisationUnit",
            },
            {
                name: "validationRule",
                fieldName: "validationRule",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.validation.ValidationRule",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeOptionCombo",
                fieldName: "attributeOptionCombo",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.category.CategoryOptionCombo",
            },
            {
                name: "rightsideValue",
                fieldName: "rightsideValue",
                propertyType: "NUMBER",
                klass: "java.lang.Double",
            },
            { name: "id", fieldName: "id", propertyType: "TEXT", klass: "java.lang.Long" },
            {
                name: "leftsideValue",
                fieldName: "leftsideValue",
                propertyType: "NUMBER",
                klass: "java.lang.Double",
            },
            {
                name: "notificationSent",
                fieldName: "notificationSent",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "dayInPeriod",
                fieldName: "dayInPeriod",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
        ],
    },
    validationRules: {
        klass: "org.hisp.dhis.validation.ValidationRule",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/validationRules",
        plural: "validationRules",
        displayName: "Validation Rule",
        collectionName: "validationRules",
        nameableObject: true,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "validationRule",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "validationRuleGroup",
                fieldName: "groups",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.validation.ValidationRuleGroup",
            },
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "aggregationType",
                fieldName: "aggregationType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.analytics.AggregationType",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "importance",
                fieldName: "importance",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.validation.Importance",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "aggregateExportCategoryOptionCombo",
                fieldName: "aggregateExportCategoryOptionCombo",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "displayShortName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "operator",
                fieldName: "operator",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.expression.Operator",
            },
            {
                name: "organisationUnitLevels",
                fieldName: "organisationUnitLevels",
                propertyType: "COLLECTION",
                itemPropertyType: "INTEGER",
                klass: "java.util.Set",
                itemKlass: "java.lang.Integer",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            { name: "displayInstruction", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "leftSide",
                fieldName: "leftSide",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.expression.Expression",
            },
            {
                name: "periodOffset",
                fieldName: "periodOffset",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "notificationTemplates",
                fieldName: "notificationTemplates",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.validation.notification.ValidationNotificationTemplate",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "formName",
                fieldName: "formName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "displayDescription", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            { name: "dimensionItem", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "rightSide",
                fieldName: "rightSide",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.expression.Expression",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            { name: "displayFormName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "periodType",
                fieldName: "periodType",
                propertyType: "TEXT",
                klass: "org.hisp.dhis.period.PeriodType",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "instruction",
                fieldName: "instruction",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "legendSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "skipFormValidation",
                fieldName: "skipFormValidation",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "legendSets",
                fieldName: "legendSets",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "shortName",
                fieldName: "shortName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            {
                name: "aggregateExportAttributeOptionCombo",
                fieldName: "aggregateExportAttributeOptionCombo",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "dimensionItemType",
                fieldName: "dimensionItemType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.DimensionItemType",
            },
        ],
    },
    validationRuleGroups: {
        klass: "org.hisp.dhis.validation.ValidationRuleGroup",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/validationRuleGroups",
        plural: "validationRuleGroups",
        displayName: "Validation Rule Group",
        collectionName: "validationRuleGroups",
        nameableObject: false,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "validationRuleGroup",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "validationRule",
                fieldName: "members",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.validation.ValidationRule",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
        ],
    },
    visualizations: {
        klass: "org.hisp.dhis.visualization.Visualization",
        shareable: true,
        metadata: true,
        relativeApiEndpoint: "/visualizations",
        plural: "visualizations",
        displayName: "Visualization",
        collectionName: "visualizations",
        nameableObject: true,
        translatable: true,
        identifiableObject: true,
        dataShareable: false,
        name: "visualization",
        persisted: true,
        embeddedObject: false,
        properties: [
            {
                name: "dataElementGroupSetDimension",
                fieldName: "dataElementGroupSetDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.dataelement.DataElementGroupSetDimension",
            },
            {
                name: "orgUnitField",
                fieldName: "orgUnitField",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "endDate",
                fieldName: "endDate",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "legend",
                fieldName: "legend",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.visualization.LegendDefinitions",
            },
            {
                name: "baseLineValue",
                fieldName: "baseLineValue",
                propertyType: "NUMBER",
                klass: "java.lang.Double",
            },
            {
                name: "publicAccess",
                fieldName: "publicAccess",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "userOrganisationUnitChildren",
                fieldName: "userOrganisationUnitChildren",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            { name: "displaySubtitle", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "axes",
                fieldName: "axes",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.visualization.AxisV2",
            },
            {
                name: "legendDisplayStyle",
                fieldName: "legendDisplayStyle",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.legend.LegendDisplayStyle",
            },
            {
                name: "type",
                fieldName: "type",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.visualization.VisualizationType",
            },
            {
                name: "hideEmptyColumns",
                fieldName: "hideEmptyColumns",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "measureCriteria",
                fieldName: "measureCriteria",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "lastUpdated",
                fieldName: "lastUpdated",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            { name: "subscribed", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            { name: "displayTitle", propertyType: "TEXT", klass: "java.lang.String" },
            { name: "displayTargetLineLabel", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "attributeDimension",
                fieldName: "attributeDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.trackedentity.TrackedEntityAttributeDimension",
            },
            {
                name: "translation",
                fieldName: "translations",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.translation.Translation",
            },
            {
                name: "yearlySerie",
                fieldName: "yearlySeries",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.List",
                itemKlass: "java.lang.String",
            },
            {
                name: "userOrganisationUnit",
                fieldName: "userOrganisationUnit",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            { name: "href", fieldName: "href", propertyType: "URL", klass: "java.lang.String" },
            {
                name: "rowSubTotals",
                fieldName: "rowSubTotals",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "filterDimension",
                fieldName: "filterDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.List",
                itemKlass: "java.lang.String",
            },
            { name: "id", fieldName: "uid", propertyType: "IDENTIFIER", klass: "java.lang.String" },
            {
                name: "interpretation",
                fieldName: "interpretations",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.interpretation.Interpretation",
            },
            { name: "displayDescription", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "visualizationPeriodName",
                fieldName: "visualizationPeriodName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "userGroupAccess",
                fieldName: "userGroupAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserGroupAccess",
            },
            {
                name: "domainAxisLabel",
                fieldName: "domainAxisLabel",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "subscriber",
                fieldName: "subscribers",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "cumulativeValues",
                fieldName: "cumulativeValues",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "fontStyle",
                fieldName: "fontStyle",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.visualization.VisualizationFontStyle",
            },
            {
                name: "axis",
                fieldName: "optionalAxes",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.visualization.Axis",
            },
            {
                name: "showDimensionLabels",
                fieldName: "showDimensionLabels",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "sortOrder",
                fieldName: "sortOrder",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "subtitle",
                fieldName: "subtitle",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "fontSize",
                fieldName: "fontSize",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.FontSize",
            },
            {
                name: "rangeAxisDecimals",
                fieldName: "rangeAxisDecimals",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "shortName",
                fieldName: "shortName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "favorite", propertyType: "BOOLEAN", klass: "java.lang.Boolean" },
            {
                name: "topLimit",
                fieldName: "topLimit",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "startDate",
                fieldName: "startDate",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "access",
                fieldName: "access",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.security.acl.Access",
            },
            {
                name: "userOrganisationUnitGrandChildren",
                fieldName: "userOrganisationUnitGrandChildren",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            { name: "displayName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "column",
                fieldName: "columns",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.common.DimensionalObject",
            },
            { name: "displayShortName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "percentStackedValues",
                fieldName: "percentStackedValues",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "noSpaceBetweenColumns",
                fieldName: "noSpaceBetweenColumns",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "dataElementDimension",
                fieldName: "dataElementDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.trackedentity.TrackedEntityDataElementDimension",
            },
            {
                name: "rangeAxisSteps",
                fieldName: "rangeAxisSteps",
                propertyType: "INTEGER",
                klass: "java.lang.Integer",
            },
            {
                name: "formName",
                fieldName: "formName",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "period",
                fieldName: "periods",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.period.Period",
            },
            {
                name: "categoryDimension",
                fieldName: "categoryDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.category.CategoryDimension",
            },
            {
                name: "showHierarchy",
                fieldName: "showHierarchy",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            { name: "displayRangeAxisLabel", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "reportingParams",
                fieldName: "reportingParams",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.visualization.ReportingParams",
            },
            {
                name: "hideTitle",
                fieldName: "hideTitle",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "rowDimension",
                fieldName: "rowDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.List",
                itemKlass: "java.lang.String",
            },
            {
                name: "seriesItem",
                fieldName: "series",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.visualization.Series",
            },
            {
                name: "colorSet",
                fieldName: "colorSet",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            { name: "displayBaseLineLabel", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "skipRounding",
                fieldName: "skipRounding",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "showData",
                fieldName: "showData",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "numberType",
                fieldName: "numberType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.analytics.NumberType",
            },
            {
                name: "hideEmptyRows",
                fieldName: "hideEmptyRows",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "parentGraphMap",
                fieldName: "parentGraphMap",
                propertyType: "COMPLEX",
                klass: "java.util.Map",
            },
            {
                name: "itemOrganisationUnitGroup",
                fieldName: "itemOrganisationUnitGroups",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.organisationunit.OrganisationUnitGroup",
            },
            {
                name: "displayDensity",
                fieldName: "displayDensity",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.DisplayDensity",
            },
            {
                name: "lastUpdatedBy",
                fieldName: "lastUpdatedBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            { name: "displayDomainAxisLabel", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "programIndicatorDimension",
                fieldName: "programIndicatorDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.trackedentity.TrackedEntityProgramIndicatorDimension",
            },
            {
                name: "created",
                fieldName: "created",
                propertyType: "DATE",
                klass: "java.util.Date",
            },
            {
                name: "rangeAxisLabel",
                fieldName: "rangeAxisLabel",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "regressionType",
                fieldName: "regressionType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.RegressionType",
            },
            {
                name: "attributeValue",
                fieldName: "attributeValues",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.attribute.AttributeValue",
            },
            {
                name: "columnDimension",
                fieldName: "columnDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.List",
                itemKlass: "java.lang.String",
            },
            {
                name: "completedOnly",
                fieldName: "completedOnly",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "colTotals",
                fieldName: "colTotals",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "sharing",
                fieldName: "sharing",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.user.sharing.Sharing",
            },
            { name: "displayFormName", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "userAccess",
                fieldName: "userAccesses",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.Set",
                itemKlass: "org.hisp.dhis.user.UserAccess",
            },
            { name: "name", fieldName: "name", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "hideEmptyRowItems",
                fieldName: "hideEmptyRowItems",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.HideEmptyItemStrategy",
            },
            {
                name: "favorite",
                fieldName: "favorites",
                propertyType: "COLLECTION",
                itemPropertyType: "TEXT",
                klass: "java.util.Set",
                itemKlass: "java.lang.String",
            },
            {
                name: "aggregationType",
                fieldName: "aggregationType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.analytics.AggregationType",
            },
            {
                name: "dataDimensionItem",
                fieldName: "dataDimensionItems",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.common.DataDimensionItem",
            },
            {
                name: "code",
                fieldName: "code",
                propertyType: "IDENTIFIER",
                klass: "java.lang.String",
            },
            {
                name: "categoryOptionGroupSetDimension",
                fieldName: "categoryOptionGroupSetDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.category.CategoryOptionGroupSetDimension",
            },
            {
                name: "hideSubtitle",
                fieldName: "hideSubtitle",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "description",
                fieldName: "description",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "organisationUnitGroupSetDimension",
                fieldName: "organisationUnitGroupSetDimensions",
                propertyType: "COLLECTION",
                itemPropertyType: "COMPLEX",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.organisationunit.OrganisationUnitGroupSetDimension",
            },
            { name: "title", fieldName: "title", propertyType: "TEXT", klass: "java.lang.String" },
            {
                name: "hideLegend",
                fieldName: "hideLegend",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "externalAccess",
                fieldName: "externalAccess",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "rangeAxisMinValue",
                fieldName: "rangeAxisMinValue",
                propertyType: "NUMBER",
                klass: "java.lang.Double",
            },
            {
                name: "organisationUnitLevel",
                fieldName: "organisationUnitLevels",
                propertyType: "COLLECTION",
                itemPropertyType: "INTEGER",
                klass: "java.util.List",
                itemKlass: "java.lang.Integer",
            },
            {
                name: "legendDisplayStrategy",
                fieldName: "legendDisplayStrategy",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.legend.LegendDisplayStrategy",
            },
            {
                name: "colSubTotals",
                fieldName: "colSubTotals",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "relativePeriods",
                fieldName: "relatives",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.period.RelativePeriods",
            },
            {
                name: "targetLineLabel",
                fieldName: "targetLineLabel",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "organisationUnit",
                fieldName: "organisationUnits",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.organisationunit.OrganisationUnit",
            },
            {
                name: "rowTotals",
                fieldName: "rowTotals",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "timeField",
                fieldName: "timeField",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "targetLineValue",
                fieldName: "targetLineValue",
                propertyType: "NUMBER",
                klass: "java.lang.Double",
            },
            {
                name: "filter",
                fieldName: "filters",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.common.DimensionalObject",
            },
            {
                name: "row",
                fieldName: "rows",
                propertyType: "COLLECTION",
                itemPropertyType: "REFERENCE",
                klass: "java.util.List",
                itemKlass: "org.hisp.dhis.common.DimensionalObject",
            },
            {
                name: "outlierAnalysis",
                fieldName: "outlierAnalysis",
                propertyType: "COMPLEX",
                klass: "org.hisp.dhis.visualization.OutlierAnalysis",
            },
            {
                name: "baseLineLabel",
                fieldName: "baseLineLabel",
                propertyType: "TEXT",
                klass: "java.lang.String",
            },
            {
                name: "digitGroupSeparator",
                fieldName: "digitGroupSeparator",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.common.DigitGroupSeparator",
            },
            {
                name: "createdBy",
                fieldName: "createdBy",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.user.User",
            },
            {
                name: "regression",
                fieldName: "regression",
                propertyType: "BOOLEAN",
                klass: "java.lang.Boolean",
            },
            {
                name: "legendSet",
                fieldName: "legendSet",
                propertyType: "REFERENCE",
                klass: "org.hisp.dhis.legend.LegendSet",
            },
            {
                name: "userOrgUnitType",
                fieldName: "userOrgUnitType",
                propertyType: "CONSTANT",
                klass: "org.hisp.dhis.analytics.UserOrgUnitType",
            },
            {
                name: "rangeAxisMaxValue",
                fieldName: "rangeAxisMaxValue",
                propertyType: "NUMBER",
                klass: "java.lang.Double",
            },
            { name: "user", propertyType: "REFERENCE", klass: "org.hisp.dhis.user.User" },
        ],
    },
};

export type D2ModelSchemas = {
    analyticsPeriodBoundaries: D2AnalyticsPeriodBoundarySchema;
    analyticsTableHooks: D2AnalyticsTableHookSchema;
    attributes: D2AttributeSchema;
    attributeValues: D2AttributeValueSchema;
    categories: D2CategorySchema;
    categoryCombos: D2CategoryComboSchema;
    categoryDimensions: D2CategoryDimensionSchema;
    categoryOptions: D2CategoryOptionSchema;
    categoryOptionCombos: D2CategoryOptionComboSchema;
    categoryOptionGroups: D2CategoryOptionGroupSchema;
    categoryOptionGroupSets: D2CategoryOptionGroupSetSchema;
    categoryOptionGroupSetDimensions: D2CategoryOptionGroupSetDimensionSchema;
    charts: D2ChartSchema;
    constants: D2ConstantSchema;
    dashboards: D2DashboardSchema;
    dashboardItems: D2DashboardItemSchema;
    dataApprovalLevels: D2DataApprovalLevelSchema;
    dataApprovalWorkflows: D2DataApprovalWorkflowSchema;
    dataElements: D2DataElementSchema;
    dataElementGroups: D2DataElementGroupSchema;
    dataElementGroupSets: D2DataElementGroupSetSchema;
    dataElementGroupSetDimensions: D2DataElementGroupSetDimensionSchema;
    dataElementOperands: D2DataElementOperandSchema;
    dataEntryForms: D2DataEntryFormSchema;
    dataInputPeriods: D2DataInputPeriodSchema;
    dataSets: D2DataSetSchema;
    dataSetElements: D2DataSetElementSchema;
    dataSetNotificationTemplates: D2DataSetNotificationTemplateSchema;
    documents: D2DocumentSchema;
    eventCharts: D2EventChartSchema;
    eventReports: D2EventReportSchema;
    expressions: D2ExpressionSchema;
    externalFileResources: D2ExternalFileResourceSchema;
    externalMapLayers: D2ExternalMapLayerSchema;
    fileResources: D2FileResourceSchema;
    icons: D2IconSchema;
    indicators: D2IndicatorSchema;
    indicatorGroups: D2IndicatorGroupSchema;
    indicatorGroupSets: D2IndicatorGroupSetSchema;
    indicatorTypes: D2IndicatorTypeSchema;
    interpretations: D2InterpretationSchema;
    interpretationComments: D2InterpretationCommentSchema;
    jobConfigurations: D2JobConfigurationSchema;
    dataStores: D2KeyJsonValueSchema;
    legends: D2LegendSchema;
    legendSets: D2LegendSetSchema;
    maps: D2MapSchema;
    mapViews: D2MapViewSchema;
    messageConversations: D2MessageConversationSchema;
    metadataVersions: D2MetadataVersionSchema;
    minMaxDataElements: D2MinMaxDataElementSchema;
    oAuth2Clients: D2OAuth2ClientSchema;
    options: D2OptionSchema;
    optionGroups: D2OptionGroupSchema;
    optionGroupSets: D2OptionGroupSetSchema;
    optionSets: D2OptionSetSchema;
    organisationUnits: D2OrganisationUnitSchema;
    organisationUnitGroups: D2OrganisationUnitGroupSchema;
    organisationUnitGroupSets: D2OrganisationUnitGroupSetSchema;
    organisationUnitGroupSetDimensions: D2OrganisationUnitGroupSetDimensionSchema;
    organisationUnitLevels: D2OrganisationUnitLevelSchema;
    predictors: D2PredictorSchema;
    predictorGroups: D2PredictorGroupSchema;
    programs: D2ProgramSchema;
    programDataElements: D2ProgramDataElementDimensionItemSchema;
    programIndicators: D2ProgramIndicatorSchema;
    programIndicatorGroups: D2ProgramIndicatorGroupSchema;
    programInstances: D2ProgramInstanceSchema;
    programNotificationTemplates: D2ProgramNotificationTemplateSchema;
    programRules: D2ProgramRuleSchema;
    programRuleActions: D2ProgramRuleActionSchema;
    programRuleVariables: D2ProgramRuleVariableSchema;
    programSections: D2ProgramSectionSchema;
    programStages: D2ProgramStageSchema;
    programStageDataElements: D2ProgramStageDataElementSchema;
    programStageInstances: D2ProgramStageInstanceSchema;
    eventFilters: D2ProgramStageInstanceFilterSchema;
    programStageSections: D2ProgramStageSectionSchema;
    programTrackedEntityAttributes: D2ProgramTrackedEntityAttributeSchema;
    programTrackedEntityAttributeDimensionItems: D2ProgramTrackedEntityAttributeDimensionItemSchema;
    programTrackedEntityAttributeGroups: D2ProgramTrackedEntityAttributeGroupSchema;
    pushAnalysis: D2PushAnalysisSchema;
    relationships: D2RelationshipSchema;
    relationshipTypes: D2RelationshipTypeSchema;
    reports: D2ReportSchema;
    reportTables: D2ReportTableSchema;
    reportingRates: D2ReportingRateSchema;
    smsCommands: D2SMSCommandSchema;
    sections: D2SectionSchema;
    sqlViews: D2SqlViewSchema;
    trackedEntityAttributes: D2TrackedEntityAttributeSchema;
    trackedEntityAttributeValues: D2TrackedEntityAttributeValueSchema;
    trackedEntityDataElementDimensions: D2TrackedEntityDataElementDimensionSchema;
    trackedEntityInstances: D2TrackedEntityInstanceSchema;
    trackedEntityInstanceFilters: D2TrackedEntityInstanceFilterSchema;
    dataElementDimensions: D2TrackedEntityProgramIndicatorDimensionSchema;
    trackedEntityTypes: D2TrackedEntityTypeSchema;
    trackedEntityTypeAttributes: D2TrackedEntityTypeAttributeSchema;
    users: D2UserSchema;
    userAccesses: D2UserAccessSchema;
    userRoles: D2UserAuthorityGroupSchema;
    userCredentials: D2UserCredentialsSchema;
    userGroups: D2UserGroupSchema;
    userGroupAccesses: D2UserGroupAccessSchema;
    validationNotificationTemplates: D2ValidationNotificationTemplateSchema;
    validationResults: D2ValidationResultSchema;
    validationRules: D2ValidationRuleSchema;
    validationRuleGroups: D2ValidationRuleGroupSchema;
    visualizations: D2VisualizationSchema;
};
